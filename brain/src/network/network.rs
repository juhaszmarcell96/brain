use crate::math::matrix::Matrix;
use crate::math::dimensions::Dimensions;
use std::marker::PhantomData;
use std::fmt;

/*

    [1xn]       [1xm]       [1xo]       layers
                [1xm]       [1xo]       biases
          [nxm]       [mxo]             weights

*/

#[derive(Clone)]
pub struct Network<T> {
    layers: Vec<Matrix<T>>,
    weights: Vec<Matrix<T>>,
    biases: Vec<Matrix<T>>,
    valid_network: bool,
    _marker: PhantomData<T>,
}

impl<T> Network<T>
where
    T: Default + Clone + Copy + PartialOrd + num::Zero + num::Float + num::Signed,
    T: PartialEq + std::ops::Add<Output = T> + std::ops::Sub<Output = T> + std::ops::Mul<Output = T> + std::ops::Div<Output = T>,
    T: fmt::Debug
{
    pub fn new(num_layers: usize) -> Result<Self, String> {
        if num_layers < 3 {
            panic!("Less than 3 layers makes no sense");
        }
        
        let layers = vec![Matrix::new(1, 1); num_layers];
        let weights = vec![Matrix::new(1, 1); num_layers - 1];
        let biases = vec![Matrix::new(1, 1); num_layers - 1];
        
        Ok(Self {
            layers,
            weights,
            biases,
            valid_network: true,
            _marker: PhantomData,
        })
    }

    pub fn reshape(&mut self, num_layers: usize) {
        if num_layers < 3 {
            panic!("Less than 3 layers makes no sense");
        }
        self.layers = vec![Matrix::new(1, 1); num_layers];
        self.weights = vec![Matrix::new(1, 1); num_layers - 1];
        self.biases = vec![Matrix::new(1, 1); num_layers - 1];
        self.valid_network = true;
    }

    pub fn resize(&mut self, layer_index: usize, size: usize) {
        self.assert_valid_layer(layer_index);
        self.layers[layer_index] = Matrix::new(1, size);
        
        if self.is_input_layer(layer_index) {
            let next_layer_size = self.layers[layer_index + 1].cols();
            self.weights[layer_index] = Matrix::new(size, next_layer_size);
        } else if self.is_output_layer(layer_index) {
            let prev_layer_size = self.layers[layer_index - 1].cols();
            self.weights[layer_index - 1] = Matrix::new(prev_layer_size, size);
            self.biases[layer_index - 1] = Matrix::new(1, size);
        } else {
            let prev_layer_size = self.layers[layer_index - 1].cols();
            let next_layer_size = self.layers[layer_index + 1].cols();
            self.weights[layer_index - 1] = Matrix::new(prev_layer_size, size);
            self.weights[layer_index] = Matrix::new(size, next_layer_size);
            self.biases[layer_index - 1] = Matrix::new(1, size);
        }
    }

    pub fn forward(&mut self, input: &Matrix<T>) -> Matrix<T> {
        if !self.valid_network {
            panic!("Network is invalid");
        }
        if input.cols() != self.layers[0].cols() {
            panic!("Input size mismatch with input layer");
        }

        self.layers[0] = input.clone(); // Assign input to the first layer

        for i in 1..self.layers.len() {
            self.layers[i] = &(&self.layers[i - 1] * &self.weights[i - 1]) + &self.biases[i - 1];
            self.layers[i].apply(|x| x.max(T::zero()));
        }

        self.layers.last().unwrap().clone() // Return output layer
    }
}

impl<T> Network<T> {
    fn is_input_layer(&self, index: usize) -> bool {
        index == 0
    }

    fn is_output_layer(&self, index: usize) -> bool {
        index == self.layers.len() - 1
    }
    
    fn assert_valid_layer(&self, index: usize) {
        if index >= self.layers.len() {
            panic!("Layer does not exist");
        }
    }
    
    pub fn get_num_layers(&self) -> usize {
        self.layers.len()
    }

    pub fn get_num_weight_layers(&self) -> usize {
        self.weights.len()
    }

    pub fn get_num_bias_layers(&self) -> usize {
        self.biases.len()
    }
}

impl<T: Default + Copy> Network<T> {
    fn assert_valid_weight_layer(&self, layer_index: usize) {
        assert!(layer_index < self.weights.len(), "Invalid weight layer index");
    }

    fn assert_valid_bias_layer(&self, layer_index: usize) {
        assert!(layer_index < self.biases.len(), "Invalid bias layer index");
    }

    pub fn get_weight(&self, weight_layer_index: usize, row: usize, col: usize) -> T {
        self.assert_valid_weight_layer(weight_layer_index);
        let mat = &self.weights[weight_layer_index];
        mat.assert_valid_element(row, col);
        mat[row][col]
    }

    pub fn set_weight(&mut self, weight_layer_index: usize, row: usize, col: usize, value: T) {
        self.assert_valid_weight_layer(weight_layer_index);
        let mat = &mut self.weights[weight_layer_index];
        mat.assert_valid_element(row, col);
        mat[row][col] = value;
    }

    pub fn get_bias(&self, bias_layer_index: usize, col: usize) -> T {
        self.assert_valid_bias_layer(bias_layer_index);
        let mat = &self.biases[bias_layer_index];
        mat.assert_valid_element(0, col);
        mat[0][col]
    }

    pub fn set_bias(&mut self, bias_layer_index: usize, col: usize, value: T) {
        self.assert_valid_bias_layer(bias_layer_index);
        let mat = &mut self.biases[bias_layer_index];
        mat.assert_valid_element(0, col);
        mat[0][col] = value;
    }

    pub fn get_weights_dimension(&self, weight_layer_index: usize) -> Dimensions {
        self.assert_valid_weight_layer(weight_layer_index);
        self.weights[weight_layer_index].get_dimensions()
    }

    pub fn get_biases_dimension(&self, bias_layer_index: usize) -> Dimensions {
        self.assert_valid_bias_layer(bias_layer_index);
        self.biases[bias_layer_index].get_dimensions()
    }
}

impl<T: fmt::Debug> fmt::Display for Network<T> {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        for (i, layer) in self.layers.iter().enumerate() {
            writeln!(f, "Layer {}: {:?}", i, layer)?;
            if i > 0 {
                writeln!(f, "Biases: {:?}", self.biases[i - 1])?;
            }
            if i < self.weights.len() {
                writeln!(f, "Weights: {:?}", self.weights[i])?;
            }
        }
        Ok(())
    }
}

impl<T: PartialEq> PartialEq for Network<T> {
    fn eq(&self, other: &Self) -> bool {
        if self.get_num_layers() != other.get_num_layers() {
            return false;
        }
        if self.weights.len() != other.weights.len() || self.biases.len() != other.biases.len() {
            return false;
        }
        self.weights.iter().zip(&other.weights).all(|(w1, w2)| w1 == w2)
            && self.biases.iter().zip(&other.biases).all(|(b1, b2)| b1 == b2)
    }
}

#[cfg(test)]
mod tests {
    use num::Float;

    use super::*;

    // Helper function to create a test network
    fn create_test_network() -> Network<f64> {
        let mut network = Network::new(3).expect("Failed to create network"); // panic if could not create network
        network.resize(0, 3);
        network.resize(1, 4);
        network.resize(2, 2);
        network
    }

    #[test]
    fn test_constructor() {
        // Network::new() panics for invalid layers, so we catch it using should_panic.
        let result = std::panic::catch_unwind(|| Network::<f64>::new(2));
        assert!(result.is_err(), "Network::new should panic for less than 3 layers");

        // Valid constructor should succeed without panic.
        let result = std::panic::catch_unwind(|| Network::<f64>::new(3));
        assert!(result.is_ok(), "Network::new should not panic for 3 or more layers");
    }

    #[test]
    fn test_dimensions() {
        let network = create_test_network();
        assert_eq!(network.get_num_layers(), 3);
        assert_eq!(network.get_num_weight_layers(), 2);
        assert_eq!(network.get_num_bias_layers(), 2);
        let dims = network.get_weights_dimension(0);
        assert_eq!(dims.rows, 3);
        assert_eq!(dims.cols, 4);
        let dims = network.get_weights_dimension(1);
        assert_eq!(dims.rows, 4);
        assert_eq!(dims.cols, 2);
        let dims = network.get_biases_dimension(0);
        assert_eq!(dims.rows, 1);
        assert_eq!(dims.cols, 4);
        let dims = network.get_biases_dimension(1);
        assert_eq!(dims.rows, 1);
        assert_eq!(dims.cols, 2);
    }

    #[test]
    fn test_reshape() {
        let mut network = create_test_network();
        assert_eq!(network.get_num_layers(), 3);

        network.reshape(4);
        assert_eq!(network.get_num_layers(), 4);
    }

    #[test]
    #[should_panic(expected = "Less than 3 layers makes no sense")]
    fn test_bad_reshape() {
        let mut network = create_test_network();
        assert_eq!(network.get_num_layers(), 3);

        network.reshape(2);
    }

    #[test]
    fn test_resize() {
        let mut network = create_test_network();
        network.resize(0, 5); // Input layer resize
        network.resize(1, 6); // Hidden layer resize
        network.resize(2, 3); // Output layer resize

        // Verify that the new sizes were correctly applied
        assert_eq!(network.layers[0].cols(), 5);
        assert_eq!(network.layers[1].cols(), 6);
        assert_eq!(network.layers[2].cols(), 3);
    }

    #[test]
    #[should_panic(expected = "Layer does not exist")]
    fn test_resize_invalid_layer() {
        let mut network = create_test_network();
        network.resize(10, 3); // Invalid layer index
    }

    #[test]
    fn test_forward() {
        let mut network = create_test_network();
        let input = Matrix::new(1, 3); // Input size must match input layer

        // Forward pass should work without panicking
        let output = network.forward(&input);

        // Output should have the same size as the last layer
        assert_eq!(output.cols(), network.layers.last().unwrap().cols());
    }

    #[test]
    #[should_panic(expected = "Input size mismatch with input layer")]
    fn test_forward_invalid_input() {
        let mut network = create_test_network();
        let invalid_input = Matrix::new(1, 5); // Incorrect input size
        network.forward(&invalid_input);
    }



    #[test]
    fn test_forward_propagation() {
        let mut network = Network::new(3).expect("Failed to create network"); // panic if could not create network
        network.resize(0, 30);
        network.resize(1, 100);
        network.resize(2, 10);
        // seed : 7
        // shape : 30, 100, 10
        network.resize(0, 30);
        network.resize(1, 100);
        network.resize(2, 10);
        network.set_weight(0, 0, 0, -0.8473834212520857);
        network.set_weight(0, 0, 1, 0.5598375844802292);
        network.set_weight(0, 0, 2, -0.123181537118213);
        network.set_weight(0, 0, 3, 0.44693035566188244);
        network.set_weight(0, 0, 4, 0.9559790239932053);
        network.set_weight(0, 0, 5, 0.07699174082086735);
        network.set_weight(0, 0, 6, 0.002240927319875796);
        network.set_weight(0, 0, 7, -0.8558977332804769);
        network.set_weight(0, 0, 8, -0.46312203979625766);
        network.set_weight(0, 0, 9, -0.00023499834888007776);
        network.set_weight(0, 0, 10, 0.35845999224188096);
        network.set_weight(0, 0, 11, 0.6074780722087509);
        network.set_weight(0, 0, 12, -0.23811773370292322);
        network.set_weight(0, 0, 13, -0.8681273061881898);
        network.set_weight(0, 0, 14, -0.4237088013840129);
        network.set_weight(0, 0, 15, 0.8191870554392273);
        network.set_weight(0, 0, 16, -0.573229292840169);
        network.set_weight(0, 0, 17, -0.09575207636463379);
        network.set_weight(0, 0, 18, 0.8624120393780434);
        network.set_weight(0, 0, 19, -0.950201544899304);
        network.set_weight(0, 0, 20, 0.20109783492824507);
        network.set_weight(0, 0, 21, 0.9002590008272913);
        network.set_weight(0, 0, 22, -0.5393942419580704);
        network.set_weight(0, 0, 23, 0.09697983847206082);
        network.set_weight(0, 0, 24, 0.8182567497734625);
        network.set_weight(0, 0, 25, -0.7336611084814997);
        network.set_weight(0, 0, 26, 0.046825161347531674);
        network.set_weight(0, 0, 27, 0.5008197182040697);
        network.set_weight(0, 0, 28, 0.33802648176782757);
        network.set_weight(0, 0, 29, -0.06449428051003858);
        network.set_weight(0, 0, 30, -0.5903018194044098);
        network.set_weight(0, 0, 31, -0.01846822181785912);
        network.set_weight(0, 0, 32, -0.25523062122988205);
        network.set_weight(0, 0, 33, -0.04519769029682319);
        network.set_weight(0, 0, 34, -0.2682192284388141);
        network.set_weight(0, 0, 35, 0.6758359886185212);
        network.set_weight(0, 0, 36, 0.5372950130390186);
        network.set_weight(0, 0, 37, -0.37201064557467567);
        network.set_weight(0, 0, 38, 0.14525066528790798);
        network.set_weight(0, 0, 39, -0.4479019033386098);
        network.set_weight(0, 0, 40, -0.0943141349071992);
        network.set_weight(0, 0, 41, -0.2940432681112106);
        network.set_weight(0, 0, 42, 0.3147989255595165);
        network.set_weight(0, 0, 43, -0.2592978340239296);
        network.set_weight(0, 0, 44, -0.08181404421713712);
        network.set_weight(0, 0, 45, 0.4386482450180831);
        network.set_weight(0, 0, 46, -0.17401634177233083);
        network.set_weight(0, 0, 47, 0.8128465383286774);
        network.set_weight(0, 0, 48, -0.6390967615946368);
        network.set_weight(0, 0, 49, 0.48223774582652856);
        network.set_weight(0, 0, 50, -0.1552519127137193);
        network.set_weight(0, 0, 51, -0.14709285463011534);
        network.set_weight(0, 0, 52, 0.26875973726767755);
        network.set_weight(0, 0, 53, 0.04581240205669057);
        network.set_weight(0, 0, 54, -0.17022804312111361);
        network.set_weight(0, 0, 55, -0.9971462388744836);
        network.set_weight(0, 0, 56, -0.8154753083064958);
        network.set_weight(0, 0, 57, 0.41878878745042547);
        network.set_weight(0, 0, 58, 0.04869119353039442);
        network.set_weight(0, 0, 59, 0.39232092703393784);
        network.set_weight(0, 0, 60, 0.9109366460058519);
        network.set_weight(0, 0, 61, 0.36582770875083503);
        network.set_weight(0, 0, 62, -0.8937426186540849);
        network.set_weight(0, 0, 63, -0.38229463027240573);
        network.set_weight(0, 0, 64, 0.1851893746467459);
        network.set_weight(0, 0, 65, -0.5297591854850714);
        network.set_weight(0, 0, 66, 0.9299419990722537);
        network.set_weight(0, 0, 67, 0.8900964475855877);
        network.set_weight(0, 0, 68, 0.6968017616753774);
        network.set_weight(0, 0, 69, -0.05535200742319546);
        network.set_weight(0, 0, 70, 0.6829534297967945);
        network.set_weight(0, 0, 71, -0.7377787153041722);
        network.set_weight(0, 0, 72, -0.38253268540432916);
        network.set_weight(0, 0, 73, -0.07400721169116586);
        network.set_weight(0, 0, 74, 0.48369440136693354);
        network.set_weight(0, 0, 75, -0.028349542582206677);
        network.set_weight(0, 0, 76, -0.7262477624050983);
        network.set_weight(0, 0, 77, -0.31292694059128334);
        network.set_weight(0, 0, 78, -0.35114766065511405);
        network.set_weight(0, 0, 79, -0.3991621913639205);
        network.set_weight(0, 0, 80, -0.6689971990684251);
        network.set_weight(0, 0, 81, -0.170196454853496);
        network.set_weight(0, 0, 82, -0.10375868499455332);
        network.set_weight(0, 0, 83, 0.5498007516280343);
        network.set_weight(0, 0, 84, 0.592781401565097);
        network.set_weight(0, 0, 85, 0.04478025600322377);
        network.set_weight(0, 0, 86, -0.07873940767344623);
        network.set_weight(0, 0, 87, 0.5564272030877933);
        network.set_weight(0, 0, 88, 0.7745779037054696);
        network.set_weight(0, 0, 89, 0.34983753973357534);
        network.set_weight(0, 0, 90, 0.6009580979969271);
        network.set_weight(0, 0, 91, 0.8782227074643707);
        network.set_weight(0, 0, 92, -0.9186883811266284);
        network.set_weight(0, 0, 93, 0.7513434497401665);
        network.set_weight(0, 0, 94, -0.4468738550977316);
        network.set_weight(0, 0, 95, -0.048471001151511484);
        network.set_weight(0, 0, 96, 0.5935219138638046);
        network.set_weight(0, 0, 97, 0.43448446455045997);
        network.set_weight(0, 0, 98, -0.7057048561166139);
        network.set_weight(0, 0, 99, 0.3174965179082909);
        network.set_weight(0, 1, 0, -0.8614958599803291);
        network.set_weight(0, 1, 1, -0.2858587432942421);
        network.set_weight(0, 1, 2, 0.6256591003274126);
        network.set_weight(0, 1, 3, -0.14459033394489884);
        network.set_weight(0, 1, 4, 0.19970887508689272);
        network.set_weight(0, 1, 5, 0.4563225662942676);
        network.set_weight(0, 1, 6, 0.642455216613119);
        network.set_weight(0, 1, 7, 0.5210302399605662);
        network.set_weight(0, 1, 8, -0.985713449442003);
        network.set_weight(0, 1, 9, -0.15948633265492984);
        network.set_weight(0, 1, 10, -0.07372756392370539);
        network.set_weight(0, 1, 11, -0.8890009937745547);
        network.set_weight(0, 1, 12, 0.08288426419043926);
        network.set_weight(0, 1, 13, 0.21554150288773433);
        network.set_weight(0, 1, 14, 0.6569063899922507);
        network.set_weight(0, 1, 15, 0.883618536382897);
        network.set_weight(0, 1, 16, -0.7437042919945343);
        network.set_weight(0, 1, 17, -0.5391386511795611);
        network.set_weight(0, 1, 18, 0.3183167941411218);
        network.set_weight(0, 1, 19, -0.7350520223665029);
        network.set_weight(0, 1, 20, -0.5518427261073613);
        network.set_weight(0, 1, 21, 0.1497251751782982);
        network.set_weight(0, 1, 22, -0.6609525528675817);
        network.set_weight(0, 1, 23, 0.5644603026475565);
        network.set_weight(0, 1, 24, 0.7139512522235203);
        network.set_weight(0, 1, 25, -0.9326515909943036);
        network.set_weight(0, 1, 26, 0.06528960988734722);
        network.set_weight(0, 1, 27, 0.5939027148871288);
        network.set_weight(0, 1, 28, 0.9502793623142314);
        network.set_weight(0, 1, 29, -0.4514828136111575);
        network.set_weight(0, 1, 30, -0.6617978732692333);
        network.set_weight(0, 1, 31, 0.7534018603632706);
        network.set_weight(0, 1, 32, 0.8183649275216973);
        network.set_weight(0, 1, 33, -0.6049342210656863);
        network.set_weight(0, 1, 34, -0.11694051459472043);
        network.set_weight(0, 1, 35, 0.438464283384673);
        network.set_weight(0, 1, 36, 0.6906903175279469);
        network.set_weight(0, 1, 37, -0.6634493892655113);
        network.set_weight(0, 1, 38, 0.3299379258095221);
        network.set_weight(0, 1, 39, 0.615670918592139);
        network.set_weight(0, 1, 40, 0.09942824160145491);
        network.set_weight(0, 1, 41, -0.6705666824419743);
        network.set_weight(0, 1, 42, -0.9289423903392733);
        network.set_weight(0, 1, 43, -0.4369323643030125);
        network.set_weight(0, 1, 44, 0.6157416929071031);
        network.set_weight(0, 1, 45, -0.910467478309722);
        network.set_weight(0, 1, 46, -0.9835669899213759);
        network.set_weight(0, 1, 47, -0.2767667045758855);
        network.set_weight(0, 1, 48, -0.8727554286028962);
        network.set_weight(0, 1, 49, -0.7010273933515392);
        network.set_weight(0, 1, 50, -0.9536192638012757);
        network.set_weight(0, 1, 51, 0.04943967353726375);
        network.set_weight(0, 1, 52, 0.3933918043788258);
        network.set_weight(0, 1, 53, -0.14589301397254473);
        network.set_weight(0, 1, 54, -0.7308590827106247);
        network.set_weight(0, 1, 55, -0.33728557807518866);
        network.set_weight(0, 1, 56, 0.18069170861267025);
        network.set_weight(0, 1, 57, 0.8813227867927762);
        network.set_weight(0, 1, 58, 0.9851154383452805);
        network.set_weight(0, 1, 59, -0.5167941666923004);
        network.set_weight(0, 1, 60, -0.9788401861233085);
        network.set_weight(0, 1, 61, 0.6612806519876093);
        network.set_weight(0, 1, 62, 0.8532258755401132);
        network.set_weight(0, 1, 63, -0.08279304046406133);
        network.set_weight(0, 1, 64, 0.5428846891273644);
        network.set_weight(0, 1, 65, 0.7323980681687823);
        network.set_weight(0, 1, 66, 0.21922959666911845);
        network.set_weight(0, 1, 67, 0.7452543662883742);
        network.set_weight(0, 1, 68, -0.9521939477153383);
        network.set_weight(0, 1, 69, -0.4568095594808723);
        network.set_weight(0, 1, 70, -0.4455608346114095);
        network.set_weight(0, 1, 71, -0.7587351433876837);
        network.set_weight(0, 1, 72, 0.8214269085764765);
        network.set_weight(0, 1, 73, -0.9391214666687537);
        network.set_weight(0, 1, 74, 0.34512205904422544);
        network.set_weight(0, 1, 75, -0.8573206254855854);
        network.set_weight(0, 1, 76, -0.2784390124295577);
        network.set_weight(0, 1, 77, -0.16380091464486823);
        network.set_weight(0, 1, 78, -0.6371914218852661);
        network.set_weight(0, 1, 79, 0.04202820656435269);
        network.set_weight(0, 1, 80, 0.06998352185583134);
        network.set_weight(0, 1, 81, -0.3659122361276077);
        network.set_weight(0, 1, 82, 0.47417611910458146);
        network.set_weight(0, 1, 83, -0.679595178761661);
        network.set_weight(0, 1, 84, -0.6149835620802893);
        network.set_weight(0, 1, 85, -0.29097796390878794);
        network.set_weight(0, 1, 86, -0.24324773313716141);
        network.set_weight(0, 1, 87, -0.5874282869986913);
        network.set_weight(0, 1, 88, 0.8374184102845361);
        network.set_weight(0, 1, 89, 0.6561871390938951);
        network.set_weight(0, 1, 90, -0.7862465114867172);
        network.set_weight(0, 1, 91, -0.26102816867923195);
        network.set_weight(0, 1, 92, -0.5346578087360525);
        network.set_weight(0, 1, 93, -0.09784279409891505);
        network.set_weight(0, 1, 94, -0.44736562757841325);
        network.set_weight(0, 1, 95, 0.0036137822368469408);
        network.set_weight(0, 1, 96, 0.8452063061559136);
        network.set_weight(0, 1, 97, -0.2349777221403324);
        network.set_weight(0, 1, 98, 0.30025665725726536);
        network.set_weight(0, 1, 99, 0.19124222604074825);
        network.set_weight(0, 2, 0, 0.5039071222844151);
        network.set_weight(0, 2, 1, -0.8766693396602627);
        network.set_weight(0, 2, 2, 0.48964734736361915);
        network.set_weight(0, 2, 3, 0.8925518543448556);
        network.set_weight(0, 2, 4, 0.20711910339097295);
        network.set_weight(0, 2, 5, -0.42484011576019953);
        network.set_weight(0, 2, 6, 0.34473843685857286);
        network.set_weight(0, 2, 7, 0.42409757356278965);
        network.set_weight(0, 2, 8, 0.3129005730772041);
        network.set_weight(0, 2, 9, -0.7061393686129129);
        network.set_weight(0, 2, 10, 0.9469511365394017);
        network.set_weight(0, 2, 11, 0.9107669036417578);
        network.set_weight(0, 2, 12, -0.1507489344087174);
        network.set_weight(0, 2, 13, 0.1872746588177443);
        network.set_weight(0, 2, 14, -0.9207428522662113);
        network.set_weight(0, 2, 15, 0.9772686691238772);
        network.set_weight(0, 2, 16, 0.6374899852465976);
        network.set_weight(0, 2, 17, 0.2730046848593346);
        network.set_weight(0, 2, 18, 0.5221694884433719);
        network.set_weight(0, 2, 19, -0.6239401428348277);
        network.set_weight(0, 2, 20, -0.38469081981429687);
        network.set_weight(0, 2, 21, -0.5072127114285583);
        network.set_weight(0, 2, 22, 0.19209824025030087);
        network.set_weight(0, 2, 23, -0.8161902956724554);
        network.set_weight(0, 2, 24, 0.7912199704298839);
        network.set_weight(0, 2, 25, -0.07544811573854471);
        network.set_weight(0, 2, 26, -0.1103752700912426);
        network.set_weight(0, 2, 27, -0.7905773928535125);
        network.set_weight(0, 2, 28, 0.36980807412022765);
        network.set_weight(0, 2, 29, 0.6337879886848963);
        network.set_weight(0, 2, 30, 0.2591003429246639);
        network.set_weight(0, 2, 31, -0.5159547850717343);
        network.set_weight(0, 2, 32, 0.5708414431710194);
        network.set_weight(0, 2, 33, -0.7086411332331322);
        network.set_weight(0, 2, 34, 0.6545526579591943);
        network.set_weight(0, 2, 35, 0.16141074122377153);
        network.set_weight(0, 2, 36, -0.4212543768431276);
        network.set_weight(0, 2, 37, 0.026486799687478024);
        network.set_weight(0, 2, 38, 0.2577028061292941);
        network.set_weight(0, 2, 39, -0.4828210028147084);
        network.set_weight(0, 2, 40, 0.6938131209199481);
        network.set_weight(0, 2, 41, -0.15749258280145328);
        network.set_weight(0, 2, 42, 0.7846749145104641);
        network.set_weight(0, 2, 43, 0.6709371222950695);
        network.set_weight(0, 2, 44, -0.8013049716807388);
        network.set_weight(0, 2, 45, 0.2925082188975845);
        network.set_weight(0, 2, 46, -0.37901086700851505);
        network.set_weight(0, 2, 47, 0.5081063939663497);
        network.set_weight(0, 2, 48, 0.0852633148954629);
        network.set_weight(0, 2, 49, -0.084802250696566);
        network.set_weight(0, 2, 50, 0.790733569074124);
        network.set_weight(0, 2, 51, -0.8854928803996647);
        network.set_weight(0, 2, 52, 0.11463525173595857);
        network.set_weight(0, 2, 53, -0.3441778014066472);
        network.set_weight(0, 2, 54, -0.9294533273730745);
        network.set_weight(0, 2, 55, 0.5070370374058353);
        network.set_weight(0, 2, 56, 0.12348131213775293);
        network.set_weight(0, 2, 57, 0.7882906739124311);
        network.set_weight(0, 2, 58, 0.19652245514366173);
        network.set_weight(0, 2, 59, -0.32593144113946404);
        network.set_weight(0, 2, 60, 0.9704393107590932);
        network.set_weight(0, 2, 61, -0.7685718987813892);
        network.set_weight(0, 2, 62, -0.8947965148424228);
        network.set_weight(0, 2, 63, 0.4652438189041619);
        network.set_weight(0, 2, 64, -0.2582502014210315);
        network.set_weight(0, 2, 65, -0.2770698427429268);
        network.set_weight(0, 2, 66, 0.7530643129791443);
        network.set_weight(0, 2, 67, -0.34541270696922677);
        network.set_weight(0, 2, 68, 0.7779771937682183);
        network.set_weight(0, 2, 69, 0.28797595846324464);
        network.set_weight(0, 2, 70, -0.3419009122264758);
        network.set_weight(0, 2, 71, -0.8809346911750662);
        network.set_weight(0, 2, 72, -0.5097812947188838);
        network.set_weight(0, 2, 73, 0.936826402433699);
        network.set_weight(0, 2, 74, -0.18946471953209);
        network.set_weight(0, 2, 75, -0.6799330771093444);
        network.set_weight(0, 2, 76, -0.40397350159829304);
        network.set_weight(0, 2, 77, 0.7991515577226496);
        network.set_weight(0, 2, 78, -0.6700465689829957);
        network.set_weight(0, 2, 79, 0.5557201331345627);
        network.set_weight(0, 2, 80, -0.7302707372062063);
        network.set_weight(0, 2, 81, 0.9227874268758471);
        network.set_weight(0, 2, 82, 0.06041077218312463);
        network.set_weight(0, 2, 83, -0.9136601288049571);
        network.set_weight(0, 2, 84, 0.8619093554803994);
        network.set_weight(0, 2, 85, -0.28354891108175617);
        network.set_weight(0, 2, 86, 0.46284255780021333);
        network.set_weight(0, 2, 87, 0.047416029599496756);
        network.set_weight(0, 2, 88, -0.8148363937100855);
        network.set_weight(0, 2, 89, -0.7878815639588828);
        network.set_weight(0, 2, 90, -0.7015500986178265);
        network.set_weight(0, 2, 91, -0.6775999815663061);
        network.set_weight(0, 2, 92, -0.8944884137509934);
        network.set_weight(0, 2, 93, -0.9059736699341996);
        network.set_weight(0, 2, 94, 0.8968565921174372);
        network.set_weight(0, 2, 95, -0.8174164200207714);
        network.set_weight(0, 2, 96, 0.016703351776779174);
        network.set_weight(0, 2, 97, -0.7627403592528477);
        network.set_weight(0, 2, 98, -0.5704242975825788);
        network.set_weight(0, 2, 99, 0.5261441455621676);
        network.set_weight(0, 3, 0, 0.8762696420566984);
        network.set_weight(0, 3, 1, -0.06057461055356539);
        network.set_weight(0, 3, 2, -0.9887160921620042);
        network.set_weight(0, 3, 3, 0.9984166027946499);
        network.set_weight(0, 3, 4, -0.9044535746281284);
        network.set_weight(0, 3, 5, -0.22110419193892672);
        network.set_weight(0, 3, 6, 0.07811340136327183);
        network.set_weight(0, 3, 7, 0.7834668751084384);
        network.set_weight(0, 3, 8, 0.6462242233210835);
        network.set_weight(0, 3, 9, 0.2187732820892483);
        network.set_weight(0, 3, 10, -0.20279541804826873);
        network.set_weight(0, 3, 11, 0.6689574383245336);
        network.set_weight(0, 3, 12, 0.7381167726113398);
        network.set_weight(0, 3, 13, 0.7438098146919709);
        network.set_weight(0, 3, 14, 0.4352728708266973);
        network.set_weight(0, 3, 15, -0.8044253120441653);
        network.set_weight(0, 3, 16, -0.40284114373120206);
        network.set_weight(0, 3, 17, -0.028155888025054088);
        network.set_weight(0, 3, 18, 0.010106734402682394);
        network.set_weight(0, 3, 19, 0.6657468254750278);
        network.set_weight(0, 3, 20, -0.5243264525941549);
        network.set_weight(0, 3, 21, 0.32918151109771565);
        network.set_weight(0, 3, 22, -0.2516002050768118);
        network.set_weight(0, 3, 23, 0.5509651064527132);
        network.set_weight(0, 3, 24, -0.6084513413550916);
        network.set_weight(0, 3, 25, -0.04674541321394554);
        network.set_weight(0, 3, 26, -0.7928828392731864);
        network.set_weight(0, 3, 27, -0.5760196517340443);
        network.set_weight(0, 3, 28, 0.8703493726885396);
        network.set_weight(0, 3, 29, -0.3679057789843432);
        network.set_weight(0, 3, 30, 0.7859540081799965);
        network.set_weight(0, 3, 31, 0.04860617497124253);
        network.set_weight(0, 3, 32, -0.9219336970495493);
        network.set_weight(0, 3, 33, 0.5859633646677136);
        network.set_weight(0, 3, 34, -0.8960862097350208);
        network.set_weight(0, 3, 35, 0.6538870567279791);
        network.set_weight(0, 3, 36, -0.982401778599441);
        network.set_weight(0, 3, 37, 0.3482226546933489);
        network.set_weight(0, 3, 38, -0.6685721505077651);
        network.set_weight(0, 3, 39, -0.31424952374783977);
        network.set_weight(0, 3, 40, 0.9055027895906964);
        network.set_weight(0, 3, 41, -0.027533053738293622);
        network.set_weight(0, 3, 42, 0.3148527703237154);
        network.set_weight(0, 3, 43, 0.48147019252296896);
        network.set_weight(0, 3, 44, -0.780144046925576);
        network.set_weight(0, 3, 45, 0.6775915162219559);
        network.set_weight(0, 3, 46, 0.8278398774451032);
        network.set_weight(0, 3, 47, -0.6891586953011821);
        network.set_weight(0, 3, 48, 0.09247685778954673);
        network.set_weight(0, 3, 49, -0.43298975362548164);
        network.set_weight(0, 3, 50, 0.4812934617195783);
        network.set_weight(0, 3, 51, -0.9434592142850013);
        network.set_weight(0, 3, 52, 0.025094006882774078);
        network.set_weight(0, 3, 53, 0.5856297107132777);
        network.set_weight(0, 3, 54, 0.4694738155850535);
        network.set_weight(0, 3, 55, -0.7836323371327181);
        network.set_weight(0, 3, 56, 0.6658802174675515);
        network.set_weight(0, 3, 57, -0.5243185397658534);
        network.set_weight(0, 3, 58, 0.6155752624336623);
        network.set_weight(0, 3, 59, -0.0057423362751083395);
        network.set_weight(0, 3, 60, -0.6783484697254119);
        network.set_weight(0, 3, 61, 0.4680813551340155);
        network.set_weight(0, 3, 62, 0.615825904278394);
        network.set_weight(0, 3, 63, 0.39780229997189775);
        network.set_weight(0, 3, 64, 0.9296926780539232);
        network.set_weight(0, 3, 65, -0.4877110975880976);
        network.set_weight(0, 3, 66, -0.5284753460040366);
        network.set_weight(0, 3, 67, -0.7055398163767999);
        network.set_weight(0, 3, 68, 0.07881241990131382);
        network.set_weight(0, 3, 69, -0.2011023552285689);
        network.set_weight(0, 3, 70, -0.2866759025708532);
        network.set_weight(0, 3, 71, -0.07939079813627758);
        network.set_weight(0, 3, 72, -0.45091554414185286);
        network.set_weight(0, 3, 73, -0.9914792446698804);
        network.set_weight(0, 3, 74, -0.05649862229717573);
        network.set_weight(0, 3, 75, -0.448230966983707);
        network.set_weight(0, 3, 76, -0.10043278214022378);
        network.set_weight(0, 3, 77, 0.8577502280231875);
        network.set_weight(0, 3, 78, -0.6419891863305565);
        network.set_weight(0, 3, 79, 0.2749671560136191);
        network.set_weight(0, 3, 80, 0.28882979252488106);
        network.set_weight(0, 3, 81, -0.43741363288673596);
        network.set_weight(0, 3, 82, -0.05822400654186355);
        network.set_weight(0, 3, 83, 0.9392232832626484);
        network.set_weight(0, 3, 84, -0.3150797491977191);
        network.set_weight(0, 3, 85, 0.42469036490436585);
        network.set_weight(0, 3, 86, 0.6804383113626191);
        network.set_weight(0, 3, 87, -0.2786177845660682);
        network.set_weight(0, 3, 88, 0.9798282681064605);
        network.set_weight(0, 3, 89, 0.2517384809552625);
        network.set_weight(0, 3, 90, 0.0019705411878447876);
        network.set_weight(0, 3, 91, 0.42981503501250096);
        network.set_weight(0, 3, 92, -0.1523401322668818);
        network.set_weight(0, 3, 93, 0.4246534456871862);
        network.set_weight(0, 3, 94, -0.45039523333079434);
        network.set_weight(0, 3, 95, 0.8544166286913768);
        network.set_weight(0, 3, 96, 0.08392567586751887);
        network.set_weight(0, 3, 97, -0.5167010128254887);
        network.set_weight(0, 3, 98, -0.12560666313699542);
        network.set_weight(0, 3, 99, 0.7901930812417903);
        network.set_weight(0, 4, 0, 0.6141106381442258);
        network.set_weight(0, 4, 1, -0.031062095922673283);
        network.set_weight(0, 4, 2, -0.29659664651934015);
        network.set_weight(0, 4, 3, -0.24750517179541864);
        network.set_weight(0, 4, 4, 0.9623907151914859);
        network.set_weight(0, 4, 5, -0.775574429736601);
        network.set_weight(0, 4, 6, 0.7780477911384183);
        network.set_weight(0, 4, 7, 0.7152177468533985);
        network.set_weight(0, 4, 8, -0.5512231881254113);
        network.set_weight(0, 4, 9, -0.30128253166404173);
        network.set_weight(0, 4, 10, 0.13911977345086646);
        network.set_weight(0, 4, 11, 0.6047854074804935);
        network.set_weight(0, 4, 12, 0.9008908106762727);
        network.set_weight(0, 4, 13, 0.983617407166202);
        network.set_weight(0, 4, 14, -0.4375365862355496);
        network.set_weight(0, 4, 15, -0.6152728513182986);
        network.set_weight(0, 4, 16, -0.024549694665023658);
        network.set_weight(0, 4, 17, 0.11512780186813654);
        network.set_weight(0, 4, 18, 0.3134093607865498);
        network.set_weight(0, 4, 19, -0.784817735371327);
        network.set_weight(0, 4, 20, 0.2927120387103066);
        network.set_weight(0, 4, 21, 0.8427581613566761);
        network.set_weight(0, 4, 22, 0.8304021356590827);
        network.set_weight(0, 4, 23, 0.8875479986001507);
        network.set_weight(0, 4, 24, 0.8446791950637678);
        network.set_weight(0, 4, 25, 0.9215556549652846);
        network.set_weight(0, 4, 26, -0.9026149257673011);
        network.set_weight(0, 4, 27, 0.8320363814045322);
        network.set_weight(0, 4, 28, -0.45757438421579333);
        network.set_weight(0, 4, 29, -0.358668529067689);
        network.set_weight(0, 4, 30, -0.08277151810407424);
        network.set_weight(0, 4, 31, 0.9105607900152695);
        network.set_weight(0, 4, 32, 0.2101778053114598);
        network.set_weight(0, 4, 33, -0.2946135666959262);
        network.set_weight(0, 4, 34, -0.2516847048944655);
        network.set_weight(0, 4, 35, 0.8098569776463347);
        network.set_weight(0, 4, 36, 0.6446951364719413);
        network.set_weight(0, 4, 37, -0.7249245595280482);
        network.set_weight(0, 4, 38, -0.5026362676856628);
        network.set_weight(0, 4, 39, -0.25610959786152065);
        network.set_weight(0, 4, 40, -0.5665160194196541);
        network.set_weight(0, 4, 41, 0.12696350542723533);
        network.set_weight(0, 4, 42, -0.5527224801080386);
        network.set_weight(0, 4, 43, 0.14984899289399456);
        network.set_weight(0, 4, 44, 0.8720492428123765);
        network.set_weight(0, 4, 45, 0.697351951067172);
        network.set_weight(0, 4, 46, -0.8014730738348639);
        network.set_weight(0, 4, 47, -0.5861904032591445);
        network.set_weight(0, 4, 48, -0.1745015154720011);
        network.set_weight(0, 4, 49, 0.29225515331849494);
        network.set_weight(0, 4, 50, -0.2268672743302298);
        network.set_weight(0, 4, 51, -0.4967752633195823);
        network.set_weight(0, 4, 52, -0.31068192574252396);
        network.set_weight(0, 4, 53, -0.5919728269404179);
        network.set_weight(0, 4, 54, 0.7237334390453658);
        network.set_weight(0, 4, 55, 0.39450342468665744);
        network.set_weight(0, 4, 56, -0.17794179518811437);
        network.set_weight(0, 4, 57, 0.4008628564199417);
        network.set_weight(0, 4, 58, 0.03945863495745239);
        network.set_weight(0, 4, 59, 0.05252442231714061);
        network.set_weight(0, 4, 60, -0.2652887830720936);
        network.set_weight(0, 4, 61, -0.02356328285538578);
        network.set_weight(0, 4, 62, 0.9710324833907387);
        network.set_weight(0, 4, 63, 0.568929734625496);
        network.set_weight(0, 4, 64, 0.6554005853034872);
        network.set_weight(0, 4, 65, -0.7512562971516366);
        network.set_weight(0, 4, 66, 0.008547966169307974);
        network.set_weight(0, 4, 67, -0.26619811919587466);
        network.set_weight(0, 4, 68, -0.8221860585449117);
        network.set_weight(0, 4, 69, -0.20944594752730383);
        network.set_weight(0, 4, 70, -0.8516246505354834);
        network.set_weight(0, 4, 71, -0.5319605710695052);
        network.set_weight(0, 4, 72, 0.5975254225032189);
        network.set_weight(0, 4, 73, 0.372434952487932);
        network.set_weight(0, 4, 74, 0.3970932766931867);
        network.set_weight(0, 4, 75, -0.8412842461383727);
        network.set_weight(0, 4, 76, -0.6720354448255474);
        network.set_weight(0, 4, 77, -0.9568317118582657);
        network.set_weight(0, 4, 78, -0.8049709461799417);
        network.set_weight(0, 4, 79, -0.7975623951437671);
        network.set_weight(0, 4, 80, 0.9202893832422001);
        network.set_weight(0, 4, 81, 0.7879025269426683);
        network.set_weight(0, 4, 82, -0.5914920428931398);
        network.set_weight(0, 4, 83, -0.49237409058476134);
        network.set_weight(0, 4, 84, 0.9217556982715864);
        network.set_weight(0, 4, 85, 0.13999529425105028);
        network.set_weight(0, 4, 86, -0.26295341462057076);
        network.set_weight(0, 4, 87, -0.06691141704978687);
        network.set_weight(0, 4, 88, -0.45558010264427873);
        network.set_weight(0, 4, 89, 0.1671545599787907);
        network.set_weight(0, 4, 90, 0.45054364477956543);
        network.set_weight(0, 4, 91, 0.030896511476400823);
        network.set_weight(0, 4, 92, 0.6413326690770615);
        network.set_weight(0, 4, 93, -0.7735789298780449);
        network.set_weight(0, 4, 94, 0.2073059477158239);
        network.set_weight(0, 4, 95, 0.9792045946109289);
        network.set_weight(0, 4, 96, -0.701841900264887);
        network.set_weight(0, 4, 97, -0.009927867208446628);
        network.set_weight(0, 4, 98, 0.26029056888348734);
        network.set_weight(0, 4, 99, -0.3249411595764018);
        network.set_weight(0, 5, 0, 0.9292346385049608);
        network.set_weight(0, 5, 1, -0.029179184615756304);
        network.set_weight(0, 5, 2, -0.042602627364537016);
        network.set_weight(0, 5, 3, 0.8053274088527453);
        network.set_weight(0, 5, 4, -0.9681791775111204);
        network.set_weight(0, 5, 5, 0.7377703179533222);
        network.set_weight(0, 5, 6, -0.7418531984244932);
        network.set_weight(0, 5, 7, -0.2416631635472073);
        network.set_weight(0, 5, 8, -0.023087659138035788);
        network.set_weight(0, 5, 9, -0.046882606168682894);
        network.set_weight(0, 5, 10, -0.9211828836637641);
        network.set_weight(0, 5, 11, -0.3657857452114277);
        network.set_weight(0, 5, 12, -0.2864106192653082);
        network.set_weight(0, 5, 13, 0.9123586537278883);
        network.set_weight(0, 5, 14, 0.8339707499571818);
        network.set_weight(0, 5, 15, 0.16869726839319577);
        network.set_weight(0, 5, 16, 0.8667354098746287);
        network.set_weight(0, 5, 17, 0.7274248066889288);
        network.set_weight(0, 5, 18, -0.2485545977669481);
        network.set_weight(0, 5, 19, -0.7660662978886588);
        network.set_weight(0, 5, 20, 0.21427509380033039);
        network.set_weight(0, 5, 21, -0.35398112160355);
        network.set_weight(0, 5, 22, -0.980514994176739);
        network.set_weight(0, 5, 23, 0.9623587042490744);
        network.set_weight(0, 5, 24, 0.9385521908979984);
        network.set_weight(0, 5, 25, 0.0736128915581511);
        network.set_weight(0, 5, 26, 0.2363714044389158);
        network.set_weight(0, 5, 27, 0.3377336035220728);
        network.set_weight(0, 5, 28, 0.8530774180881016);
        network.set_weight(0, 5, 29, -0.0649826439414447);
        network.set_weight(0, 5, 30, 0.16575635290924406);
        network.set_weight(0, 5, 31, -0.5469206869924597);
        network.set_weight(0, 5, 32, -0.5152035149899332);
        network.set_weight(0, 5, 33, 0.044224389445181034);
        network.set_weight(0, 5, 34, -0.5415900971795298);
        network.set_weight(0, 5, 35, -0.9394944291398784);
        network.set_weight(0, 5, 36, -0.26318408103730584);
        network.set_weight(0, 5, 37, 0.49989028827310533);
        network.set_weight(0, 5, 38, -0.44585963440896914);
        network.set_weight(0, 5, 39, 0.7254078769761616);
        network.set_weight(0, 5, 40, 0.4050047694664074);
        network.set_weight(0, 5, 41, 0.3066382182960985);
        network.set_weight(0, 5, 42, 0.7849662818062733);
        network.set_weight(0, 5, 43, -0.8523779385001209);
        network.set_weight(0, 5, 44, -0.642469200990033);
        network.set_weight(0, 5, 45, 0.818540444918777);
        network.set_weight(0, 5, 46, 0.8140747536395814);
        network.set_weight(0, 5, 47, -0.8434654882030208);
        network.set_weight(0, 5, 48, 0.5484631051104423);
        network.set_weight(0, 5, 49, -0.9691351691262187);
        network.set_weight(0, 5, 50, -0.729528893262908);
        network.set_weight(0, 5, 51, -0.7804788526125794);
        network.set_weight(0, 5, 52, -0.4120088443632346);
        network.set_weight(0, 5, 53, -0.22346315871278022);
        network.set_weight(0, 5, 54, 0.8217477285417234);
        network.set_weight(0, 5, 55, -0.1272043744540894);
        network.set_weight(0, 5, 56, -0.752301845212821);
        network.set_weight(0, 5, 57, -0.4553025056985327);
        network.set_weight(0, 5, 58, -0.9872463437974348);
        network.set_weight(0, 5, 59, -0.9439011942076208);
        network.set_weight(0, 5, 60, -0.13786335708714348);
        network.set_weight(0, 5, 61, 0.024376536383552416);
        network.set_weight(0, 5, 62, -0.5000768334418);
        network.set_weight(0, 5, 63, -0.24021516661508158);
        network.set_weight(0, 5, 64, -0.7932620546169213);
        network.set_weight(0, 5, 65, 0.3176431235489239);
        network.set_weight(0, 5, 66, -0.2147888590646856);
        network.set_weight(0, 5, 67, -0.6769488010506819);
        network.set_weight(0, 5, 68, -0.005212737427560565);
        network.set_weight(0, 5, 69, -0.5832503204941204);
        network.set_weight(0, 5, 70, -0.4157414440674281);
        network.set_weight(0, 5, 71, -0.7516591342771644);
        network.set_weight(0, 5, 72, 0.5614609823295345);
        network.set_weight(0, 5, 73, -0.441369543448658);
        network.set_weight(0, 5, 74, 0.9113533118107622);
        network.set_weight(0, 5, 75, -0.1891361782062877);
        network.set_weight(0, 5, 76, -0.689611016635775);
        network.set_weight(0, 5, 77, 0.4104259379868531);
        network.set_weight(0, 5, 78, 0.46711629651732833);
        network.set_weight(0, 5, 79, 0.7626392920467617);
        network.set_weight(0, 5, 80, -0.7369750481403166);
        network.set_weight(0, 5, 81, 0.5797719181553138);
        network.set_weight(0, 5, 82, 0.7195181749233011);
        network.set_weight(0, 5, 83, -0.3909634096082335);
        network.set_weight(0, 5, 84, -0.0910356367775722);
        network.set_weight(0, 5, 85, 0.2392839180838222);
        network.set_weight(0, 5, 86, -0.5089737133643242);
        network.set_weight(0, 5, 87, 0.7427118392631833);
        network.set_weight(0, 5, 88, 0.39838850982217355);
        network.set_weight(0, 5, 89, 0.7133660917386633);
        network.set_weight(0, 5, 90, -0.10016990016287441);
        network.set_weight(0, 5, 91, 0.037996725865512726);
        network.set_weight(0, 5, 92, -0.6114911099397675);
        network.set_weight(0, 5, 93, -0.3719512368082738);
        network.set_weight(0, 5, 94, 0.45902431903984175);
        network.set_weight(0, 5, 95, 0.9180155563354397);
        network.set_weight(0, 5, 96, -0.6957942631581397);
        network.set_weight(0, 5, 97, -0.8987129445335953);
        network.set_weight(0, 5, 98, -0.8650946517607498);
        network.set_weight(0, 5, 99, -0.12905646235606438);
        network.set_weight(0, 6, 0, 0.5853425546338262);
        network.set_weight(0, 6, 1, -0.5502454599213022);
        network.set_weight(0, 6, 2, -0.04573585720963069);
        network.set_weight(0, 6, 3, 0.030804367326944027);
        network.set_weight(0, 6, 4, 0.6754047961543375);
        network.set_weight(0, 6, 5, -0.6719335860332332);
        network.set_weight(0, 6, 6, -0.9705627878384806);
        network.set_weight(0, 6, 7, 0.013310064651285813);
        network.set_weight(0, 6, 8, -0.2895081664387986);
        network.set_weight(0, 6, 9, -0.41566924828642793);
        network.set_weight(0, 6, 10, 0.5444741949131677);
        network.set_weight(0, 6, 11, 0.3669341427610444);
        network.set_weight(0, 6, 12, -0.8321257046398756);
        network.set_weight(0, 6, 13, 0.09620672545273345);
        network.set_weight(0, 6, 14, 0.5956892382211905);
        network.set_weight(0, 6, 15, 0.8193686749504125);
        network.set_weight(0, 6, 16, -0.9996301619401209);
        network.set_weight(0, 6, 17, 0.615100197371607);
        network.set_weight(0, 6, 18, -0.9135041446788215);
        network.set_weight(0, 6, 19, 0.3642411608211511);
        network.set_weight(0, 6, 20, 0.19601420730113772);
        network.set_weight(0, 6, 21, 0.9040325844799915);
        network.set_weight(0, 6, 22, 0.2637581844803929);
        network.set_weight(0, 6, 23, -0.8601218718318409);
        network.set_weight(0, 6, 24, 0.34079596629633);
        network.set_weight(0, 6, 25, -0.49015916670265547);
        network.set_weight(0, 6, 26, 0.6638879870694852);
        network.set_weight(0, 6, 27, -0.937075820178793);
        network.set_weight(0, 6, 28, -0.3517283524569019);
        network.set_weight(0, 6, 29, 0.35287177396004865);
        network.set_weight(0, 6, 30, -0.6887303997200327);
        network.set_weight(0, 6, 31, 0.2925440185114039);
        network.set_weight(0, 6, 32, 0.39444961055637817);
        network.set_weight(0, 6, 33, 0.46755532992773685);
        network.set_weight(0, 6, 34, 0.7506703843021558);
        network.set_weight(0, 6, 35, -0.17366776789604121);
        network.set_weight(0, 6, 36, -0.7150340530175183);
        network.set_weight(0, 6, 37, -0.4793781392177088);
        network.set_weight(0, 6, 38, -0.2206291971146943);
        network.set_weight(0, 6, 39, -0.8908448596467344);
        network.set_weight(0, 6, 40, 0.4170976594986957);
        network.set_weight(0, 6, 41, -0.8739787044517555);
        network.set_weight(0, 6, 42, -0.8845824855430793);
        network.set_weight(0, 6, 43, 0.8649990744435987);
        network.set_weight(0, 6, 44, 0.612491756681683);
        network.set_weight(0, 6, 45, -0.49263790637273863);
        network.set_weight(0, 6, 46, -0.3165838163873993);
        network.set_weight(0, 6, 47, 0.6518393996024388);
        network.set_weight(0, 6, 48, 0.23847092931670488);
        network.set_weight(0, 6, 49, -0.4701647675806493);
        network.set_weight(0, 6, 50, -0.10196160812005961);
        network.set_weight(0, 6, 51, 0.7111191746337993);
        network.set_weight(0, 6, 52, -0.9986172947359029);
        network.set_weight(0, 6, 53, 0.9847877329089669);
        network.set_weight(0, 6, 54, 0.1318670679709597);
        network.set_weight(0, 6, 55, -0.63595984641942);
        network.set_weight(0, 6, 56, 0.6003856115210329);
        network.set_weight(0, 6, 57, -0.8476096239451396);
        network.set_weight(0, 6, 58, -0.17999984126026614);
        network.set_weight(0, 6, 59, 0.1462645265363609);
        network.set_weight(0, 6, 60, -0.5056113034360443);
        network.set_weight(0, 6, 61, 0.7704656348751173);
        network.set_weight(0, 6, 62, 0.39378807715309483);
        network.set_weight(0, 6, 63, -0.6763437222065727);
        network.set_weight(0, 6, 64, -0.69480099654249);
        network.set_weight(0, 6, 65, -0.8761336049729713);
        network.set_weight(0, 6, 66, 0.14299702822474947);
        network.set_weight(0, 6, 67, -0.6254659797353748);
        network.set_weight(0, 6, 68, 0.08596535219120605);
        network.set_weight(0, 6, 69, 0.6389449562464324);
        network.set_weight(0, 6, 70, 0.7583700415367343);
        network.set_weight(0, 6, 71, -0.7672993267928827);
        network.set_weight(0, 6, 72, -0.33552514744435946);
        network.set_weight(0, 6, 73, -0.16524856518198283);
        network.set_weight(0, 6, 74, -0.2331650468864006);
        network.set_weight(0, 6, 75, -0.1623420850916173);
        network.set_weight(0, 6, 76, -0.08002503729310972);
        network.set_weight(0, 6, 77, 0.5131005909493311);
        network.set_weight(0, 6, 78, -0.3889684215086675);
        network.set_weight(0, 6, 79, -0.31315134414639734);
        network.set_weight(0, 6, 80, -0.21951052993056286);
        network.set_weight(0, 6, 81, -0.6975630696217163);
        network.set_weight(0, 6, 82, 0.2607468662889858);
        network.set_weight(0, 6, 83, -0.1995079539761757);
        network.set_weight(0, 6, 84, 0.8323051514195099);
        network.set_weight(0, 6, 85, 0.6428317505556085);
        network.set_weight(0, 6, 86, -0.5396401922206002);
        network.set_weight(0, 6, 87, -0.5153720556175805);
        network.set_weight(0, 6, 88, 0.5645411829946954);
        network.set_weight(0, 6, 89, 0.11977391072175858);
        network.set_weight(0, 6, 90, -0.9795785886048172);
        network.set_weight(0, 6, 91, 0.25976610530650457);
        network.set_weight(0, 6, 92, -0.210174175303252);
        network.set_weight(0, 6, 93, 0.5704275306232645);
        network.set_weight(0, 6, 94, 0.4936940689668503);
        network.set_weight(0, 6, 95, 0.8446560170838);
        network.set_weight(0, 6, 96, 0.3985719425287346);
        network.set_weight(0, 6, 97, 0.825957173686211);
        network.set_weight(0, 6, 98, -0.43069036267781646);
        network.set_weight(0, 6, 99, -0.3225686201534623);
        network.set_weight(0, 7, 0, -0.8815983093722488);
        network.set_weight(0, 7, 1, 0.7338722188101305);
        network.set_weight(0, 7, 2, -0.6915648242116474);
        network.set_weight(0, 7, 3, 0.10263902431461425);
        network.set_weight(0, 7, 4, 0.018390776866547);
        network.set_weight(0, 7, 5, 0.6278701578907206);
        network.set_weight(0, 7, 6, -0.2240210671785312);
        network.set_weight(0, 7, 7, -0.7146706557473888);
        network.set_weight(0, 7, 8, -0.23383790800382753);
        network.set_weight(0, 7, 9, -0.9039000107666952);
        network.set_weight(0, 7, 10, -0.3970603736279681);
        network.set_weight(0, 7, 11, 0.26000542443649);
        network.set_weight(0, 7, 12, -0.8857137118626499);
        network.set_weight(0, 7, 13, 0.9793924529056295);
        network.set_weight(0, 7, 14, 0.0723781778668684);
        network.set_weight(0, 7, 15, -0.39985629360614716);
        network.set_weight(0, 7, 16, 0.6675744869016311);
        network.set_weight(0, 7, 17, -0.7250696374604844);
        network.set_weight(0, 7, 18, -0.3560720560745556);
        network.set_weight(0, 7, 19, 0.874300015943716);
        network.set_weight(0, 7, 20, -0.520133835285634);
        network.set_weight(0, 7, 21, 0.4657838543906856);
        network.set_weight(0, 7, 22, -0.8381392349839532);
        network.set_weight(0, 7, 23, 0.06494927186650679);
        network.set_weight(0, 7, 24, 0.31622221239294745);
        network.set_weight(0, 7, 25, -0.5805539092939977);
        network.set_weight(0, 7, 26, -0.34473975690151426);
        network.set_weight(0, 7, 27, 0.10101815346188348);
        network.set_weight(0, 7, 28, 0.1799699170265463);
        network.set_weight(0, 7, 29, -0.6915648877493437);
        network.set_weight(0, 7, 30, -0.1784506950960696);
        network.set_weight(0, 7, 31, 0.9994660283346115);
        network.set_weight(0, 7, 32, -0.3551301137375642);
        network.set_weight(0, 7, 33, 0.5707121210152659);
        network.set_weight(0, 7, 34, -0.5967721533258639);
        network.set_weight(0, 7, 35, -0.07761207309282869);
        network.set_weight(0, 7, 36, 0.03633910817155406);
        network.set_weight(0, 7, 37, 0.19203657985205824);
        network.set_weight(0, 7, 38, 0.43530594966025005);
        network.set_weight(0, 7, 39, 0.5918207544160876);
        network.set_weight(0, 7, 40, 0.4003314306686949);
        network.set_weight(0, 7, 41, 0.6144010410198217);
        network.set_weight(0, 7, 42, 0.7719233989347907);
        network.set_weight(0, 7, 43, -0.3477614298586613);
        network.set_weight(0, 7, 44, 0.654618609795135);
        network.set_weight(0, 7, 45, 0.039956371206669505);
        network.set_weight(0, 7, 46, -0.48114426755525774);
        network.set_weight(0, 7, 47, -0.6538525911974649);
        network.set_weight(0, 7, 48, 0.5288980131636807);
        network.set_weight(0, 7, 49, 0.273265657037828);
        network.set_weight(0, 7, 50, -0.8585372621842102);
        network.set_weight(0, 7, 51, 0.17490745084381643);
        network.set_weight(0, 7, 52, -0.91090676089007);
        network.set_weight(0, 7, 53, -0.21748789893358267);
        network.set_weight(0, 7, 54, 0.14232247587746572);
        network.set_weight(0, 7, 55, 0.3003893093105774);
        network.set_weight(0, 7, 56, -0.684294488382929);
        network.set_weight(0, 7, 57, -0.9103267215708177);
        network.set_weight(0, 7, 58, 0.15204752849981662);
        network.set_weight(0, 7, 59, 0.6375685121062575);
        network.set_weight(0, 7, 60, 0.5932232620711508);
        network.set_weight(0, 7, 61, -0.2806802169296434);
        network.set_weight(0, 7, 62, 0.15390223425110516);
        network.set_weight(0, 7, 63, 0.4373957593781259);
        network.set_weight(0, 7, 64, 0.7463767814237223);
        network.set_weight(0, 7, 65, -0.016745427144666092);
        network.set_weight(0, 7, 66, 0.751000229413824);
        network.set_weight(0, 7, 67, -0.36454224020881076);
        network.set_weight(0, 7, 68, -0.5614957175089237);
        network.set_weight(0, 7, 69, -0.41175343717779356);
        network.set_weight(0, 7, 70, 0.45953484534663547);
        network.set_weight(0, 7, 71, 0.7702808266240091);
        network.set_weight(0, 7, 72, -0.057635621993195496);
        network.set_weight(0, 7, 73, 0.391835466749362);
        network.set_weight(0, 7, 74, -0.7223724912091531);
        network.set_weight(0, 7, 75, 0.014858570406359739);
        network.set_weight(0, 7, 76, -0.13031771345408671);
        network.set_weight(0, 7, 77, -0.1367914800565897);
        network.set_weight(0, 7, 78, -0.6239106750347074);
        network.set_weight(0, 7, 79, 0.24556208877309937);
        network.set_weight(0, 7, 80, 0.3441446190269415);
        network.set_weight(0, 7, 81, 0.27264762993350034);
        network.set_weight(0, 7, 82, 0.4855126382165105);
        network.set_weight(0, 7, 83, -0.0835533871886176);
        network.set_weight(0, 7, 84, 0.7051989809973418);
        network.set_weight(0, 7, 85, 0.14242439912551053);
        network.set_weight(0, 7, 86, 0.7636200082349707);
        network.set_weight(0, 7, 87, -0.1796904936254211);
        network.set_weight(0, 7, 88, 0.40027723850924146);
        network.set_weight(0, 7, 89, -0.606389938516894);
        network.set_weight(0, 7, 90, -0.8338660034395704);
        network.set_weight(0, 7, 91, 0.8630047830911307);
        network.set_weight(0, 7, 92, -0.2583245102203515);
        network.set_weight(0, 7, 93, -0.9086029647942615);
        network.set_weight(0, 7, 94, 0.23690702495573812);
        network.set_weight(0, 7, 95, 0.8665224507342588);
        network.set_weight(0, 7, 96, 0.5380179975617636);
        network.set_weight(0, 7, 97, 0.9744942260607079);
        network.set_weight(0, 7, 98, 0.8702338549663635);
        network.set_weight(0, 7, 99, -0.08893304203188612);
        network.set_weight(0, 8, 0, -0.5321805054721296);
        network.set_weight(0, 8, 1, -0.8695230326096806);
        network.set_weight(0, 8, 2, -0.4557525556012849);
        network.set_weight(0, 8, 3, 0.26430428480338697);
        network.set_weight(0, 8, 4, 0.8217826519284084);
        network.set_weight(0, 8, 5, -0.9965842439154888);
        network.set_weight(0, 8, 6, 0.6349689391244393);
        network.set_weight(0, 8, 7, 0.5289295867406172);
        network.set_weight(0, 8, 8, 0.38196509050926664);
        network.set_weight(0, 8, 9, -0.7442456735435592);
        network.set_weight(0, 8, 10, -0.8934888546777748);
        network.set_weight(0, 8, 11, 0.47350843711261414);
        network.set_weight(0, 8, 12, 0.28281848306986235);
        network.set_weight(0, 8, 13, -0.260203852103041);
        network.set_weight(0, 8, 14, -0.30898386647372056);
        network.set_weight(0, 8, 15, -0.9347132709623973);
        network.set_weight(0, 8, 16, 0.9868685364838212);
        network.set_weight(0, 8, 17, 0.6732843041668062);
        network.set_weight(0, 8, 18, 0.9483815258757706);
        network.set_weight(0, 8, 19, 0.6360749486188091);
        network.set_weight(0, 8, 20, -0.08229417451031851);
        network.set_weight(0, 8, 21, 0.6903295929015718);
        network.set_weight(0, 8, 22, -0.6032850083652752);
        network.set_weight(0, 8, 23, 0.34494931641871607);
        network.set_weight(0, 8, 24, -0.5255613096817415);
        network.set_weight(0, 8, 25, -0.2150450672872335);
        network.set_weight(0, 8, 26, 0.7433601977084683);
        network.set_weight(0, 8, 27, -0.15009782347581413);
        network.set_weight(0, 8, 28, 0.7874320880035865);
        network.set_weight(0, 8, 29, 0.19911875337572438);
        network.set_weight(0, 8, 30, -0.412507717547518);
        network.set_weight(0, 8, 31, -0.4792860703875681);
        network.set_weight(0, 8, 32, -0.9932518829066299);
        network.set_weight(0, 8, 33, 0.14419608386388338);
        network.set_weight(0, 8, 34, 0.6771391357733212);
        network.set_weight(0, 8, 35, -0.5505630553259035);
        network.set_weight(0, 8, 36, -0.04151381765544593);
        network.set_weight(0, 8, 37, 0.9677921429184999);
        network.set_weight(0, 8, 38, -0.21322529416279123);
        network.set_weight(0, 8, 39, 0.8768936648238839);
        network.set_weight(0, 8, 40, 0.6531814296863461);
        network.set_weight(0, 8, 41, -0.010774837850799024);
        network.set_weight(0, 8, 42, 0.27072832657803336);
        network.set_weight(0, 8, 43, -0.8688337861775295);
        network.set_weight(0, 8, 44, 0.0328652120490065);
        network.set_weight(0, 8, 45, 0.5198671585145291);
        network.set_weight(0, 8, 46, -0.5392668165442789);
        network.set_weight(0, 8, 47, -0.897026596880983);
        network.set_weight(0, 8, 48, -0.9411976170233476);
        network.set_weight(0, 8, 49, -0.6793685177031603);
        network.set_weight(0, 8, 50, -0.524466003743608);
        network.set_weight(0, 8, 51, 0.6108033748010926);
        network.set_weight(0, 8, 52, -0.08177092011443432);
        network.set_weight(0, 8, 53, 0.07111675491289082);
        network.set_weight(0, 8, 54, -0.3737978838263638);
        network.set_weight(0, 8, 55, -0.4023433439475568);
        network.set_weight(0, 8, 56, 0.10697098464007704);
        network.set_weight(0, 8, 57, 0.4915780264766427);
        network.set_weight(0, 8, 58, -0.638619667564317);
        network.set_weight(0, 8, 59, -0.13070110015320302);
        network.set_weight(0, 8, 60, 0.2881739045810634);
        network.set_weight(0, 8, 61, 0.9201877610979963);
        network.set_weight(0, 8, 62, -0.4611926262289907);
        network.set_weight(0, 8, 63, -0.2142719146480896);
        network.set_weight(0, 8, 64, 0.13860459196509622);
        network.set_weight(0, 8, 65, -0.7162048898298035);
        network.set_weight(0, 8, 66, 0.2231659434312343);
        network.set_weight(0, 8, 67, 0.9489144936391201);
        network.set_weight(0, 8, 68, -0.45315948315365007);
        network.set_weight(0, 8, 69, -0.038836882792487426);
        network.set_weight(0, 8, 70, -0.7647234704065362);
        network.set_weight(0, 8, 71, 0.03612050316426196);
        network.set_weight(0, 8, 72, 0.9431538367068841);
        network.set_weight(0, 8, 73, 0.08475251952700424);
        network.set_weight(0, 8, 74, -0.5729970954213146);
        network.set_weight(0, 8, 75, -0.3784855199480044);
        network.set_weight(0, 8, 76, 0.2528148792886429);
        network.set_weight(0, 8, 77, 0.7140468756247322);
        network.set_weight(0, 8, 78, -0.09312461688026286);
        network.set_weight(0, 8, 79, -0.019759756418085805);
        network.set_weight(0, 8, 80, 0.6187106408484824);
        network.set_weight(0, 8, 81, -0.7894125654147304);
        network.set_weight(0, 8, 82, 0.9024912176535069);
        network.set_weight(0, 8, 83, -0.07046987717366826);
        network.set_weight(0, 8, 84, -0.3367002834805115);
        network.set_weight(0, 8, 85, 0.557089789473866);
        network.set_weight(0, 8, 86, -0.48705475232550843);
        network.set_weight(0, 8, 87, -0.7071267431343238);
        network.set_weight(0, 8, 88, -0.4837566341589059);
        network.set_weight(0, 8, 89, 0.34506173958169706);
        network.set_weight(0, 8, 90, -0.7986640395686859);
        network.set_weight(0, 8, 91, -0.09738185452838555);
        network.set_weight(0, 8, 92, -0.5288813570717164);
        network.set_weight(0, 8, 93, 0.09135633153747813);
        network.set_weight(0, 8, 94, -0.7234391164455465);
        network.set_weight(0, 8, 95, 0.5479325338712602);
        network.set_weight(0, 8, 96, 0.8478251316107372);
        network.set_weight(0, 8, 97, -0.3612815645035261);
        network.set_weight(0, 8, 98, -0.2910428675529557);
        network.set_weight(0, 8, 99, 0.19617047994463932);
        network.set_weight(0, 9, 0, 0.47763667744064997);
        network.set_weight(0, 9, 1, -0.8834526334469075);
        network.set_weight(0, 9, 2, 0.3495563904274386);
        network.set_weight(0, 9, 3, 0.6284964891875275);
        network.set_weight(0, 9, 4, 0.5850424182579088);
        network.set_weight(0, 9, 5, -0.12279723608394222);
        network.set_weight(0, 9, 6, 0.6455408705945793);
        network.set_weight(0, 9, 7, 0.09415336777927696);
        network.set_weight(0, 9, 8, -0.6265498225021875);
        network.set_weight(0, 9, 9, -0.4285263219902371);
        network.set_weight(0, 9, 10, 0.18547191682167297);
        network.set_weight(0, 9, 11, 0.10494960687377097);
        network.set_weight(0, 9, 12, 0.604336544191066);
        network.set_weight(0, 9, 13, 0.4297869651173589);
        network.set_weight(0, 9, 14, -0.5738797006752674);
        network.set_weight(0, 9, 15, -0.20522733860307585);
        network.set_weight(0, 9, 16, 0.5561483616655243);
        network.set_weight(0, 9, 17, -0.08376374483692839);
        network.set_weight(0, 9, 18, -0.5499394820742658);
        network.set_weight(0, 9, 19, 0.8741895339406864);
        network.set_weight(0, 9, 20, -0.10184881105604382);
        network.set_weight(0, 9, 21, -0.38254614495798633);
        network.set_weight(0, 9, 22, 0.022516541265797052);
        network.set_weight(0, 9, 23, -0.39816328272842183);
        network.set_weight(0, 9, 24, -0.45923248054868493);
        network.set_weight(0, 9, 25, 0.32306357679713327);
        network.set_weight(0, 9, 26, 0.5904666171222921);
        network.set_weight(0, 9, 27, -0.18233652672298928);
        network.set_weight(0, 9, 28, -0.6781196684846411);
        network.set_weight(0, 9, 29, -0.04840922421953353);
        network.set_weight(0, 9, 30, -0.1967985155343337);
        network.set_weight(0, 9, 31, -0.1285774016858352);
        network.set_weight(0, 9, 32, -0.520248007947363);
        network.set_weight(0, 9, 33, 0.539194738252941);
        network.set_weight(0, 9, 34, -0.5955447789198085);
        network.set_weight(0, 9, 35, -0.9227069501168135);
        network.set_weight(0, 9, 36, 0.40022726251679597);
        network.set_weight(0, 9, 37, 0.4850022795507982);
        network.set_weight(0, 9, 38, -0.5224812880741185);
        network.set_weight(0, 9, 39, -0.6531881594623696);
        network.set_weight(0, 9, 40, 0.16106255881245635);
        network.set_weight(0, 9, 41, 0.8392608685007612);
        network.set_weight(0, 9, 42, -0.4920334055762916);
        network.set_weight(0, 9, 43, 0.08000839239343005);
        network.set_weight(0, 9, 44, -0.47124356045668403);
        network.set_weight(0, 9, 45, 0.48329556239205096);
        network.set_weight(0, 9, 46, -0.0658072187932679);
        network.set_weight(0, 9, 47, -0.24208730196976092);
        network.set_weight(0, 9, 48, 0.3122811516163413);
        network.set_weight(0, 9, 49, 0.06283908144807038);
        network.set_weight(0, 9, 50, -0.59770129826209);
        network.set_weight(0, 9, 51, -0.16757551500839596);
        network.set_weight(0, 9, 52, 0.912987015832452);
        network.set_weight(0, 9, 53, 0.6022704281367293);
        network.set_weight(0, 9, 54, 0.024217209065586554);
        network.set_weight(0, 9, 55, 0.32092650306758097);
        network.set_weight(0, 9, 56, -0.7152571511346955);
        network.set_weight(0, 9, 57, -0.17361325397276617);
        network.set_weight(0, 9, 58, 0.7896327389641538);
        network.set_weight(0, 9, 59, -0.6237593158667918);
        network.set_weight(0, 9, 60, 0.9638426689982771);
        network.set_weight(0, 9, 61, 0.6962221695854924);
        network.set_weight(0, 9, 62, 0.3722561965079887);
        network.set_weight(0, 9, 63, -0.25275169739894476);
        network.set_weight(0, 9, 64, -0.8158448969935779);
        network.set_weight(0, 9, 65, -0.4106323795616571);
        network.set_weight(0, 9, 66, 0.4819929490199004);
        network.set_weight(0, 9, 67, -0.15675727072858137);
        network.set_weight(0, 9, 68, 0.6057720672432418);
        network.set_weight(0, 9, 69, -0.56840704720035);
        network.set_weight(0, 9, 70, 0.6474922601817423);
        network.set_weight(0, 9, 71, 0.7202231666821659);
        network.set_weight(0, 9, 72, 0.44439432724937755);
        network.set_weight(0, 9, 73, -0.59197172930328);
        network.set_weight(0, 9, 74, -0.5542171180440705);
        network.set_weight(0, 9, 75, -0.8714112058302006);
        network.set_weight(0, 9, 76, -0.8973973066150853);
        network.set_weight(0, 9, 77, 0.4781392643674489);
        network.set_weight(0, 9, 78, -0.016966718702453587);
        network.set_weight(0, 9, 79, 0.5230224371019521);
        network.set_weight(0, 9, 80, -0.43450765638606836);
        network.set_weight(0, 9, 81, -0.30946625383075155);
        network.set_weight(0, 9, 82, 0.7894071925159873);
        network.set_weight(0, 9, 83, 0.9947668012290267);
        network.set_weight(0, 9, 84, -0.7964881150425751);
        network.set_weight(0, 9, 85, 0.5585041839863647);
        network.set_weight(0, 9, 86, 0.11229715568180554);
        network.set_weight(0, 9, 87, -0.9909024226660792);
        network.set_weight(0, 9, 88, 0.2331002906216615);
        network.set_weight(0, 9, 89, -0.44014362501124404);
        network.set_weight(0, 9, 90, -0.29887386682939643);
        network.set_weight(0, 9, 91, 0.9385577746581819);
        network.set_weight(0, 9, 92, 0.4853558268740088);
        network.set_weight(0, 9, 93, -0.8909565192722171);
        network.set_weight(0, 9, 94, 0.36195159423418577);
        network.set_weight(0, 9, 95, -0.9740086835977593);
        network.set_weight(0, 9, 96, 0.7723877127147123);
        network.set_weight(0, 9, 97, 0.19336503312545172);
        network.set_weight(0, 9, 98, 0.2616426202638864);
        network.set_weight(0, 9, 99, -0.967102493537251);
        network.set_weight(0, 10, 0, -0.8324282598560335);
        network.set_weight(0, 10, 1, 0.05230581751234609);
        network.set_weight(0, 10, 2, -0.2365307834681767);
        network.set_weight(0, 10, 3, 0.636590952116189);
        network.set_weight(0, 10, 4, -0.4320558589622392);
        network.set_weight(0, 10, 5, -0.20066863336803542);
        network.set_weight(0, 10, 6, -0.7600025217818935);
        network.set_weight(0, 10, 7, 0.005741859853697129);
        network.set_weight(0, 10, 8, 0.9100431436370453);
        network.set_weight(0, 10, 9, -0.46820625334241117);
        network.set_weight(0, 10, 10, 0.5816632624771467);
        network.set_weight(0, 10, 11, -0.6720877717934428);
        network.set_weight(0, 10, 12, 0.7718058794477487);
        network.set_weight(0, 10, 13, 0.025266370471002997);
        network.set_weight(0, 10, 14, -0.748383670097593);
        network.set_weight(0, 10, 15, 0.5653932722363393);
        network.set_weight(0, 10, 16, 0.7751734228360057);
        network.set_weight(0, 10, 17, -0.7098776628146126);
        network.set_weight(0, 10, 18, -0.7651681593761896);
        network.set_weight(0, 10, 19, -0.4972230697498181);
        network.set_weight(0, 10, 20, 0.02989688693076764);
        network.set_weight(0, 10, 21, 0.9002206947825351);
        network.set_weight(0, 10, 22, 0.7211983586028685);
        network.set_weight(0, 10, 23, -0.35074804919408864);
        network.set_weight(0, 10, 24, -0.9254800358347233);
        network.set_weight(0, 10, 25, 0.19141572446235);
        network.set_weight(0, 10, 26, 0.14952414757134136);
        network.set_weight(0, 10, 27, -0.5169245157269953);
        network.set_weight(0, 10, 28, 0.2071213210117553);
        network.set_weight(0, 10, 29, 0.9631886076073608);
        network.set_weight(0, 10, 30, -0.7112260967198298);
        network.set_weight(0, 10, 31, -0.3703952531376977);
        network.set_weight(0, 10, 32, 0.69586710181966);
        network.set_weight(0, 10, 33, -0.6816502227664416);
        network.set_weight(0, 10, 34, -0.7424624081311515);
        network.set_weight(0, 10, 35, -0.6559562844804554);
        network.set_weight(0, 10, 36, 0.5393951009413147);
        network.set_weight(0, 10, 37, -0.7451399370171541);
        network.set_weight(0, 10, 38, -0.8177508312050705);
        network.set_weight(0, 10, 39, 0.2539142555858742);
        network.set_weight(0, 10, 40, 0.5336603547078531);
        network.set_weight(0, 10, 41, 0.5126928693104242);
        network.set_weight(0, 10, 42, -0.1337941988396576);
        network.set_weight(0, 10, 43, 0.8332005970352891);
        network.set_weight(0, 10, 44, -0.6982494222555695);
        network.set_weight(0, 10, 45, -0.11695689457705338);
        network.set_weight(0, 10, 46, -0.2614256895040965);
        network.set_weight(0, 10, 47, 0.09237205096131373);
        network.set_weight(0, 10, 48, -0.6134754762943841);
        network.set_weight(0, 10, 49, -0.7057542168092463);
        network.set_weight(0, 10, 50, 0.9667166699036791);
        network.set_weight(0, 10, 51, -0.39574764516601046);
        network.set_weight(0, 10, 52, -0.0005962188029360327);
        network.set_weight(0, 10, 53, 0.8325367037982052);
        network.set_weight(0, 10, 54, -0.39469627253149353);
        network.set_weight(0, 10, 55, -0.2668079594126318);
        network.set_weight(0, 10, 56, 0.12631025231975634);
        network.set_weight(0, 10, 57, -0.8638752497770434);
        network.set_weight(0, 10, 58, -0.9532457329402362);
        network.set_weight(0, 10, 59, 0.26551716961107896);
        network.set_weight(0, 10, 60, -0.2582373791309207);
        network.set_weight(0, 10, 61, -0.840997547447196);
        network.set_weight(0, 10, 62, -0.42672452294045393);
        network.set_weight(0, 10, 63, 0.3869128538048714);
        network.set_weight(0, 10, 64, 0.5192132849487252);
        network.set_weight(0, 10, 65, 0.010792282182003676);
        network.set_weight(0, 10, 66, -0.5584716950036541);
        network.set_weight(0, 10, 67, 0.6789920817588475);
        network.set_weight(0, 10, 68, -0.5846139674996516);
        network.set_weight(0, 10, 69, 0.513831099711062);
        network.set_weight(0, 10, 70, -0.693552045289656);
        network.set_weight(0, 10, 71, 0.8697062674988814);
        network.set_weight(0, 10, 72, 0.5467415640441233);
        network.set_weight(0, 10, 73, 0.0024795220690534414);
        network.set_weight(0, 10, 74, -0.13165740932059844);
        network.set_weight(0, 10, 75, 0.145951496457851);
        network.set_weight(0, 10, 76, 0.3222286539115393);
        network.set_weight(0, 10, 77, 0.11576532459210775);
        network.set_weight(0, 10, 78, 0.3916343517021543);
        network.set_weight(0, 10, 79, -0.8246379057116939);
        network.set_weight(0, 10, 80, -0.16566070589012405);
        network.set_weight(0, 10, 81, 0.5069643919970721);
        network.set_weight(0, 10, 82, -0.12329602397965322);
        network.set_weight(0, 10, 83, 0.9413285573205166);
        network.set_weight(0, 10, 84, 0.06796962894045455);
        network.set_weight(0, 10, 85, -0.3780941377587348);
        network.set_weight(0, 10, 86, 0.7841685139719792);
        network.set_weight(0, 10, 87, -0.15556093556471828);
        network.set_weight(0, 10, 88, 0.0923714410454275);
        network.set_weight(0, 10, 89, 0.2827483510292532);
        network.set_weight(0, 10, 90, 0.7120163266119139);
        network.set_weight(0, 10, 91, -0.581122628318097);
        network.set_weight(0, 10, 92, 0.747601078996835);
        network.set_weight(0, 10, 93, 0.14746337531565734);
        network.set_weight(0, 10, 94, -0.26711114192937835);
        network.set_weight(0, 10, 95, -0.3295097259078401);
        network.set_weight(0, 10, 96, 0.9635615943593523);
        network.set_weight(0, 10, 97, 0.8941596880983211);
        network.set_weight(0, 10, 98, 0.09120669034696749);
        network.set_weight(0, 10, 99, -0.30726252439107604);
        network.set_weight(0, 11, 0, 0.9477569930409222);
        network.set_weight(0, 11, 1, -0.9673180679391438);
        network.set_weight(0, 11, 2, -0.9021494930983807);
        network.set_weight(0, 11, 3, -0.026786192886372184);
        network.set_weight(0, 11, 4, 0.17398221819977255);
        network.set_weight(0, 11, 5, -0.986904352738023);
        network.set_weight(0, 11, 6, -0.6250102332019745);
        network.set_weight(0, 11, 7, -0.827590754671059);
        network.set_weight(0, 11, 8, -0.5003953369591643);
        network.set_weight(0, 11, 9, -0.6342463350824334);
        network.set_weight(0, 11, 10, -0.7514325953348362);
        network.set_weight(0, 11, 11, -0.7410819496402818);
        network.set_weight(0, 11, 12, -0.2572157110591118);
        network.set_weight(0, 11, 13, -0.7425251572672702);
        network.set_weight(0, 11, 14, 0.5468437511244368);
        network.set_weight(0, 11, 15, -0.19443441270989492);
        network.set_weight(0, 11, 16, -0.7663497520292171);
        network.set_weight(0, 11, 17, 0.30269967076843196);
        network.set_weight(0, 11, 18, 0.5763680959204227);
        network.set_weight(0, 11, 19, -0.2806923273409392);
        network.set_weight(0, 11, 20, -0.9877307816117784);
        network.set_weight(0, 11, 21, 0.3003360132417543);
        network.set_weight(0, 11, 22, 0.507979840056479);
        network.set_weight(0, 11, 23, 0.778582397944156);
        network.set_weight(0, 11, 24, 0.42630286552906926);
        network.set_weight(0, 11, 25, 0.19368967369755508);
        network.set_weight(0, 11, 26, -0.3138314096724002);
        network.set_weight(0, 11, 27, -0.512332132720521);
        network.set_weight(0, 11, 28, -0.8702508125725881);
        network.set_weight(0, 11, 29, 0.6386072586791016);
        network.set_weight(0, 11, 30, 0.12060776239276327);
        network.set_weight(0, 11, 31, -0.42420754526797966);
        network.set_weight(0, 11, 32, -0.7507003663141161);
        network.set_weight(0, 11, 33, -0.4232770050854493);
        network.set_weight(0, 11, 34, 0.5155669944116914);
        network.set_weight(0, 11, 35, -0.5684187528194247);
        network.set_weight(0, 11, 36, -0.8957946275938651);
        network.set_weight(0, 11, 37, -0.2399045095676431);
        network.set_weight(0, 11, 38, -0.3283802517330807);
        network.set_weight(0, 11, 39, 0.39407923079470497);
        network.set_weight(0, 11, 40, 0.11200160207326837);
        network.set_weight(0, 11, 41, -0.054578744601097684);
        network.set_weight(0, 11, 42, 0.9521488956258841);
        network.set_weight(0, 11, 43, 0.6882435515491605);
        network.set_weight(0, 11, 44, -0.743695842415852);
        network.set_weight(0, 11, 45, -0.5032106819536606);
        network.set_weight(0, 11, 46, -0.16127207514840047);
        network.set_weight(0, 11, 47, -0.8569531982490952);
        network.set_weight(0, 11, 48, 0.5162839262497583);
        network.set_weight(0, 11, 49, 0.5363476539169261);
        network.set_weight(0, 11, 50, -0.4151506528842266);
        network.set_weight(0, 11, 51, 0.8107108372955087);
        network.set_weight(0, 11, 52, 0.10496814475195326);
        network.set_weight(0, 11, 53, -0.5527727232220054);
        network.set_weight(0, 11, 54, 0.2429880448220625);
        network.set_weight(0, 11, 55, 0.3451388173661276);
        network.set_weight(0, 11, 56, 0.4350973357321841);
        network.set_weight(0, 11, 57, 0.942687230682691);
        network.set_weight(0, 11, 58, 0.8272873218450842);
        network.set_weight(0, 11, 59, -0.17344723724305489);
        network.set_weight(0, 11, 60, -0.1363486991648275);
        network.set_weight(0, 11, 61, -0.9530947390670068);
        network.set_weight(0, 11, 62, -0.16500200600556592);
        network.set_weight(0, 11, 63, -0.6457026850325593);
        network.set_weight(0, 11, 64, -0.7596634397925532);
        network.set_weight(0, 11, 65, 0.6316915447626101);
        network.set_weight(0, 11, 66, -0.9563736805943308);
        network.set_weight(0, 11, 67, -0.7418847021693089);
        network.set_weight(0, 11, 68, 0.3287292158963393);
        network.set_weight(0, 11, 69, 0.13437004500179595);
        network.set_weight(0, 11, 70, -0.14194206226461592);
        network.set_weight(0, 11, 71, 0.6151640758686028);
        network.set_weight(0, 11, 72, -0.5237474505591864);
        network.set_weight(0, 11, 73, -0.5867610129448912);
        network.set_weight(0, 11, 74, 0.027365640771498168);
        network.set_weight(0, 11, 75, -0.7866934740037232);
        network.set_weight(0, 11, 76, 0.37815657567007777);
        network.set_weight(0, 11, 77, 0.8700241915646811);
        network.set_weight(0, 11, 78, 0.6228481662535694);
        network.set_weight(0, 11, 79, 0.762417214320251);
        network.set_weight(0, 11, 80, -0.8540981559091316);
        network.set_weight(0, 11, 81, -0.15193132134417286);
        network.set_weight(0, 11, 82, 0.8058802632216393);
        network.set_weight(0, 11, 83, 0.6827274668047052);
        network.set_weight(0, 11, 84, 0.1875840222900631);
        network.set_weight(0, 11, 85, 0.3088365034487728);
        network.set_weight(0, 11, 86, -0.46797694791963584);
        network.set_weight(0, 11, 87, -0.46953522326722297);
        network.set_weight(0, 11, 88, -0.8665766782160058);
        network.set_weight(0, 11, 89, 0.8038608556922417);
        network.set_weight(0, 11, 90, -0.4220226790614423);
        network.set_weight(0, 11, 91, 0.9850031491507838);
        network.set_weight(0, 11, 92, -0.9863447665071601);
        network.set_weight(0, 11, 93, 0.5982467429594902);
        network.set_weight(0, 11, 94, 0.05160234044214951);
        network.set_weight(0, 11, 95, -0.9159574506010149);
        network.set_weight(0, 11, 96, 0.32637985488287247);
        network.set_weight(0, 11, 97, 0.4049156010471231);
        network.set_weight(0, 11, 98, 0.3992324185463725);
        network.set_weight(0, 11, 99, 0.3918616823464418);
        network.set_weight(0, 12, 0, 0.3563315201966426);
        network.set_weight(0, 12, 1, 0.535158951501316);
        network.set_weight(0, 12, 2, -0.23978919023493095);
        network.set_weight(0, 12, 3, 0.9154236952355375);
        network.set_weight(0, 12, 4, -0.03441147025865443);
        network.set_weight(0, 12, 5, -0.4643601895655478);
        network.set_weight(0, 12, 6, 0.985696470667202);
        network.set_weight(0, 12, 7, -0.44095830386158363);
        network.set_weight(0, 12, 8, -0.11850522143179143);
        network.set_weight(0, 12, 9, 0.39547607925218586);
        network.set_weight(0, 12, 10, 0.5962785791449716);
        network.set_weight(0, 12, 11, -0.36670124690605377);
        network.set_weight(0, 12, 12, -0.9294649886179605);
        network.set_weight(0, 12, 13, 0.15610349748047891);
        network.set_weight(0, 12, 14, 0.18397328416299508);
        network.set_weight(0, 12, 15, 0.45912956586755405);
        network.set_weight(0, 12, 16, -0.4780311227003591);
        network.set_weight(0, 12, 17, 0.6414481133076833);
        network.set_weight(0, 12, 18, 0.5478673079781575);
        network.set_weight(0, 12, 19, 0.7233027738091573);
        network.set_weight(0, 12, 20, 0.5120216148337782);
        network.set_weight(0, 12, 21, 0.3462332467889029);
        network.set_weight(0, 12, 22, 0.1082383148092474);
        network.set_weight(0, 12, 23, 0.7149024367742942);
        network.set_weight(0, 12, 24, -0.5480760050993079);
        network.set_weight(0, 12, 25, 0.33001945860164894);
        network.set_weight(0, 12, 26, 0.5842169045015293);
        network.set_weight(0, 12, 27, 0.5494678478315358);
        network.set_weight(0, 12, 28, -0.7407660478197957);
        network.set_weight(0, 12, 29, -0.3722789195532623);
        network.set_weight(0, 12, 30, 0.865509282867476);
        network.set_weight(0, 12, 31, 0.5491428182661056);
        network.set_weight(0, 12, 32, -0.6906299176770712);
        network.set_weight(0, 12, 33, -0.03344139210066022);
        network.set_weight(0, 12, 34, 0.6216362568724514);
        network.set_weight(0, 12, 35, 0.7190463626377435);
        network.set_weight(0, 12, 36, 0.039972333492468204);
        network.set_weight(0, 12, 37, -0.7971068285348439);
        network.set_weight(0, 12, 38, -0.5612986059983682);
        network.set_weight(0, 12, 39, -0.9511118548869979);
        network.set_weight(0, 12, 40, -0.6685346016268507);
        network.set_weight(0, 12, 41, -0.8777503020616357);
        network.set_weight(0, 12, 42, 0.40001141442186894);
        network.set_weight(0, 12, 43, 0.4019322137261121);
        network.set_weight(0, 12, 44, -0.11336892935343346);
        network.set_weight(0, 12, 45, 0.7619311986889885);
        network.set_weight(0, 12, 46, -0.7074245658273148);
        network.set_weight(0, 12, 47, -0.611989148728753);
        network.set_weight(0, 12, 48, 0.22281292956545107);
        network.set_weight(0, 12, 49, 0.05614972529702267);
        network.set_weight(0, 12, 50, -0.7556276804374311);
        network.set_weight(0, 12, 51, 0.81369993186645);
        network.set_weight(0, 12, 52, 0.24368249360496064);
        network.set_weight(0, 12, 53, 0.21590413821982035);
        network.set_weight(0, 12, 54, -0.253776625563932);
        network.set_weight(0, 12, 55, 0.21241422197517834);
        network.set_weight(0, 12, 56, -0.8569834210605256);
        network.set_weight(0, 12, 57, -0.39758538896728157);
        network.set_weight(0, 12, 58, 0.26675511529522344);
        network.set_weight(0, 12, 59, 0.1974259957044755);
        network.set_weight(0, 12, 60, 0.05204707858886737);
        network.set_weight(0, 12, 61, -0.8938092505320954);
        network.set_weight(0, 12, 62, -0.35674312090498606);
        network.set_weight(0, 12, 63, 0.9690320583614183);
        network.set_weight(0, 12, 64, 0.8863815441812686);
        network.set_weight(0, 12, 65, 0.6404602931060099);
        network.set_weight(0, 12, 66, -0.87247641404507);
        network.set_weight(0, 12, 67, -0.8530339547172496);
        network.set_weight(0, 12, 68, -0.5746652899040356);
        network.set_weight(0, 12, 69, 0.6555137805098201);
        network.set_weight(0, 12, 70, -0.5921514571454924);
        network.set_weight(0, 12, 71, -0.5493925077510136);
        network.set_weight(0, 12, 72, -0.4792036532593893);
        network.set_weight(0, 12, 73, 0.46643166774513967);
        network.set_weight(0, 12, 74, 0.05516038638797016);
        network.set_weight(0, 12, 75, 0.7210550736630084);
        network.set_weight(0, 12, 76, -0.8479164449158643);
        network.set_weight(0, 12, 77, -0.8968917763928301);
        network.set_weight(0, 12, 78, 0.6925256083614197);
        network.set_weight(0, 12, 79, -0.7820669995750953);
        network.set_weight(0, 12, 80, 0.4298778087684829);
        network.set_weight(0, 12, 81, 0.20913736388241255);
        network.set_weight(0, 12, 82, -0.585501544144374);
        network.set_weight(0, 12, 83, -0.4795739323363559);
        network.set_weight(0, 12, 84, 0.4794930438893945);
        network.set_weight(0, 12, 85, -0.9566133350292338);
        network.set_weight(0, 12, 86, 0.9113334113403417);
        network.set_weight(0, 12, 87, -0.9101370299636811);
        network.set_weight(0, 12, 88, -0.6766718695526004);
        network.set_weight(0, 12, 89, 0.2799031984577727);
        network.set_weight(0, 12, 90, -0.7712401729060658);
        network.set_weight(0, 12, 91, 0.9953507924757974);
        network.set_weight(0, 12, 92, -0.1340034956475329);
        network.set_weight(0, 12, 93, -0.862094267955704);
        network.set_weight(0, 12, 94, -0.6699582656430338);
        network.set_weight(0, 12, 95, 0.08451862825267842);
        network.set_weight(0, 12, 96, 0.7405902369654696);
        network.set_weight(0, 12, 97, -0.48590606092957134);
        network.set_weight(0, 12, 98, -0.20124138414325343);
        network.set_weight(0, 12, 99, 0.1379355888405216);
        network.set_weight(0, 13, 0, 0.30138102191135596);
        network.set_weight(0, 13, 1, 0.44654708388692677);
        network.set_weight(0, 13, 2, -0.35049166959089195);
        network.set_weight(0, 13, 3, -0.2587240357115135);
        network.set_weight(0, 13, 4, 0.747205649689455);
        network.set_weight(0, 13, 5, 0.8121680519661438);
        network.set_weight(0, 13, 6, -0.16520065947444085);
        network.set_weight(0, 13, 7, 0.9930995373154639);
        network.set_weight(0, 13, 8, -0.6496485097958531);
        network.set_weight(0, 13, 9, 0.6465829122209292);
        network.set_weight(0, 13, 10, 0.8178472184012706);
        network.set_weight(0, 13, 11, 0.12932648263532243);
        network.set_weight(0, 13, 12, 0.3838440658737281);
        network.set_weight(0, 13, 13, -0.8798044400633485);
        network.set_weight(0, 13, 14, 0.6852721210977315);
        network.set_weight(0, 13, 15, 0.3663263771394838);
        network.set_weight(0, 13, 16, 0.1568447064150118);
        network.set_weight(0, 13, 17, 0.1624636601974918);
        network.set_weight(0, 13, 18, -0.6801306609797846);
        network.set_weight(0, 13, 19, 0.6946022352537189);
        network.set_weight(0, 13, 20, 0.05824958180543405);
        network.set_weight(0, 13, 21, 0.21583235042238202);
        network.set_weight(0, 13, 22, -0.6598361340499699);
        network.set_weight(0, 13, 23, 0.2562563369582862);
        network.set_weight(0, 13, 24, -0.5232910239722866);
        network.set_weight(0, 13, 25, 0.5247455147830196);
        network.set_weight(0, 13, 26, -0.944762068363008);
        network.set_weight(0, 13, 27, -0.7511565712367245);
        network.set_weight(0, 13, 28, -0.5777301024602133);
        network.set_weight(0, 13, 29, -0.1981038960784267);
        network.set_weight(0, 13, 30, 0.74136575216122);
        network.set_weight(0, 13, 31, -0.9863945415986606);
        network.set_weight(0, 13, 32, 0.11187696853170448);
        network.set_weight(0, 13, 33, -0.9279884969506746);
        network.set_weight(0, 13, 34, -0.24076281014455292);
        network.set_weight(0, 13, 35, -0.4036724572306616);
        network.set_weight(0, 13, 36, -0.6717177608655693);
        network.set_weight(0, 13, 37, -0.041331622190414086);
        network.set_weight(0, 13, 38, -0.31635802697880844);
        network.set_weight(0, 13, 39, -0.47626983802217326);
        network.set_weight(0, 13, 40, 0.2233711610047835);
        network.set_weight(0, 13, 41, -0.5113034755251784);
        network.set_weight(0, 13, 42, 0.9440213469872396);
        network.set_weight(0, 13, 43, -0.5010222759972487);
        network.set_weight(0, 13, 44, 0.9771008872474274);
        network.set_weight(0, 13, 45, -0.6772557157568375);
        network.set_weight(0, 13, 46, 0.8998073852248822);
        network.set_weight(0, 13, 47, -0.8745303476096078);
        network.set_weight(0, 13, 48, -0.985150255507425);
        network.set_weight(0, 13, 49, -0.8050314767982403);
        network.set_weight(0, 13, 50, 0.4143527378459806);
        network.set_weight(0, 13, 51, -0.5346997683325332);
        network.set_weight(0, 13, 52, -0.44874297371999816);
        network.set_weight(0, 13, 53, 0.34664489044963487);
        network.set_weight(0, 13, 54, -0.9410006169860987);
        network.set_weight(0, 13, 55, 0.08052621646273805);
        network.set_weight(0, 13, 56, -0.19932216849276707);
        network.set_weight(0, 13, 57, -0.6772834495119608);
        network.set_weight(0, 13, 58, 0.8234713474879751);
        network.set_weight(0, 13, 59, -0.2792462932555386);
        network.set_weight(0, 13, 60, -0.4173209784421319);
        network.set_weight(0, 13, 61, 0.3890082985398935);
        network.set_weight(0, 13, 62, 0.7109486037728263);
        network.set_weight(0, 13, 63, -0.543934333665723);
        network.set_weight(0, 13, 64, -0.745668124654933);
        network.set_weight(0, 13, 65, 0.9200626977464574);
        network.set_weight(0, 13, 66, -0.14511925465772957);
        network.set_weight(0, 13, 67, 0.0699820503639581);
        network.set_weight(0, 13, 68, -0.08611997312158337);
        network.set_weight(0, 13, 69, 0.6559046908790997);
        network.set_weight(0, 13, 70, -0.14213969205053512);
        network.set_weight(0, 13, 71, 0.5141242009558729);
        network.set_weight(0, 13, 72, 0.04551329402505022);
        network.set_weight(0, 13, 73, -0.8406230199457878);
        network.set_weight(0, 13, 74, 0.018660974255149343);
        network.set_weight(0, 13, 75, 0.7111975153598478);
        network.set_weight(0, 13, 76, 0.062233923396152635);
        network.set_weight(0, 13, 77, -0.21441797980909572);
        network.set_weight(0, 13, 78, -0.9487168651863693);
        network.set_weight(0, 13, 79, 0.4025896916249534);
        network.set_weight(0, 13, 80, -0.21479964470994783);
        network.set_weight(0, 13, 81, -0.3533138920303247);
        network.set_weight(0, 13, 82, -0.26045934316063013);
        network.set_weight(0, 13, 83, -0.16459569351765468);
        network.set_weight(0, 13, 84, -0.32847620697213586);
        network.set_weight(0, 13, 85, -0.4166276018332462);
        network.set_weight(0, 13, 86, -0.07900174572839092);
        network.set_weight(0, 13, 87, -0.9067477657363845);
        network.set_weight(0, 13, 88, -0.5484787513191436);
        network.set_weight(0, 13, 89, -0.12373798031588157);
        network.set_weight(0, 13, 90, 0.7695468894998083);
        network.set_weight(0, 13, 91, -0.1437379723907175);
        network.set_weight(0, 13, 92, 0.11178562238016787);
        network.set_weight(0, 13, 93, 0.7871855108450214);
        network.set_weight(0, 13, 94, 0.6116477316055708);
        network.set_weight(0, 13, 95, 0.42459257534323314);
        network.set_weight(0, 13, 96, 0.23891419270134762);
        network.set_weight(0, 13, 97, 0.19176399280981982);
        network.set_weight(0, 13, 98, -0.618944978561184);
        network.set_weight(0, 13, 99, -0.7297232057963785);
        network.set_weight(0, 14, 0, -0.8886420117577829);
        network.set_weight(0, 14, 1, -0.8123653642408215);
        network.set_weight(0, 14, 2, 0.2299631428019202);
        network.set_weight(0, 14, 3, 0.21695970114659158);
        network.set_weight(0, 14, 4, -0.9254290506135934);
        network.set_weight(0, 14, 5, 0.6766648477875434);
        network.set_weight(0, 14, 6, -0.11694279994142676);
        network.set_weight(0, 14, 7, 0.07687826047796142);
        network.set_weight(0, 14, 8, -0.8529537142756176);
        network.set_weight(0, 14, 9, 0.7169669849705742);
        network.set_weight(0, 14, 10, -0.8398660935239881);
        network.set_weight(0, 14, 11, -0.5779968158944397);
        network.set_weight(0, 14, 12, -0.06967369206781582);
        network.set_weight(0, 14, 13, -0.004701735321143818);
        network.set_weight(0, 14, 14, 0.06644633533945155);
        network.set_weight(0, 14, 15, 0.8720843328201002);
        network.set_weight(0, 14, 16, -0.9300538882299474);
        network.set_weight(0, 14, 17, 0.3524443906962522);
        network.set_weight(0, 14, 18, -0.14043470349333975);
        network.set_weight(0, 14, 19, 0.6244776088831605);
        network.set_weight(0, 14, 20, 0.3350236646554572);
        network.set_weight(0, 14, 21, 0.6252148432514086);
        network.set_weight(0, 14, 22, 0.7270563024397119);
        network.set_weight(0, 14, 23, 0.5608035589945044);
        network.set_weight(0, 14, 24, -0.7354891337456984);
        network.set_weight(0, 14, 25, 0.07444593303245339);
        network.set_weight(0, 14, 26, 0.546592297936257);
        network.set_weight(0, 14, 27, 0.5488076845368586);
        network.set_weight(0, 14, 28, 0.8541227051059976);
        network.set_weight(0, 14, 29, -0.16818550590672077);
        network.set_weight(0, 14, 30, -0.9820694914599661);
        network.set_weight(0, 14, 31, 0.45447646569279754);
        network.set_weight(0, 14, 32, -0.44367288270195315);
        network.set_weight(0, 14, 33, 0.31121412661006964);
        network.set_weight(0, 14, 34, -0.902030685435603);
        network.set_weight(0, 14, 35, -0.28925208755732457);
        network.set_weight(0, 14, 36, 0.26631534013183944);
        network.set_weight(0, 14, 37, -0.7478971256721691);
        network.set_weight(0, 14, 38, -0.36573097037519764);
        network.set_weight(0, 14, 39, -0.7099189709301099);
        network.set_weight(0, 14, 40, 0.7821422060293339);
        network.set_weight(0, 14, 41, 0.5486257863847737);
        network.set_weight(0, 14, 42, 0.27701383567722737);
        network.set_weight(0, 14, 43, 0.039873054329288005);
        network.set_weight(0, 14, 44, 0.955209890794624);
        network.set_weight(0, 14, 45, -0.4828256764957122);
        network.set_weight(0, 14, 46, 0.41103302078605286);
        network.set_weight(0, 14, 47, -0.8275120387187742);
        network.set_weight(0, 14, 48, 0.24324199079152398);
        network.set_weight(0, 14, 49, -0.6093452508715689);
        network.set_weight(0, 14, 50, -0.9811726158873468);
        network.set_weight(0, 14, 51, 0.8184168604910973);
        network.set_weight(0, 14, 52, -0.44129795552232665);
        network.set_weight(0, 14, 53, 0.9805979798411404);
        network.set_weight(0, 14, 54, 0.35962977841311927);
        network.set_weight(0, 14, 55, 0.3417331780839541);
        network.set_weight(0, 14, 56, 0.34684854253453024);
        network.set_weight(0, 14, 57, 0.9847286656001228);
        network.set_weight(0, 14, 58, -0.5505531953982334);
        network.set_weight(0, 14, 59, 0.9752780255165141);
        network.set_weight(0, 14, 60, -0.35667350336472414);
        network.set_weight(0, 14, 61, -0.8114711800556025);
        network.set_weight(0, 14, 62, 0.8444971844580795);
        network.set_weight(0, 14, 63, -0.8054455211131117);
        network.set_weight(0, 14, 64, -0.0494155758525725);
        network.set_weight(0, 14, 65, 0.6681026497373268);
        network.set_weight(0, 14, 66, -0.4467883098133607);
        network.set_weight(0, 14, 67, 0.4404717594940195);
        network.set_weight(0, 14, 68, 0.28380777177718186);
        network.set_weight(0, 14, 69, 0.38219695308027246);
        network.set_weight(0, 14, 70, -0.6985659599207672);
        network.set_weight(0, 14, 71, 0.4059509428671144);
        network.set_weight(0, 14, 72, 0.6793717773328007);
        network.set_weight(0, 14, 73, -0.7173218604802079);
        network.set_weight(0, 14, 74, 0.9213664673923114);
        network.set_weight(0, 14, 75, 0.9035734421980197);
        network.set_weight(0, 14, 76, -0.36225642344310827);
        network.set_weight(0, 14, 77, 0.9107055620405844);
        network.set_weight(0, 14, 78, 0.8768878399122295);
        network.set_weight(0, 14, 79, -0.766896670648411);
        network.set_weight(0, 14, 80, 0.48806593850049707);
        network.set_weight(0, 14, 81, 0.9249018371925293);
        network.set_weight(0, 14, 82, 0.6472140206828658);
        network.set_weight(0, 14, 83, -0.734589857169637);
        network.set_weight(0, 14, 84, -0.18417759886703022);
        network.set_weight(0, 14, 85, 0.12801100921894126);
        network.set_weight(0, 14, 86, -0.25720649946094465);
        network.set_weight(0, 14, 87, -0.2284035450967743);
        network.set_weight(0, 14, 88, -0.807178187162412);
        network.set_weight(0, 14, 89, -0.9857939918560881);
        network.set_weight(0, 14, 90, -0.3877008804449642);
        network.set_weight(0, 14, 91, -0.15304713228768185);
        network.set_weight(0, 14, 92, 0.15760350485452568);
        network.set_weight(0, 14, 93, 0.9107104638274144);
        network.set_weight(0, 14, 94, -0.8210695120809461);
        network.set_weight(0, 14, 95, -0.30573085932879907);
        network.set_weight(0, 14, 96, 0.7402109965128398);
        network.set_weight(0, 14, 97, 0.651377486082171);
        network.set_weight(0, 14, 98, -0.776102644727124);
        network.set_weight(0, 14, 99, 0.35159498003572676);
        network.set_weight(0, 15, 0, -0.8212126344602018);
        network.set_weight(0, 15, 1, 0.8913792195668202);
        network.set_weight(0, 15, 2, -0.4800606123781155);
        network.set_weight(0, 15, 3, 0.21225633469614968);
        network.set_weight(0, 15, 4, -0.05882735726011745);
        network.set_weight(0, 15, 5, 0.0238894051723455);
        network.set_weight(0, 15, 6, -0.5720264840091107);
        network.set_weight(0, 15, 7, -0.2824476390237427);
        network.set_weight(0, 15, 8, -0.4352416874446918);
        network.set_weight(0, 15, 9, 0.23144387683699752);
        network.set_weight(0, 15, 10, -0.1553432026405317);
        network.set_weight(0, 15, 11, 0.18322773627084765);
        network.set_weight(0, 15, 12, 0.07332325397688222);
        network.set_weight(0, 15, 13, 0.3319890190051715);
        network.set_weight(0, 15, 14, 0.9510471197778192);
        network.set_weight(0, 15, 15, 0.06704061754472979);
        network.set_weight(0, 15, 16, 0.09290700387783724);
        network.set_weight(0, 15, 17, 0.22809367677154135);
        network.set_weight(0, 15, 18, 0.09486526333406498);
        network.set_weight(0, 15, 19, -0.17741241245940986);
        network.set_weight(0, 15, 20, -0.5079922663885807);
        network.set_weight(0, 15, 21, 0.07281331041482964);
        network.set_weight(0, 15, 22, -0.507899962787534);
        network.set_weight(0, 15, 23, 0.31892226111723376);
        network.set_weight(0, 15, 24, 0.7726741011443201);
        network.set_weight(0, 15, 25, 0.6002463278632466);
        network.set_weight(0, 15, 26, 0.5728355054283931);
        network.set_weight(0, 15, 27, -0.5735721142158239);
        network.set_weight(0, 15, 28, -0.9327604232061628);
        network.set_weight(0, 15, 29, -0.5925052416905725);
        network.set_weight(0, 15, 30, 0.14041309732683782);
        network.set_weight(0, 15, 31, -0.7503119666630755);
        network.set_weight(0, 15, 32, -0.7996474156887059);
        network.set_weight(0, 15, 33, 0.9956959774137775);
        network.set_weight(0, 15, 34, -0.2912997229554588);
        network.set_weight(0, 15, 35, -0.872812055582699);
        network.set_weight(0, 15, 36, 0.023008306147590973);
        network.set_weight(0, 15, 37, 0.3948652990403496);
        network.set_weight(0, 15, 38, -0.07948486002525312);
        network.set_weight(0, 15, 39, -0.7372645570096763);
        network.set_weight(0, 15, 40, 0.029674697091187863);
        network.set_weight(0, 15, 41, -0.8618195236424984);
        network.set_weight(0, 15, 42, 0.4608393528770274);
        network.set_weight(0, 15, 43, 0.8780918417563475);
        network.set_weight(0, 15, 44, -0.9161504428901068);
        network.set_weight(0, 15, 45, 0.1410262494036909);
        network.set_weight(0, 15, 46, 0.6617220256585856);
        network.set_weight(0, 15, 47, 0.2811228628993081);
        network.set_weight(0, 15, 48, -0.7018181565330726);
        network.set_weight(0, 15, 49, -0.863679764160892);
        network.set_weight(0, 15, 50, -0.08503986093729621);
        network.set_weight(0, 15, 51, -0.9034777030214152);
        network.set_weight(0, 15, 52, 0.6736373140595555);
        network.set_weight(0, 15, 53, 0.032612948938505415);
        network.set_weight(0, 15, 54, -0.3664704280446913);
        network.set_weight(0, 15, 55, 0.5418071113837746);
        network.set_weight(0, 15, 56, -0.5709372623560369);
        network.set_weight(0, 15, 57, 0.027650855656639495);
        network.set_weight(0, 15, 58, 0.012323440870402935);
        network.set_weight(0, 15, 59, -0.7919789492087477);
        network.set_weight(0, 15, 60, 0.6018588689777848);
        network.set_weight(0, 15, 61, 0.397250193214556);
        network.set_weight(0, 15, 62, -0.6020128003738219);
        network.set_weight(0, 15, 63, -0.13829465975232913);
        network.set_weight(0, 15, 64, -0.3813618406529935);
        network.set_weight(0, 15, 65, 0.8746945550791676);
        network.set_weight(0, 15, 66, 0.33564232378864345);
        network.set_weight(0, 15, 67, 0.888678815933325);
        network.set_weight(0, 15, 68, 0.5334558784157855);
        network.set_weight(0, 15, 69, 0.5832453273246379);
        network.set_weight(0, 15, 70, -0.3795993720456383);
        network.set_weight(0, 15, 71, 0.6974264726488004);
        network.set_weight(0, 15, 72, -0.33044689596806354);
        network.set_weight(0, 15, 73, 0.653957079350683);
        network.set_weight(0, 15, 74, 0.41966660339163653);
        network.set_weight(0, 15, 75, 0.019158185115559112);
        network.set_weight(0, 15, 76, -0.6593251796465447);
        network.set_weight(0, 15, 77, 0.2017344497855349);
        network.set_weight(0, 15, 78, 0.24901785897108786);
        network.set_weight(0, 15, 79, 0.3711089613711209);
        network.set_weight(0, 15, 80, -0.8673482418454035);
        network.set_weight(0, 15, 81, -0.5008565628156438);
        network.set_weight(0, 15, 82, 0.12189860541014585);
        network.set_weight(0, 15, 83, 0.7049532796793294);
        network.set_weight(0, 15, 84, -0.5349978512230806);
        network.set_weight(0, 15, 85, 0.794044705164273);
        network.set_weight(0, 15, 86, 0.9503245580214343);
        network.set_weight(0, 15, 87, -0.8221242536286582);
        network.set_weight(0, 15, 88, 0.4481125084172426);
        network.set_weight(0, 15, 89, -0.20499962906421398);
        network.set_weight(0, 15, 90, -0.7242037887816981);
        network.set_weight(0, 15, 91, -0.5549598988658255);
        network.set_weight(0, 15, 92, -0.27724015996330253);
        network.set_weight(0, 15, 93, -0.9641658738730836);
        network.set_weight(0, 15, 94, 0.389133559880825);
        network.set_weight(0, 15, 95, -0.09266757751671006);
        network.set_weight(0, 15, 96, -0.3080665501197595);
        network.set_weight(0, 15, 97, 0.7352957624932721);
        network.set_weight(0, 15, 98, 0.9327308925060949);
        network.set_weight(0, 15, 99, -0.08336450379451343);
        network.set_weight(0, 16, 0, -0.37848517818603766);
        network.set_weight(0, 16, 1, 0.2064507569704883);
        network.set_weight(0, 16, 2, -0.18893596721690775);
        network.set_weight(0, 16, 3, 0.7831957394947591);
        network.set_weight(0, 16, 4, -0.4231900261932462);
        network.set_weight(0, 16, 5, -0.7438153598900659);
        network.set_weight(0, 16, 6, -0.9698764004989451);
        network.set_weight(0, 16, 7, -0.6593530105870071);
        network.set_weight(0, 16, 8, -0.8109858839311941);
        network.set_weight(0, 16, 9, 0.8214347320059368);
        network.set_weight(0, 16, 10, 0.3598225078014372);
        network.set_weight(0, 16, 11, 0.16204962246190924);
        network.set_weight(0, 16, 12, 0.8895039168924435);
        network.set_weight(0, 16, 13, 0.23626191938772934);
        network.set_weight(0, 16, 14, 0.4122229162495683);
        network.set_weight(0, 16, 15, -0.6829413200758705);
        network.set_weight(0, 16, 16, -0.4248194678124655);
        network.set_weight(0, 16, 17, 0.23485836294134654);
        network.set_weight(0, 16, 18, 0.6718789073742106);
        network.set_weight(0, 16, 19, -0.4357789481031964);
        network.set_weight(0, 16, 20, -0.09264895133931828);
        network.set_weight(0, 16, 21, -0.43583929476700134);
        network.set_weight(0, 16, 22, -0.42140643575666203);
        network.set_weight(0, 16, 23, 0.14973597653102266);
        network.set_weight(0, 16, 24, 0.8380518640254604);
        network.set_weight(0, 16, 25, 0.9522817085080435);
        network.set_weight(0, 16, 26, 0.13156846463989735);
        network.set_weight(0, 16, 27, -0.951655732242267);
        network.set_weight(0, 16, 28, -0.44724584407485724);
        network.set_weight(0, 16, 29, 0.3114206101494901);
        network.set_weight(0, 16, 30, 0.8496191966260289);
        network.set_weight(0, 16, 31, -0.7078377680771344);
        network.set_weight(0, 16, 32, 0.6571004829317066);
        network.set_weight(0, 16, 33, 0.7589426713410072);
        network.set_weight(0, 16, 34, -0.8204241617450518);
        network.set_weight(0, 16, 35, 0.8096308530180407);
        network.set_weight(0, 16, 36, 0.19073995534901145);
        network.set_weight(0, 16, 37, 0.692329953764284);
        network.set_weight(0, 16, 38, 0.347355762988681);
        network.set_weight(0, 16, 39, 0.3573968995039425);
        network.set_weight(0, 16, 40, 0.7496472441450812);
        network.set_weight(0, 16, 41, 0.525936672387751);
        network.set_weight(0, 16, 42, -0.18245151199953913);
        network.set_weight(0, 16, 43, -0.23506068298563054);
        network.set_weight(0, 16, 44, 0.9374006008199245);
        network.set_weight(0, 16, 45, -0.47209397421875554);
        network.set_weight(0, 16, 46, -0.24650941716646058);
        network.set_weight(0, 16, 47, -0.7121044091025763);
        network.set_weight(0, 16, 48, -0.3217791442573452);
        network.set_weight(0, 16, 49, 0.1683830690789645);
        network.set_weight(0, 16, 50, -0.6123196731465077);
        network.set_weight(0, 16, 51, -0.14828303211290095);
        network.set_weight(0, 16, 52, 0.21743911131004268);
        network.set_weight(0, 16, 53, -0.22933433486995214);
        network.set_weight(0, 16, 54, 0.5103439531464515);
        network.set_weight(0, 16, 55, 0.030752783454241372);
        network.set_weight(0, 16, 56, -0.3498123377391462);
        network.set_weight(0, 16, 57, 0.449557847032678);
        network.set_weight(0, 16, 58, 0.10796750645177444);
        network.set_weight(0, 16, 59, -0.0967328570088597);
        network.set_weight(0, 16, 60, -0.6777899729898793);
        network.set_weight(0, 16, 61, 0.9737870478403072);
        network.set_weight(0, 16, 62, -0.6521373415625396);
        network.set_weight(0, 16, 63, -0.2307730127023011);
        network.set_weight(0, 16, 64, 0.17113172547235522);
        network.set_weight(0, 16, 65, 0.8665671324830797);
        network.set_weight(0, 16, 66, -0.39713409693420365);
        network.set_weight(0, 16, 67, -0.7708008333587373);
        network.set_weight(0, 16, 68, 0.4134418992724398);
        network.set_weight(0, 16, 69, 0.9019100197889187);
        network.set_weight(0, 16, 70, -0.09608172421499139);
        network.set_weight(0, 16, 71, 0.9960152883882516);
        network.set_weight(0, 16, 72, -0.35611161723383034);
        network.set_weight(0, 16, 73, 0.7611682121577787);
        network.set_weight(0, 16, 74, -0.997106313296221);
        network.set_weight(0, 16, 75, 0.35914913137593163);
        network.set_weight(0, 16, 76, 0.7703855975756089);
        network.set_weight(0, 16, 77, -0.4401360956739595);
        network.set_weight(0, 16, 78, 0.6954875401242597);
        network.set_weight(0, 16, 79, 0.198901702535635);
        network.set_weight(0, 16, 80, -0.35961290104270205);
        network.set_weight(0, 16, 81, -0.913925236467179);
        network.set_weight(0, 16, 82, 0.3232650473006209);
        network.set_weight(0, 16, 83, -0.2492607424633062);
        network.set_weight(0, 16, 84, 0.08738079500873353);
        network.set_weight(0, 16, 85, -0.6027459306726675);
        network.set_weight(0, 16, 86, -0.961294769762181);
        network.set_weight(0, 16, 87, -0.8062849640694121);
        network.set_weight(0, 16, 88, 0.2818365692207865);
        network.set_weight(0, 16, 89, -0.7451181224381984);
        network.set_weight(0, 16, 90, -0.40491779954797646);
        network.set_weight(0, 16, 91, 0.18386468758185215);
        network.set_weight(0, 16, 92, -0.4539405399618637);
        network.set_weight(0, 16, 93, -0.05450872014886432);
        network.set_weight(0, 16, 94, -0.17500394716198153);
        network.set_weight(0, 16, 95, 0.5545711444466555);
        network.set_weight(0, 16, 96, -0.19318430479393967);
        network.set_weight(0, 16, 97, -0.43388972053465635);
        network.set_weight(0, 16, 98, 0.9719426175435597);
        network.set_weight(0, 16, 99, -0.6543830071756378);
        network.set_weight(0, 17, 0, 0.28066731882432494);
        network.set_weight(0, 17, 1, 0.24741627964472324);
        network.set_weight(0, 17, 2, -0.30082101619567214);
        network.set_weight(0, 17, 3, 0.48731544336509947);
        network.set_weight(0, 17, 4, 0.5075199937260391);
        network.set_weight(0, 17, 5, -0.04727613439292533);
        network.set_weight(0, 17, 6, -0.35387379113514017);
        network.set_weight(0, 17, 7, -0.7734973426437151);
        network.set_weight(0, 17, 8, 0.7398077416697584);
        network.set_weight(0, 17, 9, 0.9676914747664851);
        network.set_weight(0, 17, 10, -0.43908386324324344);
        network.set_weight(0, 17, 11, -0.3597890981187297);
        network.set_weight(0, 17, 12, 0.2915724696112867);
        network.set_weight(0, 17, 13, 0.5576528194799664);
        network.set_weight(0, 17, 14, 0.6906875934823249);
        network.set_weight(0, 17, 15, 0.5357516242009299);
        network.set_weight(0, 17, 16, 0.3608304497852397);
        network.set_weight(0, 17, 17, 0.24399544183141608);
        network.set_weight(0, 17, 18, -0.9711451447454975);
        network.set_weight(0, 17, 19, -0.020506603763447817);
        network.set_weight(0, 17, 20, 0.4170853107239689);
        network.set_weight(0, 17, 21, -0.3945455977274517);
        network.set_weight(0, 17, 22, -0.5061884875547165);
        network.set_weight(0, 17, 23, -0.17440601651054388);
        network.set_weight(0, 17, 24, 0.0885659456927741);
        network.set_weight(0, 17, 25, -0.9779518711866559);
        network.set_weight(0, 17, 26, 0.5031392082400437);
        network.set_weight(0, 17, 27, 0.4173040290287482);
        network.set_weight(0, 17, 28, -0.5504278242090415);
        network.set_weight(0, 17, 29, -0.5028179218208555);
        network.set_weight(0, 17, 30, -0.6510274406847962);
        network.set_weight(0, 17, 31, -0.17634245844807772);
        network.set_weight(0, 17, 32, 0.9197090803168213);
        network.set_weight(0, 17, 33, -0.2187481593442291);
        network.set_weight(0, 17, 34, 0.8519426665249263);
        network.set_weight(0, 17, 35, -0.6374986790166721);
        network.set_weight(0, 17, 36, -0.5212488883786663);
        network.set_weight(0, 17, 37, 0.013868717502262706);
        network.set_weight(0, 17, 38, -0.697851339229703);
        network.set_weight(0, 17, 39, -0.7733665124309415);
        network.set_weight(0, 17, 40, 0.3400169705677869);
        network.set_weight(0, 17, 41, -0.31521461901537573);
        network.set_weight(0, 17, 42, 0.39753794432008394);
        network.set_weight(0, 17, 43, -0.5455063399102127);
        network.set_weight(0, 17, 44, -0.4003796045261401);
        network.set_weight(0, 17, 45, 0.785678332322371);
        network.set_weight(0, 17, 46, 0.15930500009137027);
        network.set_weight(0, 17, 47, -0.7547666390851144);
        network.set_weight(0, 17, 48, -0.1586772386705535);
        network.set_weight(0, 17, 49, -0.7998514065230178);
        network.set_weight(0, 17, 50, -0.867525685912234);
        network.set_weight(0, 17, 51, 0.128322440225207);
        network.set_weight(0, 17, 52, -0.7765174055015989);
        network.set_weight(0, 17, 53, -0.5712639363113721);
        network.set_weight(0, 17, 54, -0.8548049548738763);
        network.set_weight(0, 17, 55, -0.777446771418917);
        network.set_weight(0, 17, 56, -0.10314706596526713);
        network.set_weight(0, 17, 57, -0.6686809333340529);
        network.set_weight(0, 17, 58, -0.37120570214178206);
        network.set_weight(0, 17, 59, -0.12967465715612958);
        network.set_weight(0, 17, 60, -0.6117708828019335);
        network.set_weight(0, 17, 61, -0.7302296827951924);
        network.set_weight(0, 17, 62, -0.7043928930292336);
        network.set_weight(0, 17, 63, 0.8825427122080551);
        network.set_weight(0, 17, 64, -0.3025834930566327);
        network.set_weight(0, 17, 65, -0.08877752010358853);
        network.set_weight(0, 17, 66, 0.5058879858130485);
        network.set_weight(0, 17, 67, 0.5743486268539382);
        network.set_weight(0, 17, 68, 0.39144729615262275);
        network.set_weight(0, 17, 69, 0.7838916773997844);
        network.set_weight(0, 17, 70, 0.06531538425930239);
        network.set_weight(0, 17, 71, -0.6680106240641634);
        network.set_weight(0, 17, 72, 0.22444914318666065);
        network.set_weight(0, 17, 73, -0.09517758211422556);
        network.set_weight(0, 17, 74, 0.6592032198011619);
        network.set_weight(0, 17, 75, -0.5140786027204007);
        network.set_weight(0, 17, 76, 0.3542227547957244);
        network.set_weight(0, 17, 77, -0.9798536992684306);
        network.set_weight(0, 17, 78, -0.23387476559556797);
        network.set_weight(0, 17, 79, -0.30779974239858743);
        network.set_weight(0, 17, 80, -0.8112732845987933);
        network.set_weight(0, 17, 81, 0.6417438825596002);
        network.set_weight(0, 17, 82, 0.6537373517723395);
        network.set_weight(0, 17, 83, -0.499227572787337);
        network.set_weight(0, 17, 84, 0.4231409671834494);
        network.set_weight(0, 17, 85, 0.8041716297191677);
        network.set_weight(0, 17, 86, 0.16017144100730696);
        network.set_weight(0, 17, 87, -0.26247052878735655);
        network.set_weight(0, 17, 88, 0.364602877143297);
        network.set_weight(0, 17, 89, -0.2090434104641481);
        network.set_weight(0, 17, 90, 0.1428989866851471);
        network.set_weight(0, 17, 91, 0.3227801761125284);
        network.set_weight(0, 17, 92, -0.41422154915297704);
        network.set_weight(0, 17, 93, 0.3246064709772145);
        network.set_weight(0, 17, 94, 0.015717872544093403);
        network.set_weight(0, 17, 95, 0.18621821577586384);
        network.set_weight(0, 17, 96, -0.4219971411049803);
        network.set_weight(0, 17, 97, 0.4916327107524838);
        network.set_weight(0, 17, 98, -0.7013759417937204);
        network.set_weight(0, 17, 99, -0.03841432146911572);
        network.set_weight(0, 18, 0, 0.06343709937585706);
        network.set_weight(0, 18, 1, -0.9836176126711564);
        network.set_weight(0, 18, 2, 0.5945351301023654);
        network.set_weight(0, 18, 3, 0.10895990204673978);
        network.set_weight(0, 18, 4, -0.842242365046806);
        network.set_weight(0, 18, 5, 0.6977391403060942);
        network.set_weight(0, 18, 6, 0.4204365629683715);
        network.set_weight(0, 18, 7, 0.8294522343692645);
        network.set_weight(0, 18, 8, 0.363860677239511);
        network.set_weight(0, 18, 9, 0.006975749864972958);
        network.set_weight(0, 18, 10, 0.5808068633885817);
        network.set_weight(0, 18, 11, -0.28305375658761545);
        network.set_weight(0, 18, 12, -0.1287994143778053);
        network.set_weight(0, 18, 13, -0.2877780378233261);
        network.set_weight(0, 18, 14, -0.347884657598029);
        network.set_weight(0, 18, 15, 0.8867524052485358);
        network.set_weight(0, 18, 16, 0.01286054235271017);
        network.set_weight(0, 18, 17, 0.014993843666444961);
        network.set_weight(0, 18, 18, -0.24292240519658748);
        network.set_weight(0, 18, 19, -0.34462407792769656);
        network.set_weight(0, 18, 20, -0.5381173129201109);
        network.set_weight(0, 18, 21, 0.8982814419392924);
        network.set_weight(0, 18, 22, 0.4651087239455398);
        network.set_weight(0, 18, 23, -0.03796382092005968);
        network.set_weight(0, 18, 24, 0.1950451170687899);
        network.set_weight(0, 18, 25, 0.6772633950432194);
        network.set_weight(0, 18, 26, -0.2601020677227097);
        network.set_weight(0, 18, 27, -0.4357723996676388);
        network.set_weight(0, 18, 28, -0.045519371597507075);
        network.set_weight(0, 18, 29, -0.07959163622950616);
        network.set_weight(0, 18, 30, 0.6617806953887226);
        network.set_weight(0, 18, 31, 0.7889526303468146);
        network.set_weight(0, 18, 32, 0.7180093454915175);
        network.set_weight(0, 18, 33, 0.38861251923417406);
        network.set_weight(0, 18, 34, 0.055840326512418104);
        network.set_weight(0, 18, 35, -0.6506711526418509);
        network.set_weight(0, 18, 36, 0.8626054566694674);
        network.set_weight(0, 18, 37, 0.7083783685810754);
        network.set_weight(0, 18, 38, 0.0522294779601975);
        network.set_weight(0, 18, 39, 0.508322196395631);
        network.set_weight(0, 18, 40, 0.7982612607526001);
        network.set_weight(0, 18, 41, -0.39097089962433595);
        network.set_weight(0, 18, 42, 0.14756105741827708);
        network.set_weight(0, 18, 43, 0.9180941776835165);
        network.set_weight(0, 18, 44, -0.5531864679478844);
        network.set_weight(0, 18, 45, -0.6997528211198993);
        network.set_weight(0, 18, 46, 0.8985261440390193);
        network.set_weight(0, 18, 47, 0.7518190749124001);
        network.set_weight(0, 18, 48, -0.9126058635519658);
        network.set_weight(0, 18, 49, 0.16006073405575494);
        network.set_weight(0, 18, 50, 0.29108274137019663);
        network.set_weight(0, 18, 51, 0.4337226848538984);
        network.set_weight(0, 18, 52, 0.23253240101849615);
        network.set_weight(0, 18, 53, 0.12500735358180237);
        network.set_weight(0, 18, 54, 0.21500446844210241);
        network.set_weight(0, 18, 55, 0.23932204370470345);
        network.set_weight(0, 18, 56, -0.8154108173250514);
        network.set_weight(0, 18, 57, -0.6520607478029494);
        network.set_weight(0, 18, 58, -0.4277344375314709);
        network.set_weight(0, 18, 59, 0.8558265148236);
        network.set_weight(0, 18, 60, -0.06596447847891751);
        network.set_weight(0, 18, 61, 0.22731431403490543);
        network.set_weight(0, 18, 62, 0.9368391789892596);
        network.set_weight(0, 18, 63, -0.7991329076032734);
        network.set_weight(0, 18, 64, -0.6149964754705646);
        network.set_weight(0, 18, 65, -0.4372362236426788);
        network.set_weight(0, 18, 66, 0.8381981910610745);
        network.set_weight(0, 18, 67, 0.4360410689922063);
        network.set_weight(0, 18, 68, -0.738892078931179);
        network.set_weight(0, 18, 69, -0.8580716779331508);
        network.set_weight(0, 18, 70, -0.6600846755273042);
        network.set_weight(0, 18, 71, 0.8311906547071295);
        network.set_weight(0, 18, 72, -0.15786465222534996);
        network.set_weight(0, 18, 73, 0.7394773296607753);
        network.set_weight(0, 18, 74, 0.6932348225249299);
        network.set_weight(0, 18, 75, 0.9329355269477242);
        network.set_weight(0, 18, 76, 0.08453192277666699);
        network.set_weight(0, 18, 77, -0.45323917398293245);
        network.set_weight(0, 18, 78, 0.028845006095934433);
        network.set_weight(0, 18, 79, 0.7865081695905529);
        network.set_weight(0, 18, 80, 0.8959567313642407);
        network.set_weight(0, 18, 81, -0.20459608175122046);
        network.set_weight(0, 18, 82, -0.02573953348078528);
        network.set_weight(0, 18, 83, 0.5957485510007372);
        network.set_weight(0, 18, 84, -0.206059134955364);
        network.set_weight(0, 18, 85, -0.5206591006721872);
        network.set_weight(0, 18, 86, -0.4412580841431071);
        network.set_weight(0, 18, 87, -0.0397624465158144);
        network.set_weight(0, 18, 88, -0.5232847355050856);
        network.set_weight(0, 18, 89, 0.5292539418421827);
        network.set_weight(0, 18, 90, 0.33442298742128274);
        network.set_weight(0, 18, 91, 0.8653247435364184);
        network.set_weight(0, 18, 92, 0.4936076087493959);
        network.set_weight(0, 18, 93, -0.09337839417771421);
        network.set_weight(0, 18, 94, -0.6347102944929865);
        network.set_weight(0, 18, 95, -0.5293863794652529);
        network.set_weight(0, 18, 96, 0.7737280246019604);
        network.set_weight(0, 18, 97, 0.27118619487479734);
        network.set_weight(0, 18, 98, -0.7862333507106378);
        network.set_weight(0, 18, 99, -0.0003379143241841742);
        network.set_weight(0, 19, 0, 0.5324645176830267);
        network.set_weight(0, 19, 1, 0.6095666262367851);
        network.set_weight(0, 19, 2, 0.6788038653415791);
        network.set_weight(0, 19, 3, 0.822042013022062);
        network.set_weight(0, 19, 4, -0.0353826276926279);
        network.set_weight(0, 19, 5, 0.3345075818793717);
        network.set_weight(0, 19, 6, -0.8533032190283536);
        network.set_weight(0, 19, 7, 0.3231905578919858);
        network.set_weight(0, 19, 8, 0.02925629241672789);
        network.set_weight(0, 19, 9, -0.5737305490627336);
        network.set_weight(0, 19, 10, -0.49419925497929706);
        network.set_weight(0, 19, 11, 0.4154875513163665);
        network.set_weight(0, 19, 12, -0.5482019359509269);
        network.set_weight(0, 19, 13, -0.3146276576506746);
        network.set_weight(0, 19, 14, -0.24609171519718198);
        network.set_weight(0, 19, 15, 0.5218838387025171);
        network.set_weight(0, 19, 16, -0.6146994782577242);
        network.set_weight(0, 19, 17, -0.8415726946474156);
        network.set_weight(0, 19, 18, -0.6332047689844074);
        network.set_weight(0, 19, 19, 0.42505236583875416);
        network.set_weight(0, 19, 20, -0.8990500974328566);
        network.set_weight(0, 19, 21, 0.10868545340654445);
        network.set_weight(0, 19, 22, 0.008349385316957614);
        network.set_weight(0, 19, 23, -0.25164707025238275);
        network.set_weight(0, 19, 24, -0.3053575779111932);
        network.set_weight(0, 19, 25, 0.07734247735676791);
        network.set_weight(0, 19, 26, -0.8783216248103523);
        network.set_weight(0, 19, 27, -0.35426915036338924);
        network.set_weight(0, 19, 28, -0.16707821197806805);
        network.set_weight(0, 19, 29, -0.7168545234217127);
        network.set_weight(0, 19, 30, 0.04924697973960712);
        network.set_weight(0, 19, 31, -0.3811545786485251);
        network.set_weight(0, 19, 32, -0.86880969551862);
        network.set_weight(0, 19, 33, -0.7438167847662236);
        network.set_weight(0, 19, 34, -0.34430145613698016);
        network.set_weight(0, 19, 35, 0.32366082905518523);
        network.set_weight(0, 19, 36, 0.6004858165250522);
        network.set_weight(0, 19, 37, -0.0275604953748374);
        network.set_weight(0, 19, 38, -0.9065748532849811);
        network.set_weight(0, 19, 39, 0.2139736549365201);
        network.set_weight(0, 19, 40, 0.8106412383842576);
        network.set_weight(0, 19, 41, -0.8969469020028236);
        network.set_weight(0, 19, 42, -0.30459383378494187);
        network.set_weight(0, 19, 43, -0.9662858277398028);
        network.set_weight(0, 19, 44, 0.1545937023793229);
        network.set_weight(0, 19, 45, -0.7914265649184142);
        network.set_weight(0, 19, 46, 0.8818733420239797);
        network.set_weight(0, 19, 47, -0.1852303810322138);
        network.set_weight(0, 19, 48, 0.2427144654941371);
        network.set_weight(0, 19, 49, -0.34260000820521075);
        network.set_weight(0, 19, 50, -0.32814764326331236);
        network.set_weight(0, 19, 51, -0.9769215477945683);
        network.set_weight(0, 19, 52, 0.7332992356724535);
        network.set_weight(0, 19, 53, -0.46055210674027913);
        network.set_weight(0, 19, 54, -0.5032814723120411);
        network.set_weight(0, 19, 55, -0.2801242177077712);
        network.set_weight(0, 19, 56, -0.6317636070418333);
        network.set_weight(0, 19, 57, -0.37534802572206827);
        network.set_weight(0, 19, 58, -0.43777162535312275);
        network.set_weight(0, 19, 59, 0.9499132705680626);
        network.set_weight(0, 19, 60, 0.7525511199752704);
        network.set_weight(0, 19, 61, -0.4351991574163523);
        network.set_weight(0, 19, 62, 0.6783742128358681);
        network.set_weight(0, 19, 63, -0.9237389597803995);
        network.set_weight(0, 19, 64, 0.13720767767458764);
        network.set_weight(0, 19, 65, 0.7270208427679701);
        network.set_weight(0, 19, 66, -0.566210229102011);
        network.set_weight(0, 19, 67, -0.6781037104395315);
        network.set_weight(0, 19, 68, 0.5882433516989611);
        network.set_weight(0, 19, 69, 0.30660017404777173);
        network.set_weight(0, 19, 70, 0.9482925475465029);
        network.set_weight(0, 19, 71, -0.6824298623804153);
        network.set_weight(0, 19, 72, -0.7031318130936604);
        network.set_weight(0, 19, 73, -0.8892288094571186);
        network.set_weight(0, 19, 74, -0.35142708382543186);
        network.set_weight(0, 19, 75, -0.904545428053545);
        network.set_weight(0, 19, 76, 0.22791764457086638);
        network.set_weight(0, 19, 77, -0.8282660951893805);
        network.set_weight(0, 19, 78, -0.09152124632957137);
        network.set_weight(0, 19, 79, 0.03013772555542049);
        network.set_weight(0, 19, 80, -0.8272965652423747);
        network.set_weight(0, 19, 81, 0.3837897366024263);
        network.set_weight(0, 19, 82, 0.981102571943617);
        network.set_weight(0, 19, 83, -0.22143958519692086);
        network.set_weight(0, 19, 84, 0.03361575032140007);
        network.set_weight(0, 19, 85, -0.24948605408653046);
        network.set_weight(0, 19, 86, 0.9596000225657448);
        network.set_weight(0, 19, 87, 0.7009727144345421);
        network.set_weight(0, 19, 88, 0.9374017723200851);
        network.set_weight(0, 19, 89, -0.22717809117326193);
        network.set_weight(0, 19, 90, -0.36733683087330693);
        network.set_weight(0, 19, 91, -0.967721373420072);
        network.set_weight(0, 19, 92, -0.8462738698119858);
        network.set_weight(0, 19, 93, 0.9126476311365845);
        network.set_weight(0, 19, 94, 0.16870009974932065);
        network.set_weight(0, 19, 95, -0.10783024722959911);
        network.set_weight(0, 19, 96, -0.684326701448732);
        network.set_weight(0, 19, 97, 0.8760549075665893);
        network.set_weight(0, 19, 98, -0.9212931186672604);
        network.set_weight(0, 19, 99, 0.29716338957951094);
        network.set_weight(0, 20, 0, 0.19790456364715303);
        network.set_weight(0, 20, 1, 0.46244089505904284);
        network.set_weight(0, 20, 2, 0.48741982465495304);
        network.set_weight(0, 20, 3, 0.3489963115349102);
        network.set_weight(0, 20, 4, 0.10692428769025963);
        network.set_weight(0, 20, 5, -0.13269050671393878);
        network.set_weight(0, 20, 6, 0.6037083832336738);
        network.set_weight(0, 20, 7, -0.7344462226688848);
        network.set_weight(0, 20, 8, -0.43502240586629415);
        network.set_weight(0, 20, 9, 0.5635890798228065);
        network.set_weight(0, 20, 10, 0.7781612621271263);
        network.set_weight(0, 20, 11, 0.32427901895034505);
        network.set_weight(0, 20, 12, -0.9002714315941305);
        network.set_weight(0, 20, 13, 0.6609497808460054);
        network.set_weight(0, 20, 14, 0.9369075846684694);
        network.set_weight(0, 20, 15, -0.07925902335882573);
        network.set_weight(0, 20, 16, -0.21926595604525057);
        network.set_weight(0, 20, 17, -0.2953818295309678);
        network.set_weight(0, 20, 18, 0.21312280999759858);
        network.set_weight(0, 20, 19, -0.6605550251427412);
        network.set_weight(0, 20, 20, -0.7307610652178895);
        network.set_weight(0, 20, 21, 0.9816821886548794);
        network.set_weight(0, 20, 22, 0.0020742614655866465);
        network.set_weight(0, 20, 23, 0.02953918345501938);
        network.set_weight(0, 20, 24, -0.39721109516598285);
        network.set_weight(0, 20, 25, -0.9106562737940902);
        network.set_weight(0, 20, 26, -0.8709525380763923);
        network.set_weight(0, 20, 27, -0.8820966429313886);
        network.set_weight(0, 20, 28, 0.40617380954311133);
        network.set_weight(0, 20, 29, 0.5594379556442808);
        network.set_weight(0, 20, 30, 0.9024638854973126);
        network.set_weight(0, 20, 31, 0.9612842441602683);
        network.set_weight(0, 20, 32, -0.6976154765980129);
        network.set_weight(0, 20, 33, -0.9697911176455181);
        network.set_weight(0, 20, 34, 0.36877850438235105);
        network.set_weight(0, 20, 35, -0.41582586342362604);
        network.set_weight(0, 20, 36, 0.8451278043267769);
        network.set_weight(0, 20, 37, -0.02469429760800379);
        network.set_weight(0, 20, 38, -0.12354306032822238);
        network.set_weight(0, 20, 39, -0.15884685549780997);
        network.set_weight(0, 20, 40, -0.38604822664102034);
        network.set_weight(0, 20, 41, 0.12795664837628085);
        network.set_weight(0, 20, 42, -0.6303631521036235);
        network.set_weight(0, 20, 43, 0.9543273453560643);
        network.set_weight(0, 20, 44, 0.6131138458409808);
        network.set_weight(0, 20, 45, 0.7067124177410999);
        network.set_weight(0, 20, 46, 0.8917918294056069);
        network.set_weight(0, 20, 47, 0.3654573272581698);
        network.set_weight(0, 20, 48, 0.8037003726964869);
        network.set_weight(0, 20, 49, 0.4769610363430923);
        network.set_weight(0, 20, 50, -0.05160967409534467);
        network.set_weight(0, 20, 51, -0.9580701048564799);
        network.set_weight(0, 20, 52, 0.030651264533508416);
        network.set_weight(0, 20, 53, 0.07897752612760955);
        network.set_weight(0, 20, 54, 0.47276175101980256);
        network.set_weight(0, 20, 55, 0.7377242396295662);
        network.set_weight(0, 20, 56, 0.2573838359657885);
        network.set_weight(0, 20, 57, -0.8256605940124713);
        network.set_weight(0, 20, 58, -0.8167759293753056);
        network.set_weight(0, 20, 59, 0.7420427113513519);
        network.set_weight(0, 20, 60, 0.7618861058030437);
        network.set_weight(0, 20, 61, -0.1988422465473263);
        network.set_weight(0, 20, 62, -0.8634459044826133);
        network.set_weight(0, 20, 63, -0.7852645743632474);
        network.set_weight(0, 20, 64, -0.7713137076823551);
        network.set_weight(0, 20, 65, 0.8274063523020665);
        network.set_weight(0, 20, 66, -0.18726658063274115);
        network.set_weight(0, 20, 67, -0.07252137079371068);
        network.set_weight(0, 20, 68, 0.6380592841981032);
        network.set_weight(0, 20, 69, -0.5131979419683619);
        network.set_weight(0, 20, 70, 0.06527937586918364);
        network.set_weight(0, 20, 71, 0.15653644570944025);
        network.set_weight(0, 20, 72, -0.16988173896298853);
        network.set_weight(0, 20, 73, -0.758934384710543);
        network.set_weight(0, 20, 74, -0.1523787048188776);
        network.set_weight(0, 20, 75, -0.7759146536430324);
        network.set_weight(0, 20, 76, -0.36517681619485454);
        network.set_weight(0, 20, 77, -0.19930939832641892);
        network.set_weight(0, 20, 78, -0.6193161304335513);
        network.set_weight(0, 20, 79, 0.9947410102410075);
        network.set_weight(0, 20, 80, 0.37975426235389964);
        network.set_weight(0, 20, 81, 0.8628487340543016);
        network.set_weight(0, 20, 82, 0.8640566641058383);
        network.set_weight(0, 20, 83, -0.4261412258094881);
        network.set_weight(0, 20, 84, -0.7100022923220088);
        network.set_weight(0, 20, 85, 0.9834596337711305);
        network.set_weight(0, 20, 86, 0.02037656065546578);
        network.set_weight(0, 20, 87, 0.3539238012063257);
        network.set_weight(0, 20, 88, 0.73293278356539);
        network.set_weight(0, 20, 89, -0.320201876296651);
        network.set_weight(0, 20, 90, 0.1844848828246437);
        network.set_weight(0, 20, 91, -0.40191652291986446);
        network.set_weight(0, 20, 92, -0.5693041163930346);
        network.set_weight(0, 20, 93, -0.9311468279002486);
        network.set_weight(0, 20, 94, -0.5285998912001717);
        network.set_weight(0, 20, 95, -0.5013271378639426);
        network.set_weight(0, 20, 96, 0.49442088849996013);
        network.set_weight(0, 20, 97, 0.032508375981769255);
        network.set_weight(0, 20, 98, 0.546270962059388);
        network.set_weight(0, 20, 99, -0.42753854511325873);
        network.set_weight(0, 21, 0, -0.5741056928903066);
        network.set_weight(0, 21, 1, 0.15594795316566268);
        network.set_weight(0, 21, 2, -0.4577254835964286);
        network.set_weight(0, 21, 3, 0.5076020561064425);
        network.set_weight(0, 21, 4, -0.23610436818378866);
        network.set_weight(0, 21, 5, -0.43858385958659385);
        network.set_weight(0, 21, 6, 0.5068349173968087);
        network.set_weight(0, 21, 7, -0.6224312134096488);
        network.set_weight(0, 21, 8, 0.44971075375247493);
        network.set_weight(0, 21, 9, -0.22038453255052848);
        network.set_weight(0, 21, 10, -0.8297915081485177);
        network.set_weight(0, 21, 11, 0.2554441329469641);
        network.set_weight(0, 21, 12, 0.21847101726333418);
        network.set_weight(0, 21, 13, -0.8001037523828474);
        network.set_weight(0, 21, 14, -0.07988161093756618);
        network.set_weight(0, 21, 15, -0.0744829090374084);
        network.set_weight(0, 21, 16, 0.4317580138415624);
        network.set_weight(0, 21, 17, -0.6067058667658252);
        network.set_weight(0, 21, 18, 0.11943852249552744);
        network.set_weight(0, 21, 19, 0.9846729179113205);
        network.set_weight(0, 21, 20, -0.9686383065215802);
        network.set_weight(0, 21, 21, 0.43325903483251027);
        network.set_weight(0, 21, 22, -0.300680848398315);
        network.set_weight(0, 21, 23, -0.02953830498030441);
        network.set_weight(0, 21, 24, -0.43574873740017694);
        network.set_weight(0, 21, 25, -0.07982810345126912);
        network.set_weight(0, 21, 26, -0.008799580926200257);
        network.set_weight(0, 21, 27, 0.8399687717155222);
        network.set_weight(0, 21, 28, 0.7465432530229477);
        network.set_weight(0, 21, 29, 0.8607760293811069);
        network.set_weight(0, 21, 30, 0.9356179219680032);
        network.set_weight(0, 21, 31, -0.2108135317428561);
        network.set_weight(0, 21, 32, 0.5616630890139453);
        network.set_weight(0, 21, 33, 0.7800487244587471);
        network.set_weight(0, 21, 34, -0.7659562330639369);
        network.set_weight(0, 21, 35, 0.45237821755221597);
        network.set_weight(0, 21, 36, 0.15405189558070642);
        network.set_weight(0, 21, 37, -0.6025103364018671);
        network.set_weight(0, 21, 38, 0.26305543745073523);
        network.set_weight(0, 21, 39, 0.3761329969302547);
        network.set_weight(0, 21, 40, 0.3074486523655564);
        network.set_weight(0, 21, 41, -0.9878245349481192);
        network.set_weight(0, 21, 42, 0.849669555460469);
        network.set_weight(0, 21, 43, -0.2973096291027115);
        network.set_weight(0, 21, 44, 0.604110857885745);
        network.set_weight(0, 21, 45, -0.6914303777541391);
        network.set_weight(0, 21, 46, 0.2042770911259666);
        network.set_weight(0, 21, 47, -0.8839938827124962);
        network.set_weight(0, 21, 48, 0.11374761933959943);
        network.set_weight(0, 21, 49, 0.2948953827808509);
        network.set_weight(0, 21, 50, -0.22527107416769354);
        network.set_weight(0, 21, 51, 0.4364525680383997);
        network.set_weight(0, 21, 52, -0.051167781598445705);
        network.set_weight(0, 21, 53, -0.8871559779263027);
        network.set_weight(0, 21, 54, -0.9219973860957205);
        network.set_weight(0, 21, 55, -0.8984833284690297);
        network.set_weight(0, 21, 56, -0.3211168561621076);
        network.set_weight(0, 21, 57, 0.8572574475297765);
        network.set_weight(0, 21, 58, -0.34235592690403305);
        network.set_weight(0, 21, 59, 0.6301515776521016);
        network.set_weight(0, 21, 60, 0.28889599344564143);
        network.set_weight(0, 21, 61, 0.4057773179063764);
        network.set_weight(0, 21, 62, 0.3115834025389219);
        network.set_weight(0, 21, 63, -0.5963715035682542);
        network.set_weight(0, 21, 64, 0.7440637122016496);
        network.set_weight(0, 21, 65, -0.1636052732435076);
        network.set_weight(0, 21, 66, 0.8696664660882298);
        network.set_weight(0, 21, 67, -0.9687188714730197);
        network.set_weight(0, 21, 68, -0.7697642742252531);
        network.set_weight(0, 21, 69, -0.7315435071342034);
        network.set_weight(0, 21, 70, 0.45485487316905515);
        network.set_weight(0, 21, 71, -0.7859288222575616);
        network.set_weight(0, 21, 72, -0.13673734542735505);
        network.set_weight(0, 21, 73, 0.027095906316416674);
        network.set_weight(0, 21, 74, 0.027924108688691218);
        network.set_weight(0, 21, 75, -0.4105448267746521);
        network.set_weight(0, 21, 76, 0.7636787050723279);
        network.set_weight(0, 21, 77, -0.09504596615360805);
        network.set_weight(0, 21, 78, -0.6491208347571649);
        network.set_weight(0, 21, 79, 0.11542091556340206);
        network.set_weight(0, 21, 80, -0.7747000046726336);
        network.set_weight(0, 21, 81, 0.33885830630975966);
        network.set_weight(0, 21, 82, -0.653291632209301);
        network.set_weight(0, 21, 83, 0.7808184496166231);
        network.set_weight(0, 21, 84, -0.8431901244191469);
        network.set_weight(0, 21, 85, -0.38032217038862703);
        network.set_weight(0, 21, 86, -0.5683705458935904);
        network.set_weight(0, 21, 87, 0.13933361530429544);
        network.set_weight(0, 21, 88, -0.1894442017606417);
        network.set_weight(0, 21, 89, -0.09541281525461076);
        network.set_weight(0, 21, 90, -0.10429730673094273);
        network.set_weight(0, 21, 91, 0.2238493428944801);
        network.set_weight(0, 21, 92, -0.47606313871860184);
        network.set_weight(0, 21, 93, -0.3560876851278625);
        network.set_weight(0, 21, 94, -0.483333356036745);
        network.set_weight(0, 21, 95, -0.7101877624954613);
        network.set_weight(0, 21, 96, 0.24847667378598648);
        network.set_weight(0, 21, 97, 0.8680346119214202);
        network.set_weight(0, 21, 98, 0.8168258211950152);
        network.set_weight(0, 21, 99, 0.9300282470389336);
        network.set_weight(0, 22, 0, -0.7798306217460802);
        network.set_weight(0, 22, 1, 0.4330579754214414);
        network.set_weight(0, 22, 2, -0.850767948810405);
        network.set_weight(0, 22, 3, 0.6305709173700824);
        network.set_weight(0, 22, 4, 0.6881636609478392);
        network.set_weight(0, 22, 5, -0.041427264493280935);
        network.set_weight(0, 22, 6, 0.9740584704166835);
        network.set_weight(0, 22, 7, -0.07301337652905082);
        network.set_weight(0, 22, 8, 0.0823471460643348);
        network.set_weight(0, 22, 9, -0.32363254362592864);
        network.set_weight(0, 22, 10, 0.6371780541138186);
        network.set_weight(0, 22, 11, 0.1275751610424738);
        network.set_weight(0, 22, 12, 0.0012004810699584034);
        network.set_weight(0, 22, 13, -0.15038039197976572);
        network.set_weight(0, 22, 14, 0.5066494670032626);
        network.set_weight(0, 22, 15, -0.8556784119229086);
        network.set_weight(0, 22, 16, 0.2647982977408583);
        network.set_weight(0, 22, 17, -0.8540081339878332);
        network.set_weight(0, 22, 18, -0.5657294312353907);
        network.set_weight(0, 22, 19, -0.9337757090709666);
        network.set_weight(0, 22, 20, 0.03895983596183705);
        network.set_weight(0, 22, 21, 0.8870952034490371);
        network.set_weight(0, 22, 22, -0.5739568146296639);
        network.set_weight(0, 22, 23, -0.7741834154767797);
        network.set_weight(0, 22, 24, 0.05310468231566001);
        network.set_weight(0, 22, 25, -0.9582699244250883);
        network.set_weight(0, 22, 26, -0.2986770695614276);
        network.set_weight(0, 22, 27, -0.1093706946250681);
        network.set_weight(0, 22, 28, -0.8449477673192769);
        network.set_weight(0, 22, 29, 0.7739334386317969);
        network.set_weight(0, 22, 30, -0.232106137338284);
        network.set_weight(0, 22, 31, 0.17437355265771814);
        network.set_weight(0, 22, 32, -0.7747566048420742);
        network.set_weight(0, 22, 33, 0.936680440459168);
        network.set_weight(0, 22, 34, -0.6364370010896401);
        network.set_weight(0, 22, 35, -0.06753870487857494);
        network.set_weight(0, 22, 36, -0.8234811803580324);
        network.set_weight(0, 22, 37, -0.6856981408764693);
        network.set_weight(0, 22, 38, -0.7284593880280008);
        network.set_weight(0, 22, 39, -0.2288183813813751);
        network.set_weight(0, 22, 40, -0.8243532578275385);
        network.set_weight(0, 22, 41, -0.06636235813416902);
        network.set_weight(0, 22, 42, 0.13044567289128506);
        network.set_weight(0, 22, 43, -0.6184743345745121);
        network.set_weight(0, 22, 44, 0.5353165907580593);
        network.set_weight(0, 22, 45, -0.8478242386899302);
        network.set_weight(0, 22, 46, 0.14973973726860001);
        network.set_weight(0, 22, 47, 0.6200059978436552);
        network.set_weight(0, 22, 48, 0.22819787515669443);
        network.set_weight(0, 22, 49, -0.9911019901557216);
        network.set_weight(0, 22, 50, -0.8501107576507345);
        network.set_weight(0, 22, 51, -0.9080194230908933);
        network.set_weight(0, 22, 52, -0.741738439285232);
        network.set_weight(0, 22, 53, 0.05248314796758291);
        network.set_weight(0, 22, 54, 0.9185326343078588);
        network.set_weight(0, 22, 55, -0.26241826366262155);
        network.set_weight(0, 22, 56, 0.5771002379236221);
        network.set_weight(0, 22, 57, -0.4595159567066516);
        network.set_weight(0, 22, 58, 0.9453088461130124);
        network.set_weight(0, 22, 59, -0.23452449034203493);
        network.set_weight(0, 22, 60, -0.6097366649860563);
        network.set_weight(0, 22, 61, -0.6173300774561188);
        network.set_weight(0, 22, 62, -0.7715160687573823);
        network.set_weight(0, 22, 63, -0.837156080276845);
        network.set_weight(0, 22, 64, 0.8532817560827561);
        network.set_weight(0, 22, 65, 0.44647570094448485);
        network.set_weight(0, 22, 66, -0.7088893714978775);
        network.set_weight(0, 22, 67, 0.2041896070723559);
        network.set_weight(0, 22, 68, -0.07204381247669245);
        network.set_weight(0, 22, 69, -0.8557808629129435);
        network.set_weight(0, 22, 70, 0.9755191800834795);
        network.set_weight(0, 22, 71, -0.5266856953113062);
        network.set_weight(0, 22, 72, 0.1466417403970921);
        network.set_weight(0, 22, 73, -0.2792303699777716);
        network.set_weight(0, 22, 74, -0.024821757539117417);
        network.set_weight(0, 22, 75, 0.9816357790076085);
        network.set_weight(0, 22, 76, 0.530641564750822);
        network.set_weight(0, 22, 77, -0.5232487893073932);
        network.set_weight(0, 22, 78, 0.407775794335381);
        network.set_weight(0, 22, 79, -0.07091997682593965);
        network.set_weight(0, 22, 80, -0.5233367941286853);
        network.set_weight(0, 22, 81, 0.11663135572902039);
        network.set_weight(0, 22, 82, -0.5325433064509792);
        network.set_weight(0, 22, 83, 0.6237469033849625);
        network.set_weight(0, 22, 84, -0.4111614971971014);
        network.set_weight(0, 22, 85, -0.8028248999791991);
        network.set_weight(0, 22, 86, 0.7257727296633465);
        network.set_weight(0, 22, 87, -0.6613188155349374);
        network.set_weight(0, 22, 88, 0.4166420113061664);
        network.set_weight(0, 22, 89, 0.7373734253764863);
        network.set_weight(0, 22, 90, 0.4540741891030675);
        network.set_weight(0, 22, 91, 0.899592821460597);
        network.set_weight(0, 22, 92, -0.45884987160850566);
        network.set_weight(0, 22, 93, -0.2540645479249286);
        network.set_weight(0, 22, 94, 0.27078698313956306);
        network.set_weight(0, 22, 95, -0.7650081664628186);
        network.set_weight(0, 22, 96, 0.9765177691369846);
        network.set_weight(0, 22, 97, 0.3199962393126896);
        network.set_weight(0, 22, 98, 0.3594760099835208);
        network.set_weight(0, 22, 99, 0.1674275586418168);
        network.set_weight(0, 23, 0, 0.009779629165143966);
        network.set_weight(0, 23, 1, -0.6110848963898412);
        network.set_weight(0, 23, 2, -0.7889428018485827);
        network.set_weight(0, 23, 3, -0.49111238782183175);
        network.set_weight(0, 23, 4, -0.9434644982013478);
        network.set_weight(0, 23, 5, 0.24703830014309136);
        network.set_weight(0, 23, 6, -0.6386375570309608);
        network.set_weight(0, 23, 7, 0.8421866906624809);
        network.set_weight(0, 23, 8, -0.7811209341171585);
        network.set_weight(0, 23, 9, -0.3598683004859211);
        network.set_weight(0, 23, 10, 0.7183037103358247);
        network.set_weight(0, 23, 11, 0.24293682447676135);
        network.set_weight(0, 23, 12, -0.17194223025925415);
        network.set_weight(0, 23, 13, 0.46303904083683767);
        network.set_weight(0, 23, 14, -0.19837284819813283);
        network.set_weight(0, 23, 15, -0.6868651509128603);
        network.set_weight(0, 23, 16, 0.9593833191134713);
        network.set_weight(0, 23, 17, 0.744696729007946);
        network.set_weight(0, 23, 18, 0.47584760422443706);
        network.set_weight(0, 23, 19, -0.4385332583544592);
        network.set_weight(0, 23, 20, 0.014106759213753817);
        network.set_weight(0, 23, 21, -0.8243733200084753);
        network.set_weight(0, 23, 22, -0.923674503877588);
        network.set_weight(0, 23, 23, 0.8920611706077533);
        network.set_weight(0, 23, 24, -0.16408536960104114);
        network.set_weight(0, 23, 25, -0.5630048464592052);
        network.set_weight(0, 23, 26, 0.5777132193222769);
        network.set_weight(0, 23, 27, 0.0519212075678408);
        network.set_weight(0, 23, 28, 0.3230945465361277);
        network.set_weight(0, 23, 29, -0.7834851539861727);
        network.set_weight(0, 23, 30, -0.10887958425457);
        network.set_weight(0, 23, 31, -0.18367433957275492);
        network.set_weight(0, 23, 32, -0.4114185139599249);
        network.set_weight(0, 23, 33, -0.6434689497449835);
        network.set_weight(0, 23, 34, 0.7472547184616627);
        network.set_weight(0, 23, 35, 0.48479776759116056);
        network.set_weight(0, 23, 36, 0.12723910411890005);
        network.set_weight(0, 23, 37, -0.4539883855457827);
        network.set_weight(0, 23, 38, 0.2684874350163602);
        network.set_weight(0, 23, 39, -0.17828053811874423);
        network.set_weight(0, 23, 40, -0.9958817457973448);
        network.set_weight(0, 23, 41, 0.2450232266218184);
        network.set_weight(0, 23, 42, 0.3317611210830129);
        network.set_weight(0, 23, 43, 0.9247237496083252);
        network.set_weight(0, 23, 44, 0.6521200210959508);
        network.set_weight(0, 23, 45, -0.8424530809446891);
        network.set_weight(0, 23, 46, -0.3667249140658797);
        network.set_weight(0, 23, 47, -0.9124836210599494);
        network.set_weight(0, 23, 48, -0.8637238784576173);
        network.set_weight(0, 23, 49, -0.06980249026667451);
        network.set_weight(0, 23, 50, -0.5821835530914738);
        network.set_weight(0, 23, 51, -0.878492445574599);
        network.set_weight(0, 23, 52, 0.2544470776587415);
        network.set_weight(0, 23, 53, 0.8430286211082765);
        network.set_weight(0, 23, 54, 0.6504740537779623);
        network.set_weight(0, 23, 55, -0.8929058473151787);
        network.set_weight(0, 23, 56, -0.40462256552502374);
        network.set_weight(0, 23, 57, -0.9243655117614604);
        network.set_weight(0, 23, 58, -0.1588657977118917);
        network.set_weight(0, 23, 59, 0.8713494715364893);
        network.set_weight(0, 23, 60, -0.6146059160043655);
        network.set_weight(0, 23, 61, 0.46124869920001443);
        network.set_weight(0, 23, 62, -0.008693293601127028);
        network.set_weight(0, 23, 63, 0.039310050864305834);
        network.set_weight(0, 23, 64, 0.6661638316667748);
        network.set_weight(0, 23, 65, -0.37789052974858883);
        network.set_weight(0, 23, 66, -0.3499384433378212);
        network.set_weight(0, 23, 67, 0.475905398348357);
        network.set_weight(0, 23, 68, -0.7191642601890147);
        network.set_weight(0, 23, 69, -0.7858268966795297);
        network.set_weight(0, 23, 70, -0.17969020112761291);
        network.set_weight(0, 23, 71, -0.2122140279359246);
        network.set_weight(0, 23, 72, -0.39527926974566996);
        network.set_weight(0, 23, 73, -0.49236153425485374);
        network.set_weight(0, 23, 74, 0.7608187387334238);
        network.set_weight(0, 23, 75, -0.18056545221471576);
        network.set_weight(0, 23, 76, -0.38211402810300044);
        network.set_weight(0, 23, 77, 0.5738768327147479);
        network.set_weight(0, 23, 78, 0.6918797619335781);
        network.set_weight(0, 23, 79, 0.40194530476271884);
        network.set_weight(0, 23, 80, 0.9285029012475579);
        network.set_weight(0, 23, 81, -0.7542751100878915);
        network.set_weight(0, 23, 82, -0.10452064190755017);
        network.set_weight(0, 23, 83, 0.622171521938834);
        network.set_weight(0, 23, 84, 0.9483708369951873);
        network.set_weight(0, 23, 85, -0.60375455969232);
        network.set_weight(0, 23, 86, 0.487428797503795);
        network.set_weight(0, 23, 87, -0.5772448189253119);
        network.set_weight(0, 23, 88, -0.20479539260333057);
        network.set_weight(0, 23, 89, 0.5021373753449205);
        network.set_weight(0, 23, 90, 0.5403052958982566);
        network.set_weight(0, 23, 91, -0.8852932046050359);
        network.set_weight(0, 23, 92, -0.48909669737987826);
        network.set_weight(0, 23, 93, 0.9261473828713442);
        network.set_weight(0, 23, 94, 0.13754377570876475);
        network.set_weight(0, 23, 95, 0.15667261319368064);
        network.set_weight(0, 23, 96, -0.48898273967391126);
        network.set_weight(0, 23, 97, -0.09849913828722445);
        network.set_weight(0, 23, 98, -0.4576684289766433);
        network.set_weight(0, 23, 99, -0.7249089821097443);
        network.set_weight(0, 24, 0, -0.4302795117611835);
        network.set_weight(0, 24, 1, 0.11503869549759482);
        network.set_weight(0, 24, 2, 0.04710980860900005);
        network.set_weight(0, 24, 3, 0.04898628186791254);
        network.set_weight(0, 24, 4, -0.312014253501089);
        network.set_weight(0, 24, 5, -0.1279149157210815);
        network.set_weight(0, 24, 6, 0.74741565515335);
        network.set_weight(0, 24, 7, 0.8399588496235322);
        network.set_weight(0, 24, 8, 0.794882882216329);
        network.set_weight(0, 24, 9, -0.5298698059791134);
        network.set_weight(0, 24, 10, 0.26950318180894817);
        network.set_weight(0, 24, 11, 0.5354912730758312);
        network.set_weight(0, 24, 12, -0.34477022876892827);
        network.set_weight(0, 24, 13, -0.04581425682555662);
        network.set_weight(0, 24, 14, 0.7125335351778188);
        network.set_weight(0, 24, 15, 0.40647491787737433);
        network.set_weight(0, 24, 16, 0.4524257731889494);
        network.set_weight(0, 24, 17, -0.8404190756295424);
        network.set_weight(0, 24, 18, -0.8944008156809222);
        network.set_weight(0, 24, 19, 0.3788925644931782);
        network.set_weight(0, 24, 20, 0.14544473004843006);
        network.set_weight(0, 24, 21, -0.6579856390224148);
        network.set_weight(0, 24, 22, -0.9912099537112287);
        network.set_weight(0, 24, 23, -0.5292721682220514);
        network.set_weight(0, 24, 24, 0.2458189758524325);
        network.set_weight(0, 24, 25, -0.2752014506681333);
        network.set_weight(0, 24, 26, 0.30086415549842793);
        network.set_weight(0, 24, 27, -0.6937078703138257);
        network.set_weight(0, 24, 28, 0.29693021056473645);
        network.set_weight(0, 24, 29, -0.7766210759708652);
        network.set_weight(0, 24, 30, 0.7914618315039181);
        network.set_weight(0, 24, 31, -0.4876198164722436);
        network.set_weight(0, 24, 32, -0.9908981661797178);
        network.set_weight(0, 24, 33, 0.6019537441765712);
        network.set_weight(0, 24, 34, -0.3583288919725145);
        network.set_weight(0, 24, 35, -0.1816782264844674);
        network.set_weight(0, 24, 36, -0.7112978523792113);
        network.set_weight(0, 24, 37, -0.593349460324206);
        network.set_weight(0, 24, 38, -0.2021222668453342);
        network.set_weight(0, 24, 39, -0.4174124181284431);
        network.set_weight(0, 24, 40, 0.010739330249590395);
        network.set_weight(0, 24, 41, -0.4657059892706008);
        network.set_weight(0, 24, 42, -0.12576410135916372);
        network.set_weight(0, 24, 43, -0.9417751528100655);
        network.set_weight(0, 24, 44, 0.006685081009196292);
        network.set_weight(0, 24, 45, 0.20188889452858616);
        network.set_weight(0, 24, 46, 0.796825772854538);
        network.set_weight(0, 24, 47, 0.4312026986635613);
        network.set_weight(0, 24, 48, -0.842572944439471);
        network.set_weight(0, 24, 49, -0.27054672404248925);
        network.set_weight(0, 24, 50, 0.5184734287129575);
        network.set_weight(0, 24, 51, 0.43642399531849696);
        network.set_weight(0, 24, 52, -0.8929954446594284);
        network.set_weight(0, 24, 53, -0.9435686514958179);
        network.set_weight(0, 24, 54, -0.008323852103511609);
        network.set_weight(0, 24, 55, -0.10494465189248903);
        network.set_weight(0, 24, 56, -0.725481395177267);
        network.set_weight(0, 24, 57, -0.4703472569406755);
        network.set_weight(0, 24, 58, -0.3009013665092073);
        network.set_weight(0, 24, 59, 0.5743951092099524);
        network.set_weight(0, 24, 60, -0.481299948784468);
        network.set_weight(0, 24, 61, 0.6113450307346102);
        network.set_weight(0, 24, 62, 0.6803628286153311);
        network.set_weight(0, 24, 63, -0.5063116728737842);
        network.set_weight(0, 24, 64, 0.7056148471430801);
        network.set_weight(0, 24, 65, -0.8384829133242706);
        network.set_weight(0, 24, 66, -0.2350529884921737);
        network.set_weight(0, 24, 67, -0.8010317723492577);
        network.set_weight(0, 24, 68, -0.35366105569566275);
        network.set_weight(0, 24, 69, -0.43368047091235207);
        network.set_weight(0, 24, 70, 0.5225783166070499);
        network.set_weight(0, 24, 71, 0.6645352073178123);
        network.set_weight(0, 24, 72, -0.33214445688264393);
        network.set_weight(0, 24, 73, -0.32163180747064146);
        network.set_weight(0, 24, 74, 0.9293689931635798);
        network.set_weight(0, 24, 75, -0.6751752849388959);
        network.set_weight(0, 24, 76, -0.05375556878443555);
        network.set_weight(0, 24, 77, 0.183865328675604);
        network.set_weight(0, 24, 78, 0.31577244451292197);
        network.set_weight(0, 24, 79, -0.6929313185323995);
        network.set_weight(0, 24, 80, -0.3657870486174153);
        network.set_weight(0, 24, 81, -0.7034248644409855);
        network.set_weight(0, 24, 82, 0.5138792553093439);
        network.set_weight(0, 24, 83, 0.45512054303029026);
        network.set_weight(0, 24, 84, 0.6436803174166874);
        network.set_weight(0, 24, 85, -0.1412243385966634);
        network.set_weight(0, 24, 86, -0.9621932241040858);
        network.set_weight(0, 24, 87, 0.7991386218975847);
        network.set_weight(0, 24, 88, -0.7888586079938986);
        network.set_weight(0, 24, 89, -0.551692726949297);
        network.set_weight(0, 24, 90, -0.9384513946941964);
        network.set_weight(0, 24, 91, -0.20914353431133526);
        network.set_weight(0, 24, 92, 0.388615853725629);
        network.set_weight(0, 24, 93, 0.8577718532883294);
        network.set_weight(0, 24, 94, 0.09641030776413162);
        network.set_weight(0, 24, 95, -0.8253151946443178);
        network.set_weight(0, 24, 96, 0.7683475954840981);
        network.set_weight(0, 24, 97, -0.8030086889990067);
        network.set_weight(0, 24, 98, -0.5921243538503704);
        network.set_weight(0, 24, 99, -0.5597615439589088);
        network.set_weight(0, 25, 0, 0.7721125768574439);
        network.set_weight(0, 25, 1, -0.18067432987514143);
        network.set_weight(0, 25, 2, 0.6868663007350877);
        network.set_weight(0, 25, 3, 0.1134028317136555);
        network.set_weight(0, 25, 4, -0.04426214973910958);
        network.set_weight(0, 25, 5, 0.5740082785166547);
        network.set_weight(0, 25, 6, -0.5781234631884589);
        network.set_weight(0, 25, 7, -0.4567436399920701);
        network.set_weight(0, 25, 8, 0.822832420486397);
        network.set_weight(0, 25, 9, 0.20766512676556448);
        network.set_weight(0, 25, 10, -0.23847941703463604);
        network.set_weight(0, 25, 11, 0.2584053908340205);
        network.set_weight(0, 25, 12, 0.4985448392012293);
        network.set_weight(0, 25, 13, 0.42410288751489533);
        network.set_weight(0, 25, 14, 0.011532391091782612);
        network.set_weight(0, 25, 15, 0.24803638380989335);
        network.set_weight(0, 25, 16, -0.526543297765232);
        network.set_weight(0, 25, 17, -0.03591803497134105);
        network.set_weight(0, 25, 18, 0.765581854854394);
        network.set_weight(0, 25, 19, 0.8285212168930232);
        network.set_weight(0, 25, 20, -0.956390121084594);
        network.set_weight(0, 25, 21, -0.4911985648334023);
        network.set_weight(0, 25, 22, -0.4768257430530949);
        network.set_weight(0, 25, 23, -0.3452737411149518);
        network.set_weight(0, 25, 24, -0.3927056668264426);
        network.set_weight(0, 25, 25, -0.437541544947212);
        network.set_weight(0, 25, 26, -0.05346361021314183);
        network.set_weight(0, 25, 27, -0.5180901791358585);
        network.set_weight(0, 25, 28, 0.4604291455885994);
        network.set_weight(0, 25, 29, -0.9424030201248457);
        network.set_weight(0, 25, 30, 0.9257383449999685);
        network.set_weight(0, 25, 31, -0.6230657011534084);
        network.set_weight(0, 25, 32, 0.7887837534990156);
        network.set_weight(0, 25, 33, 0.358688007007093);
        network.set_weight(0, 25, 34, 0.7680505956351416);
        network.set_weight(0, 25, 35, -0.13016374275377518);
        network.set_weight(0, 25, 36, -0.3522232211554017);
        network.set_weight(0, 25, 37, 0.22094695029725964);
        network.set_weight(0, 25, 38, -0.6089882661935944);
        network.set_weight(0, 25, 39, -0.1580668056013057);
        network.set_weight(0, 25, 40, 0.08347688752828986);
        network.set_weight(0, 25, 41, -0.7530551874877254);
        network.set_weight(0, 25, 42, 0.6027717813500735);
        network.set_weight(0, 25, 43, -0.08327341282606526);
        network.set_weight(0, 25, 44, 0.06396934835602353);
        network.set_weight(0, 25, 45, 0.3578173000293161);
        network.set_weight(0, 25, 46, 0.7966170118281819);
        network.set_weight(0, 25, 47, -0.7251302379521483);
        network.set_weight(0, 25, 48, -0.6164890432478896);
        network.set_weight(0, 25, 49, -0.7525157320818432);
        network.set_weight(0, 25, 50, 0.9258119038504022);
        network.set_weight(0, 25, 51, -0.1374497264687049);
        network.set_weight(0, 25, 52, 0.4363029089403856);
        network.set_weight(0, 25, 53, -0.6671817128672848);
        network.set_weight(0, 25, 54, 0.8559986320144068);
        network.set_weight(0, 25, 55, -0.7489397290070263);
        network.set_weight(0, 25, 56, 0.3506094555088457);
        network.set_weight(0, 25, 57, -0.946713390687417);
        network.set_weight(0, 25, 58, 0.728557398531293);
        network.set_weight(0, 25, 59, -0.22349354478186978);
        network.set_weight(0, 25, 60, 0.2559522687024025);
        network.set_weight(0, 25, 61, 0.19868767647047947);
        network.set_weight(0, 25, 62, -0.594895172018576);
        network.set_weight(0, 25, 63, -0.09100538547162484);
        network.set_weight(0, 25, 64, -0.9951006031058374);
        network.set_weight(0, 25, 65, 0.5666067222559394);
        network.set_weight(0, 25, 66, -0.08933549675911734);
        network.set_weight(0, 25, 67, -0.4448304936671832);
        network.set_weight(0, 25, 68, -0.2126625719970019);
        network.set_weight(0, 25, 69, -0.18408662014550248);
        network.set_weight(0, 25, 70, -0.6810228217210927);
        network.set_weight(0, 25, 71, -0.26730730269420433);
        network.set_weight(0, 25, 72, 0.3530425962246351);
        network.set_weight(0, 25, 73, 0.11885167262877228);
        network.set_weight(0, 25, 74, 0.9842252650329093);
        network.set_weight(0, 25, 75, 0.4974662987112073);
        network.set_weight(0, 25, 76, 0.6567992369838802);
        network.set_weight(0, 25, 77, -0.7058105370942012);
        network.set_weight(0, 25, 78, 0.04076508108412025);
        network.set_weight(0, 25, 79, -0.5112208353638972);
        network.set_weight(0, 25, 80, -0.522251423542835);
        network.set_weight(0, 25, 81, -0.34157263524912373);
        network.set_weight(0, 25, 82, 0.1385959615889254);
        network.set_weight(0, 25, 83, -0.1708627240655627);
        network.set_weight(0, 25, 84, -0.20360003025992324);
        network.set_weight(0, 25, 85, -0.26921950046546295);
        network.set_weight(0, 25, 86, 0.972896300746714);
        network.set_weight(0, 25, 87, -0.15515048672671106);
        network.set_weight(0, 25, 88, 0.837010129403305);
        network.set_weight(0, 25, 89, 0.9859115148414435);
        network.set_weight(0, 25, 90, 0.24229308167042674);
        network.set_weight(0, 25, 91, 0.9537550447921217);
        network.set_weight(0, 25, 92, 0.999558895061299);
        network.set_weight(0, 25, 93, 0.6300024673395994);
        network.set_weight(0, 25, 94, 0.4299818991628219);
        network.set_weight(0, 25, 95, -0.5577971974096494);
        network.set_weight(0, 25, 96, -0.6326764312321094);
        network.set_weight(0, 25, 97, -0.893900157464798);
        network.set_weight(0, 25, 98, -0.5659144690589821);
        network.set_weight(0, 25, 99, 0.056346617811199984);
        network.set_weight(0, 26, 0, -0.12558657521899508);
        network.set_weight(0, 26, 1, 0.5095841015097067);
        network.set_weight(0, 26, 2, -0.39798553949745985);
        network.set_weight(0, 26, 3, 0.2411063715470505);
        network.set_weight(0, 26, 4, -0.2781525654863479);
        network.set_weight(0, 26, 5, -0.5577696630678355);
        network.set_weight(0, 26, 6, 0.5518683744264432);
        network.set_weight(0, 26, 7, -0.4146601096897091);
        network.set_weight(0, 26, 8, 0.03777311048345022);
        network.set_weight(0, 26, 9, -0.4977392175843576);
        network.set_weight(0, 26, 10, 0.2967784338121886);
        network.set_weight(0, 26, 11, -0.6515595119235276);
        network.set_weight(0, 26, 12, -0.8745234559263491);
        network.set_weight(0, 26, 13, 0.253694119445391);
        network.set_weight(0, 26, 14, -0.011240600085985708);
        network.set_weight(0, 26, 15, 0.30196187547202435);
        network.set_weight(0, 26, 16, -0.8438641799381026);
        network.set_weight(0, 26, 17, 0.5549114488631075);
        network.set_weight(0, 26, 18, -0.9033794748362665);
        network.set_weight(0, 26, 19, 0.9127149621766426);
        network.set_weight(0, 26, 20, 0.8785248714257243);
        network.set_weight(0, 26, 21, 0.6017869944648877);
        network.set_weight(0, 26, 22, -0.3743395491522816);
        network.set_weight(0, 26, 23, 0.29131414548791357);
        network.set_weight(0, 26, 24, 0.9836747492196316);
        network.set_weight(0, 26, 25, 0.43410048694539194);
        network.set_weight(0, 26, 26, 0.3210496267322085);
        network.set_weight(0, 26, 27, -0.9396383034724296);
        network.set_weight(0, 26, 28, -0.9273206706079249);
        network.set_weight(0, 26, 29, 0.2570691108558878);
        network.set_weight(0, 26, 30, -0.06955193424249684);
        network.set_weight(0, 26, 31, -0.01917462619202226);
        network.set_weight(0, 26, 32, -0.6166358113599331);
        network.set_weight(0, 26, 33, -0.38985356232444546);
        network.set_weight(0, 26, 34, 0.7797087161510048);
        network.set_weight(0, 26, 35, -0.27008907302139695);
        network.set_weight(0, 26, 36, 0.9417356275538042);
        network.set_weight(0, 26, 37, -0.6664010964266207);
        network.set_weight(0, 26, 38, 0.06356198364863475);
        network.set_weight(0, 26, 39, 0.2765558118901472);
        network.set_weight(0, 26, 40, 0.37218695171090155);
        network.set_weight(0, 26, 41, 0.6108839342000403);
        network.set_weight(0, 26, 42, 0.5125113619746149);
        network.set_weight(0, 26, 43, 0.6358825155053831);
        network.set_weight(0, 26, 44, -0.8818020629939862);
        network.set_weight(0, 26, 45, -0.8382734745420002);
        network.set_weight(0, 26, 46, -0.7337931259268669);
        network.set_weight(0, 26, 47, -0.6039878872929703);
        network.set_weight(0, 26, 48, 0.4363543938145513);
        network.set_weight(0, 26, 49, 0.07575556032818476);
        network.set_weight(0, 26, 50, 0.41386257374343804);
        network.set_weight(0, 26, 51, 0.1983438156309505);
        network.set_weight(0, 26, 52, 0.11938097898773692);
        network.set_weight(0, 26, 53, -0.6286169014716982);
        network.set_weight(0, 26, 54, 0.7204408648730152);
        network.set_weight(0, 26, 55, 0.5456674204541203);
        network.set_weight(0, 26, 56, 0.5120151761390439);
        network.set_weight(0, 26, 57, 0.8635275465889214);
        network.set_weight(0, 26, 58, -0.20909483842068344);
        network.set_weight(0, 26, 59, -0.1562205485397259);
        network.set_weight(0, 26, 60, -0.05781271112278241);
        network.set_weight(0, 26, 61, -0.30057104072263696);
        network.set_weight(0, 26, 62, 0.022425848755034172);
        network.set_weight(0, 26, 63, 0.25244628258244184);
        network.set_weight(0, 26, 64, 0.17483654847158325);
        network.set_weight(0, 26, 65, -0.6471376877237114);
        network.set_weight(0, 26, 66, 0.4504112294955307);
        network.set_weight(0, 26, 67, -0.8588040284405891);
        network.set_weight(0, 26, 68, -0.585568512982833);
        network.set_weight(0, 26, 69, -0.20663543358219472);
        network.set_weight(0, 26, 70, 0.6535809895422446);
        network.set_weight(0, 26, 71, -0.4959013145747535);
        network.set_weight(0, 26, 72, 0.6549300631716908);
        network.set_weight(0, 26, 73, 0.16118147438816655);
        network.set_weight(0, 26, 74, 0.3982342060082502);
        network.set_weight(0, 26, 75, -0.40731504383367967);
        network.set_weight(0, 26, 76, 0.9421197802253605);
        network.set_weight(0, 26, 77, 0.30192080212766115);
        network.set_weight(0, 26, 78, -0.8390674847029183);
        network.set_weight(0, 26, 79, 0.6126966127579883);
        network.set_weight(0, 26, 80, -0.06543356183074778);
        network.set_weight(0, 26, 81, 0.6695685766676915);
        network.set_weight(0, 26, 82, 0.4011690220181474);
        network.set_weight(0, 26, 83, 0.9324428071842523);
        network.set_weight(0, 26, 84, 0.8183600011182324);
        network.set_weight(0, 26, 85, 0.33295652317862645);
        network.set_weight(0, 26, 86, 0.530854914490031);
        network.set_weight(0, 26, 87, -0.8798942214558851);
        network.set_weight(0, 26, 88, 0.5897771440945465);
        network.set_weight(0, 26, 89, 0.4705227608062963);
        network.set_weight(0, 26, 90, 0.8865933853307957);
        network.set_weight(0, 26, 91, 0.510159660364262);
        network.set_weight(0, 26, 92, 0.233882338045156);
        network.set_weight(0, 26, 93, 0.55683538660336);
        network.set_weight(0, 26, 94, 0.20477094198031698);
        network.set_weight(0, 26, 95, -0.03460841515018931);
        network.set_weight(0, 26, 96, 0.9596134034071702);
        network.set_weight(0, 26, 97, -0.01152731790178163);
        network.set_weight(0, 26, 98, -0.7979910513505615);
        network.set_weight(0, 26, 99, -0.9087547336488015);
        network.set_weight(0, 27, 0, -0.26220427234322896);
        network.set_weight(0, 27, 1, -0.08740548137335025);
        network.set_weight(0, 27, 2, 0.11258265291205061);
        network.set_weight(0, 27, 3, -0.8607208166166087);
        network.set_weight(0, 27, 4, 0.10078617269875201);
        network.set_weight(0, 27, 5, 0.9170646717552544);
        network.set_weight(0, 27, 6, 0.5033942725590894);
        network.set_weight(0, 27, 7, 0.4067988559487772);
        network.set_weight(0, 27, 8, 0.030443347544508503);
        network.set_weight(0, 27, 9, 0.7687068046697434);
        network.set_weight(0, 27, 10, -0.8181974865719068);
        network.set_weight(0, 27, 11, 0.5549156699953555);
        network.set_weight(0, 27, 12, 0.42654005198188316);
        network.set_weight(0, 27, 13, -0.24338317537040388);
        network.set_weight(0, 27, 14, -0.01893038382151646);
        network.set_weight(0, 27, 15, -0.6960152187798636);
        network.set_weight(0, 27, 16, -0.9875214280984264);
        network.set_weight(0, 27, 17, -0.3284837834272716);
        network.set_weight(0, 27, 18, -0.32382352296701145);
        network.set_weight(0, 27, 19, 0.04103675861204681);
        network.set_weight(0, 27, 20, -0.3082621172468216);
        network.set_weight(0, 27, 21, 0.7786782226548441);
        network.set_weight(0, 27, 22, -0.7113694905471677);
        network.set_weight(0, 27, 23, 0.6478298450608571);
        network.set_weight(0, 27, 24, 0.08862792077979575);
        network.set_weight(0, 27, 25, -0.5575312813688476);
        network.set_weight(0, 27, 26, 0.7520850995790749);
        network.set_weight(0, 27, 27, 0.10614236782931341);
        network.set_weight(0, 27, 28, -0.8067560071852078);
        network.set_weight(0, 27, 29, 0.7332858207744648);
        network.set_weight(0, 27, 30, -0.4550777651864284);
        network.set_weight(0, 27, 31, 0.14317040354880506);
        network.set_weight(0, 27, 32, 0.3578063669894367);
        network.set_weight(0, 27, 33, 0.4879899653016224);
        network.set_weight(0, 27, 34, 0.4331591333062037);
        network.set_weight(0, 27, 35, 0.66316143423004);
        network.set_weight(0, 27, 36, 0.5410242837582357);
        network.set_weight(0, 27, 37, -0.6226397201409348);
        network.set_weight(0, 27, 38, 0.11421097531109048);
        network.set_weight(0, 27, 39, -0.012549642996219967);
        network.set_weight(0, 27, 40, -0.7335138339530234);
        network.set_weight(0, 27, 41, -0.13338003806191367);
        network.set_weight(0, 27, 42, 0.5534014466505852);
        network.set_weight(0, 27, 43, -0.11090808402571595);
        network.set_weight(0, 27, 44, -0.21577380846043237);
        network.set_weight(0, 27, 45, -0.047372415052997496);
        network.set_weight(0, 27, 46, 0.12988855323213788);
        network.set_weight(0, 27, 47, 0.5298197555669908);
        network.set_weight(0, 27, 48, 0.7065362425787716);
        network.set_weight(0, 27, 49, -0.4219162150451279);
        network.set_weight(0, 27, 50, -0.47267805731795387);
        network.set_weight(0, 27, 51, -0.3679691071179392);
        network.set_weight(0, 27, 52, 0.7302154431067489);
        network.set_weight(0, 27, 53, 0.8011229656291994);
        network.set_weight(0, 27, 54, -0.3163404403100416);
        network.set_weight(0, 27, 55, 0.6668759070085923);
        network.set_weight(0, 27, 56, 0.0886649346341668);
        network.set_weight(0, 27, 57, 0.9158101349473569);
        network.set_weight(0, 27, 58, 0.14004310242103934);
        network.set_weight(0, 27, 59, 0.8082933940314374);
        network.set_weight(0, 27, 60, 0.1089805201113494);
        network.set_weight(0, 27, 61, -0.3017231184290248);
        network.set_weight(0, 27, 62, 0.6983777995440417);
        network.set_weight(0, 27, 63, -0.32530654751725563);
        network.set_weight(0, 27, 64, 0.5771883930493242);
        network.set_weight(0, 27, 65, 0.06133999428247994);
        network.set_weight(0, 27, 66, -0.3528195696749039);
        network.set_weight(0, 27, 67, -0.047561285321507496);
        network.set_weight(0, 27, 68, 0.8121954683556754);
        network.set_weight(0, 27, 69, -0.4052363151314162);
        network.set_weight(0, 27, 70, -0.8273519342935127);
        network.set_weight(0, 27, 71, 0.8077388029949926);
        network.set_weight(0, 27, 72, -0.7639919390631837);
        network.set_weight(0, 27, 73, -0.5381400181540119);
        network.set_weight(0, 27, 74, -0.04061634407128922);
        network.set_weight(0, 27, 75, 0.5597153878420307);
        network.set_weight(0, 27, 76, 0.9550814588024925);
        network.set_weight(0, 27, 77, -0.6263404491142486);
        network.set_weight(0, 27, 78, -0.535048550072897);
        network.set_weight(0, 27, 79, 0.99228328897461);
        network.set_weight(0, 27, 80, 0.1255753186449231);
        network.set_weight(0, 27, 81, 0.7234342491747641);
        network.set_weight(0, 27, 82, -0.2689555939547801);
        network.set_weight(0, 27, 83, -0.4200040638237994);
        network.set_weight(0, 27, 84, 0.75003284547977);
        network.set_weight(0, 27, 85, -0.5866458079178682);
        network.set_weight(0, 27, 86, -0.4692348016933856);
        network.set_weight(0, 27, 87, -0.263139526564935);
        network.set_weight(0, 27, 88, -0.32990191006321745);
        network.set_weight(0, 27, 89, -0.6670103994848493);
        network.set_weight(0, 27, 90, -0.4205408541146829);
        network.set_weight(0, 27, 91, -0.6533646048437873);
        network.set_weight(0, 27, 92, 0.06529688105487552);
        network.set_weight(0, 27, 93, 0.3891349158893498);
        network.set_weight(0, 27, 94, 0.03143441817095338);
        network.set_weight(0, 27, 95, -0.8586677041789343);
        network.set_weight(0, 27, 96, 0.18065899057026025);
        network.set_weight(0, 27, 97, 0.4258138082120402);
        network.set_weight(0, 27, 98, -0.646360448233102);
        network.set_weight(0, 27, 99, -0.031103125620023375);
        network.set_weight(0, 28, 0, 0.9415105657251752);
        network.set_weight(0, 28, 1, 0.6541664986599631);
        network.set_weight(0, 28, 2, -0.0882027437360462);
        network.set_weight(0, 28, 3, -0.48185003715255603);
        network.set_weight(0, 28, 4, -0.6794742181763198);
        network.set_weight(0, 28, 5, -0.908331164737501);
        network.set_weight(0, 28, 6, -0.5312212311491731);
        network.set_weight(0, 28, 7, -0.023275767432222594);
        network.set_weight(0, 28, 8, -0.002963313939172041);
        network.set_weight(0, 28, 9, -0.654729373236399);
        network.set_weight(0, 28, 10, -0.0912152826367767);
        network.set_weight(0, 28, 11, -0.11785893269809611);
        network.set_weight(0, 28, 12, 0.618991864674733);
        network.set_weight(0, 28, 13, 0.8426067066984877);
        network.set_weight(0, 28, 14, 0.9145730277016586);
        network.set_weight(0, 28, 15, -0.02591502006639601);
        network.set_weight(0, 28, 16, 0.7019796009941923);
        network.set_weight(0, 28, 17, 0.24040630496892978);
        network.set_weight(0, 28, 18, -0.7965796770260312);
        network.set_weight(0, 28, 19, -0.8542727409622946);
        network.set_weight(0, 28, 20, 0.21017646996210781);
        network.set_weight(0, 28, 21, 0.36332084428269384);
        network.set_weight(0, 28, 22, 0.30327378737914135);
        network.set_weight(0, 28, 23, -0.03216286171739835);
        network.set_weight(0, 28, 24, 0.1853507707959734);
        network.set_weight(0, 28, 25, 0.3261758600374818);
        network.set_weight(0, 28, 26, 0.40705076367382986);
        network.set_weight(0, 28, 27, -0.7120904496860565);
        network.set_weight(0, 28, 28, -0.04792734839135426);
        network.set_weight(0, 28, 29, -0.3377696480300729);
        network.set_weight(0, 28, 30, -0.03293013470578798);
        network.set_weight(0, 28, 31, -0.2131810559363012);
        network.set_weight(0, 28, 32, -0.8542374700232664);
        network.set_weight(0, 28, 33, 0.5799049634029261);
        network.set_weight(0, 28, 34, 0.043932359365907336);
        network.set_weight(0, 28, 35, 0.7493327669136023);
        network.set_weight(0, 28, 36, -0.9136414228695042);
        network.set_weight(0, 28, 37, -0.8071744689116349);
        network.set_weight(0, 28, 38, -0.7478050316667213);
        network.set_weight(0, 28, 39, 0.740334880751486);
        network.set_weight(0, 28, 40, 0.013609036617890258);
        network.set_weight(0, 28, 41, 0.5011614195171128);
        network.set_weight(0, 28, 42, -0.8456036687261959);
        network.set_weight(0, 28, 43, 0.4923180836316592);
        network.set_weight(0, 28, 44, -0.8449562945661253);
        network.set_weight(0, 28, 45, 0.8206949366757199);
        network.set_weight(0, 28, 46, 0.024307185557799427);
        network.set_weight(0, 28, 47, 0.9187727702509718);
        network.set_weight(0, 28, 48, 0.2701647368509348);
        network.set_weight(0, 28, 49, 0.2032603885752644);
        network.set_weight(0, 28, 50, -0.6665446255811229);
        network.set_weight(0, 28, 51, 0.26416763126508425);
        network.set_weight(0, 28, 52, 0.507853665082602);
        network.set_weight(0, 28, 53, 0.22075570139902645);
        network.set_weight(0, 28, 54, 0.3785519856712938);
        network.set_weight(0, 28, 55, 0.7683201432453879);
        network.set_weight(0, 28, 56, 0.3934229402583407);
        network.set_weight(0, 28, 57, 0.285296069182416);
        network.set_weight(0, 28, 58, 0.0550676248833335);
        network.set_weight(0, 28, 59, -0.0892404653829495);
        network.set_weight(0, 28, 60, 0.4255333969852604);
        network.set_weight(0, 28, 61, 0.6561055218535949);
        network.set_weight(0, 28, 62, 0.456927368720474);
        network.set_weight(0, 28, 63, -0.7997051876703642);
        network.set_weight(0, 28, 64, -0.4873949810447129);
        network.set_weight(0, 28, 65, 0.22760901223353658);
        network.set_weight(0, 28, 66, 0.13466802279837253);
        network.set_weight(0, 28, 67, 0.8351553943813057);
        network.set_weight(0, 28, 68, 0.9666886811524638);
        network.set_weight(0, 28, 69, 0.7916426650002195);
        network.set_weight(0, 28, 70, 0.21164312197739088);
        network.set_weight(0, 28, 71, 0.4388515907385404);
        network.set_weight(0, 28, 72, 0.6973945625029894);
        network.set_weight(0, 28, 73, -0.7074086586740933);
        network.set_weight(0, 28, 74, -0.37441934104229535);
        network.set_weight(0, 28, 75, -0.9499534407945576);
        network.set_weight(0, 28, 76, 0.2479931904723125);
        network.set_weight(0, 28, 77, 0.8386511850660385);
        network.set_weight(0, 28, 78, -0.9904664589930954);
        network.set_weight(0, 28, 79, -0.7474503530280601);
        network.set_weight(0, 28, 80, -0.5997965037472772);
        network.set_weight(0, 28, 81, 0.5585125199070586);
        network.set_weight(0, 28, 82, -0.2601229368839866);
        network.set_weight(0, 28, 83, -0.6039120108908442);
        network.set_weight(0, 28, 84, -0.2552443495423571);
        network.set_weight(0, 28, 85, -0.48740110655875113);
        network.set_weight(0, 28, 86, -0.49907031972735116);
        network.set_weight(0, 28, 87, 0.13168113363822154);
        network.set_weight(0, 28, 88, 0.3407987171622804);
        network.set_weight(0, 28, 89, -0.5012755845103816);
        network.set_weight(0, 28, 90, 0.0998085245431839);
        network.set_weight(0, 28, 91, -0.9404304674506263);
        network.set_weight(0, 28, 92, 0.9448171606617655);
        network.set_weight(0, 28, 93, -0.7949959373546029);
        network.set_weight(0, 28, 94, 0.11782608176952047);
        network.set_weight(0, 28, 95, 0.9940770031634782);
        network.set_weight(0, 28, 96, -0.35631132670267673);
        network.set_weight(0, 28, 97, -0.42574913170660533);
        network.set_weight(0, 28, 98, 0.4766918673081275);
        network.set_weight(0, 28, 99, -0.0685541009033579);
        network.set_weight(0, 29, 0, -0.4668594275878295);
        network.set_weight(0, 29, 1, 0.14572593547101387);
        network.set_weight(0, 29, 2, 0.6541638956149298);
        network.set_weight(0, 29, 3, 0.3383222391647178);
        network.set_weight(0, 29, 4, -0.5198191344504566);
        network.set_weight(0, 29, 5, 0.33562194028844305);
        network.set_weight(0, 29, 6, 0.8597628537040023);
        network.set_weight(0, 29, 7, -0.605725942535345);
        network.set_weight(0, 29, 8, 0.30354755446194104);
        network.set_weight(0, 29, 9, -0.0008403867271129517);
        network.set_weight(0, 29, 10, 0.3266965839484115);
        network.set_weight(0, 29, 11, -0.7245552958669188);
        network.set_weight(0, 29, 12, -0.5343049811175178);
        network.set_weight(0, 29, 13, -0.30475896517529844);
        network.set_weight(0, 29, 14, 0.6792054386843804);
        network.set_weight(0, 29, 15, -0.23133890429320125);
        network.set_weight(0, 29, 16, -0.3251472563490969);
        network.set_weight(0, 29, 17, 0.4832367989304691);
        network.set_weight(0, 29, 18, -0.7225472842062084);
        network.set_weight(0, 29, 19, -0.3600225864135733);
        network.set_weight(0, 29, 20, 0.10163456434898377);
        network.set_weight(0, 29, 21, -0.3072627401151464);
        network.set_weight(0, 29, 22, 0.19585773356888603);
        network.set_weight(0, 29, 23, 0.20301905731404535);
        network.set_weight(0, 29, 24, -0.7174030702077676);
        network.set_weight(0, 29, 25, -0.7331509949001243);
        network.set_weight(0, 29, 26, 0.5685502245398242);
        network.set_weight(0, 29, 27, -0.16526989075565846);
        network.set_weight(0, 29, 28, -0.7017113741331029);
        network.set_weight(0, 29, 29, -0.8471854091577764);
        network.set_weight(0, 29, 30, -0.16217710768973448);
        network.set_weight(0, 29, 31, 0.684275401550994);
        network.set_weight(0, 29, 32, -0.5897709113093452);
        network.set_weight(0, 29, 33, 0.9900502517561645);
        network.set_weight(0, 29, 34, -0.9582600801782515);
        network.set_weight(0, 29, 35, 0.18708442405450376);
        network.set_weight(0, 29, 36, 0.3982497780527645);
        network.set_weight(0, 29, 37, 0.06454509347688187);
        network.set_weight(0, 29, 38, -0.48166831763560114);
        network.set_weight(0, 29, 39, -0.36710576511840753);
        network.set_weight(0, 29, 40, 0.10774060557775789);
        network.set_weight(0, 29, 41, 0.7906930580651403);
        network.set_weight(0, 29, 42, -0.1605315844931201);
        network.set_weight(0, 29, 43, -0.31033500020650195);
        network.set_weight(0, 29, 44, -0.19924829087995444);
        network.set_weight(0, 29, 45, 0.9986588901401736);
        network.set_weight(0, 29, 46, -0.4670306370098798);
        network.set_weight(0, 29, 47, -0.657241702099711);
        network.set_weight(0, 29, 48, 0.7857333499884005);
        network.set_weight(0, 29, 49, -0.7490638266409122);
        network.set_weight(0, 29, 50, 0.6788735084199795);
        network.set_weight(0, 29, 51, 0.25050980806455403);
        network.set_weight(0, 29, 52, 0.9159251505209718);
        network.set_weight(0, 29, 53, -0.3644494953791684);
        network.set_weight(0, 29, 54, 0.7113192288372476);
        network.set_weight(0, 29, 55, -0.8250166970290993);
        network.set_weight(0, 29, 56, 0.5646810193444189);
        network.set_weight(0, 29, 57, -0.3456560491368661);
        network.set_weight(0, 29, 58, -0.0788434695841369);
        network.set_weight(0, 29, 59, 0.5941168611711154);
        network.set_weight(0, 29, 60, 0.2698059466720304);
        network.set_weight(0, 29, 61, -0.08350914700029799);
        network.set_weight(0, 29, 62, -0.41479887815804206);
        network.set_weight(0, 29, 63, 0.5108477164937879);
        network.set_weight(0, 29, 64, -0.06834781978053472);
        network.set_weight(0, 29, 65, -0.5107040271935976);
        network.set_weight(0, 29, 66, -0.21579735467180416);
        network.set_weight(0, 29, 67, 0.5919158277669401);
        network.set_weight(0, 29, 68, -0.882752271971682);
        network.set_weight(0, 29, 69, -0.3555239643161998);
        network.set_weight(0, 29, 70, 0.4547815984187795);
        network.set_weight(0, 29, 71, 0.22533273298545686);
        network.set_weight(0, 29, 72, -0.12106149088341156);
        network.set_weight(0, 29, 73, -0.6885671630497605);
        network.set_weight(0, 29, 74, -0.9048105322912514);
        network.set_weight(0, 29, 75, -0.19785762136394447);
        network.set_weight(0, 29, 76, 0.37659622601675924);
        network.set_weight(0, 29, 77, -0.46427185063041065);
        network.set_weight(0, 29, 78, 0.8041173403486168);
        network.set_weight(0, 29, 79, 0.23901065755719597);
        network.set_weight(0, 29, 80, -0.08952065779255247);
        network.set_weight(0, 29, 81, 0.5094147610127349);
        network.set_weight(0, 29, 82, -0.40064763090788547);
        network.set_weight(0, 29, 83, 0.7879248292924477);
        network.set_weight(0, 29, 84, -0.2650238143084882);
        network.set_weight(0, 29, 85, -0.9894626071390216);
        network.set_weight(0, 29, 86, 0.9570962718775466);
        network.set_weight(0, 29, 87, -0.007835171187263734);
        network.set_weight(0, 29, 88, 0.8071853380596206);
        network.set_weight(0, 29, 89, -0.7819354545148685);
        network.set_weight(0, 29, 90, -0.6001889816098815);
        network.set_weight(0, 29, 91, -0.032562781567624155);
        network.set_weight(0, 29, 92, 0.7908321021711779);
        network.set_weight(0, 29, 93, -0.8159417493308476);
        network.set_weight(0, 29, 94, 0.07697748129123827);
        network.set_weight(0, 29, 95, 0.5162204265557069);
        network.set_weight(0, 29, 96, -0.21917899603626445);
        network.set_weight(0, 29, 97, -0.10935551263177312);
        network.set_weight(0, 29, 98, 0.8674891132782929);
        network.set_weight(0, 29, 99, 0.07406801214598513);
        network.set_weight(1, 0, 0, 0.3800413236436917);
        network.set_weight(1, 0, 1, 0.3459259704757782);
        network.set_weight(1, 0, 2, 0.7944993827706928);
        network.set_weight(1, 0, 3, -0.31708132539625944);
        network.set_weight(1, 0, 4, 0.094354333469024);
        network.set_weight(1, 0, 5, -0.5728053948713154);
        network.set_weight(1, 0, 6, -0.3343873869391607);
        network.set_weight(1, 0, 7, 0.6437006914645029);
        network.set_weight(1, 0, 8, 0.9274413304951334);
        network.set_weight(1, 0, 9, -0.3441455086737568);
        network.set_weight(1, 1, 0, 0.5234084511459731);
        network.set_weight(1, 1, 1, 0.07524200427061123);
        network.set_weight(1, 1, 2, 0.38518219188095393);
        network.set_weight(1, 1, 3, -0.26722823653669026);
        network.set_weight(1, 1, 4, -0.2932258262205496);
        network.set_weight(1, 1, 5, -0.5875232684338567);
        network.set_weight(1, 1, 6, 0.0029043291098103108);
        network.set_weight(1, 1, 7, -0.8884239109453314);
        network.set_weight(1, 1, 8, 0.7206436728035555);
        network.set_weight(1, 1, 9, -0.5119703970480793);
        network.set_weight(1, 2, 0, 0.26751348251448026);
        network.set_weight(1, 2, 1, 0.01179607335018007);
        network.set_weight(1, 2, 2, -0.3051624515786855);
        network.set_weight(1, 2, 3, 0.8876551496069458);
        network.set_weight(1, 2, 4, 0.6979115260444);
        network.set_weight(1, 2, 5, 0.4707134987484838);
        network.set_weight(1, 2, 6, -0.7633099530344005);
        network.set_weight(1, 2, 7, -0.07528885470489377);
        network.set_weight(1, 2, 8, 0.30215306295417155);
        network.set_weight(1, 2, 9, -0.8092335907428871);
        network.set_weight(1, 3, 0, 0.3916066126700539);
        network.set_weight(1, 3, 1, 0.6328646146874741);
        network.set_weight(1, 3, 2, 0.8983978821329368);
        network.set_weight(1, 3, 3, 0.004100438097989212);
        network.set_weight(1, 3, 4, -0.9425517854668497);
        network.set_weight(1, 3, 5, -0.583935958248494);
        network.set_weight(1, 3, 6, 0.6105229069319622);
        network.set_weight(1, 3, 7, -0.7032509107451124);
        network.set_weight(1, 3, 8, 0.2446007979891649);
        network.set_weight(1, 3, 9, 0.3064079700715099);
        network.set_weight(1, 4, 0, -0.11091894000775682);
        network.set_weight(1, 4, 1, 0.5703643058272296);
        network.set_weight(1, 4, 2, -0.754268336919065);
        network.set_weight(1, 4, 3, 0.24016738531274573);
        network.set_weight(1, 4, 4, -0.23903502426742373);
        network.set_weight(1, 4, 5, 0.7150683420724726);
        network.set_weight(1, 4, 6, -0.20743226070313425);
        network.set_weight(1, 4, 7, -0.622283549103013);
        network.set_weight(1, 4, 8, -0.31105397471281315);
        network.set_weight(1, 4, 9, 0.049942184750805696);
        network.set_weight(1, 5, 0, -0.8396859205939633);
        network.set_weight(1, 5, 1, 0.7275218485617656);
        network.set_weight(1, 5, 2, 0.3024326040790801);
        network.set_weight(1, 5, 3, -0.3745136397127895);
        network.set_weight(1, 5, 4, 0.21619074980953923);
        network.set_weight(1, 5, 5, 0.9674347243059762);
        network.set_weight(1, 5, 6, 0.20561205075171807);
        network.set_weight(1, 5, 7, -0.18747930095539234);
        network.set_weight(1, 5, 8, 0.36289050158043734);
        network.set_weight(1, 5, 9, 0.5125239458672954);
        network.set_weight(1, 6, 0, 0.37330812827396365);
        network.set_weight(1, 6, 1, -0.5778470712934412);
        network.set_weight(1, 6, 2, -0.9581439409998362);
        network.set_weight(1, 6, 3, -0.36622797878600255);
        network.set_weight(1, 6, 4, -0.13058818565276065);
        network.set_weight(1, 6, 5, 0.6626506509651975);
        network.set_weight(1, 6, 6, -0.8233092340196932);
        network.set_weight(1, 6, 7, 0.6872690637599801);
        network.set_weight(1, 6, 8, -0.881035192289551);
        network.set_weight(1, 6, 9, -0.3721660507766966);
        network.set_weight(1, 7, 0, -0.19192920658378898);
        network.set_weight(1, 7, 1, 0.8633998093524591);
        network.set_weight(1, 7, 2, 0.8981068012304045);
        network.set_weight(1, 7, 3, -0.9186301409170654);
        network.set_weight(1, 7, 4, -0.6081069340443888);
        network.set_weight(1, 7, 5, -0.10356521322344814);
        network.set_weight(1, 7, 6, -0.4551838841245164);
        network.set_weight(1, 7, 7, 0.9067258398029063);
        network.set_weight(1, 7, 8, 0.2243408453633131);
        network.set_weight(1, 7, 9, -0.34688837594916744);
        network.set_weight(1, 8, 0, 0.19942640275115076);
        network.set_weight(1, 8, 1, 0.3488812039638407);
        network.set_weight(1, 8, 2, 0.7132392063361868);
        network.set_weight(1, 8, 3, 0.7750565319542455);
        network.set_weight(1, 8, 4, -0.15753058859480706);
        network.set_weight(1, 8, 5, 0.5167365538241502);
        network.set_weight(1, 8, 6, 0.9469966032013022);
        network.set_weight(1, 8, 7, 0.06755957783443556);
        network.set_weight(1, 8, 8, 0.46323318843121775);
        network.set_weight(1, 8, 9, -0.022276503563210204);
        network.set_weight(1, 9, 0, -0.23470420307244932);
        network.set_weight(1, 9, 1, -0.593237451523037);
        network.set_weight(1, 9, 2, -0.8176132930039404);
        network.set_weight(1, 9, 3, -0.35100420527956633);
        network.set_weight(1, 9, 4, -0.29056894120705246);
        network.set_weight(1, 9, 5, 0.13996541142120766);
        network.set_weight(1, 9, 6, 0.34104060850487916);
        network.set_weight(1, 9, 7, 0.4215619289932533);
        network.set_weight(1, 9, 8, 0.5383065065948007);
        network.set_weight(1, 9, 9, 0.1445465381850084);
        network.set_weight(1, 10, 0, 0.02430603244680829);
        network.set_weight(1, 10, 1, 0.2234159620494196);
        network.set_weight(1, 10, 2, 0.40506008341350896);
        network.set_weight(1, 10, 3, 0.6911247730646144);
        network.set_weight(1, 10, 4, -0.49624366372010287);
        network.set_weight(1, 10, 5, 0.7180700352860376);
        network.set_weight(1, 10, 6, -0.6040566131005132);
        network.set_weight(1, 10, 7, -0.9651919199233294);
        network.set_weight(1, 10, 8, 0.5933555512246576);
        network.set_weight(1, 10, 9, -0.5385158547196764);
        network.set_weight(1, 11, 0, 0.6770673284716768);
        network.set_weight(1, 11, 1, -0.28651889616779735);
        network.set_weight(1, 11, 2, -0.2942961686938208);
        network.set_weight(1, 11, 3, 0.7394471132251939);
        network.set_weight(1, 11, 4, 0.5177334865035881);
        network.set_weight(1, 11, 5, -0.883340318028808);
        network.set_weight(1, 11, 6, 0.8885889970177911);
        network.set_weight(1, 11, 7, -0.5832545461620575);
        network.set_weight(1, 11, 8, 0.33316833725655304);
        network.set_weight(1, 11, 9, 0.8810749194423639);
        network.set_weight(1, 12, 0, 0.6847298263587887);
        network.set_weight(1, 12, 1, -0.02342222107625669);
        network.set_weight(1, 12, 2, 0.8942649936395131);
        network.set_weight(1, 12, 3, 0.37146667245839016);
        network.set_weight(1, 12, 4, -0.5001096342564997);
        network.set_weight(1, 12, 5, 0.928516392539559);
        network.set_weight(1, 12, 6, 0.13444736176439043);
        network.set_weight(1, 12, 7, -0.3553387491299047);
        network.set_weight(1, 12, 8, -0.1309268386258693);
        network.set_weight(1, 12, 9, -0.6120583715945556);
        network.set_weight(1, 13, 0, 0.14706199656109264);
        network.set_weight(1, 13, 1, 0.1333477328700452);
        network.set_weight(1, 13, 2, -0.6807408036663785);
        network.set_weight(1, 13, 3, -0.170356829437051);
        network.set_weight(1, 13, 4, -0.46741886456638393);
        network.set_weight(1, 13, 5, 0.7911271562501916);
        network.set_weight(1, 13, 6, -0.6103217761869664);
        network.set_weight(1, 13, 7, 0.2167143999447454);
        network.set_weight(1, 13, 8, 0.28028468615840096);
        network.set_weight(1, 13, 9, 0.2073824261910715);
        network.set_weight(1, 14, 0, -0.253792950128537);
        network.set_weight(1, 14, 1, -0.5107743783818419);
        network.set_weight(1, 14, 2, -0.9834821764789352);
        network.set_weight(1, 14, 3, -0.5906352339545513);
        network.set_weight(1, 14, 4, 0.6281492290516075);
        network.set_weight(1, 14, 5, -0.4439987275357862);
        network.set_weight(1, 14, 6, 0.0679535287743227);
        network.set_weight(1, 14, 7, -0.4049495984753846);
        network.set_weight(1, 14, 8, -0.8715157206855741);
        network.set_weight(1, 14, 9, -0.15708247154492327);
        network.set_weight(1, 15, 0, 0.9847052555654494);
        network.set_weight(1, 15, 1, -0.19656607693216155);
        network.set_weight(1, 15, 2, -0.3328148707186134);
        network.set_weight(1, 15, 3, 0.1459651095530785);
        network.set_weight(1, 15, 4, -0.2828760312753913);
        network.set_weight(1, 15, 5, -0.5279018711278425);
        network.set_weight(1, 15, 6, -0.23657235026706647);
        network.set_weight(1, 15, 7, 0.8004597876304322);
        network.set_weight(1, 15, 8, -0.7145982163806548);
        network.set_weight(1, 15, 9, -0.7378475663305331);
        network.set_weight(1, 16, 0, 0.5082568048004401);
        network.set_weight(1, 16, 1, -0.6247141936794838);
        network.set_weight(1, 16, 2, -0.738248830646794);
        network.set_weight(1, 16, 3, -0.5132016211553012);
        network.set_weight(1, 16, 4, 0.7653114643513528);
        network.set_weight(1, 16, 5, 0.8805737457337721);
        network.set_weight(1, 16, 6, 0.8654345434011315);
        network.set_weight(1, 16, 7, -0.3722727505242287);
        network.set_weight(1, 16, 8, 0.8115315422799638);
        network.set_weight(1, 16, 9, -0.8733290414943091);
        network.set_weight(1, 17, 0, -0.03629025356784421);
        network.set_weight(1, 17, 1, 0.10430277288549727);
        network.set_weight(1, 17, 2, -0.10133307413775339);
        network.set_weight(1, 17, 3, 0.956974138916219);
        network.set_weight(1, 17, 4, 0.5083432784407738);
        network.set_weight(1, 17, 5, -0.04500774664260154);
        network.set_weight(1, 17, 6, 0.465337461976602);
        network.set_weight(1, 17, 7, 0.5250272578973301);
        network.set_weight(1, 17, 8, -0.775575766788551);
        network.set_weight(1, 17, 9, -0.35524434321680864);
        network.set_weight(1, 18, 0, -0.34494055188788253);
        network.set_weight(1, 18, 1, 0.8865214855468584);
        network.set_weight(1, 18, 2, 0.7070792552395799);
        network.set_weight(1, 18, 3, -0.3988610002753472);
        network.set_weight(1, 18, 4, 0.9762970180503125);
        network.set_weight(1, 18, 5, -0.8549371474167666);
        network.set_weight(1, 18, 6, -0.331983179791731);
        network.set_weight(1, 18, 7, -0.5975259609441692);
        network.set_weight(1, 18, 8, 0.04139161284959436);
        network.set_weight(1, 18, 9, 0.8097179687881677);
        network.set_weight(1, 19, 0, 0.5757248969601121);
        network.set_weight(1, 19, 1, -0.9254626963232144);
        network.set_weight(1, 19, 2, -0.5032120695322808);
        network.set_weight(1, 19, 3, 0.5552352923615405);
        network.set_weight(1, 19, 4, -0.43963211014297454);
        network.set_weight(1, 19, 5, 0.6360268750648979);
        network.set_weight(1, 19, 6, 0.24522992180097747);
        network.set_weight(1, 19, 7, 0.394386600463569);
        network.set_weight(1, 19, 8, 0.42844655190025094);
        network.set_weight(1, 19, 9, 0.15368711495205023);
        network.set_weight(1, 20, 0, -0.6311228983672508);
        network.set_weight(1, 20, 1, 0.6233589547312555);
        network.set_weight(1, 20, 2, 0.12749436075020948);
        network.set_weight(1, 20, 3, 0.4433116807108135);
        network.set_weight(1, 20, 4, -0.9475583171775339);
        network.set_weight(1, 20, 5, -0.6368095441727524);
        network.set_weight(1, 20, 6, 0.13064404484568914);
        network.set_weight(1, 20, 7, 0.6026593249542107);
        network.set_weight(1, 20, 8, -0.2772833657534819);
        network.set_weight(1, 20, 9, 0.502548359126211);
        network.set_weight(1, 21, 0, -0.9969778006480052);
        network.set_weight(1, 21, 1, -0.9107228289350993);
        network.set_weight(1, 21, 2, 0.3770292846091645);
        network.set_weight(1, 21, 3, 0.9746454652635377);
        network.set_weight(1, 21, 4, -0.3685004797027396);
        network.set_weight(1, 21, 5, -0.32767950455028116);
        network.set_weight(1, 21, 6, -0.31972739367093084);
        network.set_weight(1, 21, 7, 0.15972215631597275);
        network.set_weight(1, 21, 8, -0.2110454899521852);
        network.set_weight(1, 21, 9, -0.2717100928550742);
        network.set_weight(1, 22, 0, 0.5344451108226123);
        network.set_weight(1, 22, 1, -0.996205353048728);
        network.set_weight(1, 22, 2, 0.7413126636539593);
        network.set_weight(1, 22, 3, 0.48213709764309876);
        network.set_weight(1, 22, 4, 0.913476548747556);
        network.set_weight(1, 22, 5, 0.6822907264779219);
        network.set_weight(1, 22, 6, 0.5874372925653777);
        network.set_weight(1, 22, 7, -0.41425145898101445);
        network.set_weight(1, 22, 8, 0.5615723742035559);
        network.set_weight(1, 22, 9, 0.19465852900854408);
        network.set_weight(1, 23, 0, -0.3011278786498306);
        network.set_weight(1, 23, 1, 0.6198495445865015);
        network.set_weight(1, 23, 2, -0.020956352924790478);
        network.set_weight(1, 23, 3, 0.9686743253626611);
        network.set_weight(1, 23, 4, 0.4433721685062446);
        network.set_weight(1, 23, 5, 0.7596303325767055);
        network.set_weight(1, 23, 6, 0.8027868368152571);
        network.set_weight(1, 23, 7, 0.16996530356039163);
        network.set_weight(1, 23, 8, 0.7852702724035168);
        network.set_weight(1, 23, 9, 0.19491337728846814);
        network.set_weight(1, 24, 0, 0.02298994100563645);
        network.set_weight(1, 24, 1, 0.9901192572020909);
        network.set_weight(1, 24, 2, 0.3921454399165445);
        network.set_weight(1, 24, 3, 0.38121091708898125);
        network.set_weight(1, 24, 4, 0.9766348845037827);
        network.set_weight(1, 24, 5, 0.25810722482595083);
        network.set_weight(1, 24, 6, -0.994312098247847);
        network.set_weight(1, 24, 7, 0.35252273327910855);
        network.set_weight(1, 24, 8, 0.25761052474119395);
        network.set_weight(1, 24, 9, 0.45551315766761236);
        network.set_weight(1, 25, 0, 0.9494276605213516);
        network.set_weight(1, 25, 1, 0.47413720189805053);
        network.set_weight(1, 25, 2, 0.9888737176253068);
        network.set_weight(1, 25, 3, 0.5759226977534049);
        network.set_weight(1, 25, 4, 0.9599598901761095);
        network.set_weight(1, 25, 5, -0.12950795774789992);
        network.set_weight(1, 25, 6, -0.5075605872052609);
        network.set_weight(1, 25, 7, 0.10254328927249845);
        network.set_weight(1, 25, 8, 0.7767269276173268);
        network.set_weight(1, 25, 9, 0.7192799546771464);
        network.set_weight(1, 26, 0, 0.3398919672641396);
        network.set_weight(1, 26, 1, -0.19282514539295192);
        network.set_weight(1, 26, 2, -0.4496529351169656);
        network.set_weight(1, 26, 3, -0.9497337747824388);
        network.set_weight(1, 26, 4, -0.16502952343584876);
        network.set_weight(1, 26, 5, 0.006458638927425042);
        network.set_weight(1, 26, 6, 0.9641730615568673);
        network.set_weight(1, 26, 7, 0.13501763259470145);
        network.set_weight(1, 26, 8, 0.15714121620893073);
        network.set_weight(1, 26, 9, -0.06859830987699223);
        network.set_weight(1, 27, 0, -0.9709161036904077);
        network.set_weight(1, 27, 1, -0.42665500039754867);
        network.set_weight(1, 27, 2, 0.31487391582878255);
        network.set_weight(1, 27, 3, 0.41635627020187527);
        network.set_weight(1, 27, 4, 0.9009385779192094);
        network.set_weight(1, 27, 5, -0.036826751502159194);
        network.set_weight(1, 27, 6, 0.3765816617216269);
        network.set_weight(1, 27, 7, 0.5932929943704564);
        network.set_weight(1, 27, 8, 0.5167434558074993);
        network.set_weight(1, 27, 9, -0.7485034550171732);
        network.set_weight(1, 28, 0, 0.7809544417394683);
        network.set_weight(1, 28, 1, 0.5061171482021891);
        network.set_weight(1, 28, 2, 0.3388756762740053);
        network.set_weight(1, 28, 3, -0.7119217301550096);
        network.set_weight(1, 28, 4, 0.886519572883691);
        network.set_weight(1, 28, 5, 0.3598634003733703);
        network.set_weight(1, 28, 6, -0.6191320048204387);
        network.set_weight(1, 28, 7, 0.17077685171426893);
        network.set_weight(1, 28, 8, -0.7035789026535135);
        network.set_weight(1, 28, 9, -0.8900188867934076);
        network.set_weight(1, 29, 0, 0.4233445602161141);
        network.set_weight(1, 29, 1, 0.47458222425487073);
        network.set_weight(1, 29, 2, 0.03072697118318679);
        network.set_weight(1, 29, 3, -0.7005319756770731);
        network.set_weight(1, 29, 4, -0.3461683115430394);
        network.set_weight(1, 29, 5, -0.7905019510347924);
        network.set_weight(1, 29, 6, -0.5465118287236868);
        network.set_weight(1, 29, 7, -0.8682396742643055);
        network.set_weight(1, 29, 8, 0.3263701214862451);
        network.set_weight(1, 29, 9, 0.5567150600642767);
        network.set_weight(1, 30, 0, 0.03465946439857026);
        network.set_weight(1, 30, 1, 0.3211947642131945);
        network.set_weight(1, 30, 2, -0.6993605681703219);
        network.set_weight(1, 30, 3, 0.816071447527283);
        network.set_weight(1, 30, 4, 0.1883407294850561);
        network.set_weight(1, 30, 5, -0.7509312712306597);
        network.set_weight(1, 30, 6, 0.06820230015642115);
        network.set_weight(1, 30, 7, -0.08261232889449555);
        network.set_weight(1, 30, 8, 0.7361132707848537);
        network.set_weight(1, 30, 9, 0.49940278757372436);
        network.set_weight(1, 31, 0, -0.8056469958751853);
        network.set_weight(1, 31, 1, 0.29609087253620037);
        network.set_weight(1, 31, 2, -0.8932917787861894);
        network.set_weight(1, 31, 3, -0.00838060250306727);
        network.set_weight(1, 31, 4, 0.671682360596561);
        network.set_weight(1, 31, 5, -0.6233675906365277);
        network.set_weight(1, 31, 6, 0.2945455532630856);
        network.set_weight(1, 31, 7, -0.18744305935952643);
        network.set_weight(1, 31, 8, -0.7698753213934795);
        network.set_weight(1, 31, 9, 0.772556933758278);
        network.set_weight(1, 32, 0, 0.43943478425997595);
        network.set_weight(1, 32, 1, -0.46586001314602754);
        network.set_weight(1, 32, 2, -0.5983064314919451);
        network.set_weight(1, 32, 3, -0.2850855582701657);
        network.set_weight(1, 32, 4, 0.4291791155285092);
        network.set_weight(1, 32, 5, 0.8310086681114521);
        network.set_weight(1, 32, 6, 0.030531330492070463);
        network.set_weight(1, 32, 7, -0.9933577862993526);
        network.set_weight(1, 32, 8, -0.9727705675865959);
        network.set_weight(1, 32, 9, -0.5102624148798474);
        network.set_weight(1, 33, 0, 0.5665273873207577);
        network.set_weight(1, 33, 1, -0.6638269947572888);
        network.set_weight(1, 33, 2, 0.15249680443389457);
        network.set_weight(1, 33, 3, -0.9419447830941345);
        network.set_weight(1, 33, 4, -0.35496907929556576);
        network.set_weight(1, 33, 5, 0.32055541739255045);
        network.set_weight(1, 33, 6, 0.361538986646472);
        network.set_weight(1, 33, 7, -0.964250882063989);
        network.set_weight(1, 33, 8, -0.6483699758402544);
        network.set_weight(1, 33, 9, -0.5385599726402432);
        network.set_weight(1, 34, 0, -0.487647149412759);
        network.set_weight(1, 34, 1, -0.28265173344137495);
        network.set_weight(1, 34, 2, 0.5717607565607299);
        network.set_weight(1, 34, 3, -0.7928434448184154);
        network.set_weight(1, 34, 4, -0.5390693178374171);
        network.set_weight(1, 34, 5, -0.030761686794926968);
        network.set_weight(1, 34, 6, 0.5600359606028533);
        network.set_weight(1, 34, 7, 0.5414716781968694);
        network.set_weight(1, 34, 8, -0.7824031211917939);
        network.set_weight(1, 34, 9, 0.06984121661315035);
        network.set_weight(1, 35, 0, 0.2984293273473255);
        network.set_weight(1, 35, 1, -0.12832785887169806);
        network.set_weight(1, 35, 2, 0.7050838374975665);
        network.set_weight(1, 35, 3, -0.7798638196502097);
        network.set_weight(1, 35, 4, 0.1210766604159279);
        network.set_weight(1, 35, 5, 0.43256460403279684);
        network.set_weight(1, 35, 6, 0.9621193129673533);
        network.set_weight(1, 35, 7, -0.9803421512989845);
        network.set_weight(1, 35, 8, 0.4472745702022076);
        network.set_weight(1, 35, 9, -0.318261970622872);
        network.set_weight(1, 36, 0, 0.49041801423276055);
        network.set_weight(1, 36, 1, 0.053732451112903146);
        network.set_weight(1, 36, 2, 0.560097033267122);
        network.set_weight(1, 36, 3, -0.6705270893816069);
        network.set_weight(1, 36, 4, 0.8293413004555517);
        network.set_weight(1, 36, 5, -0.224522184149464);
        network.set_weight(1, 36, 6, 0.6069857665519289);
        network.set_weight(1, 36, 7, -0.4145492050213899);
        network.set_weight(1, 36, 8, -0.729902250695952);
        network.set_weight(1, 36, 9, -0.3139406153313127);
        network.set_weight(1, 37, 0, 0.3494537175137906);
        network.set_weight(1, 37, 1, 0.8397522104759565);
        network.set_weight(1, 37, 2, -0.006074154460733006);
        network.set_weight(1, 37, 3, -0.33257234228906474);
        network.set_weight(1, 37, 4, 0.8637129475990442);
        network.set_weight(1, 37, 5, 0.48090065443369934);
        network.set_weight(1, 37, 6, -0.09561165369798119);
        network.set_weight(1, 37, 7, 0.3054898089638849);
        network.set_weight(1, 37, 8, -0.49057320415323513);
        network.set_weight(1, 37, 9, -0.00420926764244034);
        network.set_weight(1, 38, 0, -0.1995763646281954);
        network.set_weight(1, 38, 1, -0.5086023805386692);
        network.set_weight(1, 38, 2, -0.8230396219981775);
        network.set_weight(1, 38, 3, -0.5435665438235151);
        network.set_weight(1, 38, 4, 0.5979738697107866);
        network.set_weight(1, 38, 5, 0.5197136447717134);
        network.set_weight(1, 38, 6, -0.1236374454326834);
        network.set_weight(1, 38, 7, 0.7619196044584255);
        network.set_weight(1, 38, 8, -0.6839101292363547);
        network.set_weight(1, 38, 9, 0.4685934661323261);
        network.set_weight(1, 39, 0, 0.5256499368148977);
        network.set_weight(1, 39, 1, -0.8657449018993582);
        network.set_weight(1, 39, 2, 0.7315192431022344);
        network.set_weight(1, 39, 3, 0.5483587818532947);
        network.set_weight(1, 39, 4, -0.07107036254085375);
        network.set_weight(1, 39, 5, -0.011084838079818082);
        network.set_weight(1, 39, 6, 0.16837199829354055);
        network.set_weight(1, 39, 7, -0.04270620375552281);
        network.set_weight(1, 39, 8, -0.890737927198143);
        network.set_weight(1, 39, 9, -0.1376764799512049);
        network.set_weight(1, 40, 0, 0.7298397699055246);
        network.set_weight(1, 40, 1, 0.06887388162691632);
        network.set_weight(1, 40, 2, -0.5106670623054934);
        network.set_weight(1, 40, 3, 0.8159365711807536);
        network.set_weight(1, 40, 4, -0.14703729826641054);
        network.set_weight(1, 40, 5, -0.6319698765107808);
        network.set_weight(1, 40, 6, 0.1909536908231324);
        network.set_weight(1, 40, 7, -0.6516724210671809);
        network.set_weight(1, 40, 8, 0.24783184794046687);
        network.set_weight(1, 40, 9, 0.35470101800255094);
        network.set_weight(1, 41, 0, -0.6149871685151911);
        network.set_weight(1, 41, 1, -0.3709009756967059);
        network.set_weight(1, 41, 2, 0.17596552663977327);
        network.set_weight(1, 41, 3, -0.5600062248907056);
        network.set_weight(1, 41, 4, 0.6432120417096894);
        network.set_weight(1, 41, 5, 0.46272109591948585);
        network.set_weight(1, 41, 6, -0.6492555020632076);
        network.set_weight(1, 41, 7, 0.17819339805377132);
        network.set_weight(1, 41, 8, 0.14536661633722514);
        network.set_weight(1, 41, 9, -0.25314835744529596);
        network.set_weight(1, 42, 0, 0.31406155416850656);
        network.set_weight(1, 42, 1, -0.14083347166722948);
        network.set_weight(1, 42, 2, -0.11144240059517618);
        network.set_weight(1, 42, 3, -0.21164694305025167);
        network.set_weight(1, 42, 4, 0.14795653163770695);
        network.set_weight(1, 42, 5, -0.997800987958608);
        network.set_weight(1, 42, 6, 0.20187254430569435);
        network.set_weight(1, 42, 7, -0.7606465461951375);
        network.set_weight(1, 42, 8, -0.5455487437302864);
        network.set_weight(1, 42, 9, 0.6264224153087952);
        network.set_weight(1, 43, 0, -0.5457581795823225);
        network.set_weight(1, 43, 1, 0.24088896133284865);
        network.set_weight(1, 43, 2, -0.49359934862486354);
        network.set_weight(1, 43, 3, 0.9910951976632631);
        network.set_weight(1, 43, 4, 0.9638006596928743);
        network.set_weight(1, 43, 5, -0.3360931267532383);
        network.set_weight(1, 43, 6, 0.8231931403647408);
        network.set_weight(1, 43, 7, 0.8213460481687689);
        network.set_weight(1, 43, 8, -0.5917564322586726);
        network.set_weight(1, 43, 9, -0.24877126301451602);
        network.set_weight(1, 44, 0, -0.6232172649409831);
        network.set_weight(1, 44, 1, -0.5427846171209507);
        network.set_weight(1, 44, 2, 0.05283739500672113);
        network.set_weight(1, 44, 3, 0.004404840387996156);
        network.set_weight(1, 44, 4, -0.09651190318595693);
        network.set_weight(1, 44, 5, -0.6023149281460356);
        network.set_weight(1, 44, 6, 0.06689401676740547);
        network.set_weight(1, 44, 7, 0.8930456445187789);
        network.set_weight(1, 44, 8, -0.2802868467129709);
        network.set_weight(1, 44, 9, 0.3750171870251009);
        network.set_weight(1, 45, 0, -0.5388302718092182);
        network.set_weight(1, 45, 1, 0.5048445348101351);
        network.set_weight(1, 45, 2, 0.1521347174117984);
        network.set_weight(1, 45, 3, 0.8352234073703972);
        network.set_weight(1, 45, 4, -0.8440459091506092);
        network.set_weight(1, 45, 5, 0.3131256141863843);
        network.set_weight(1, 45, 6, -0.1571207020724421);
        network.set_weight(1, 45, 7, -0.26102996161012393);
        network.set_weight(1, 45, 8, -0.3337828902969857);
        network.set_weight(1, 45, 9, 0.8048706851005585);
        network.set_weight(1, 46, 0, -0.49480341229028846);
        network.set_weight(1, 46, 1, 0.26310994104009855);
        network.set_weight(1, 46, 2, -0.9475488738050066);
        network.set_weight(1, 46, 3, 0.926766111828706);
        network.set_weight(1, 46, 4, 0.6040178253782307);
        network.set_weight(1, 46, 5, 0.3790352190189705);
        network.set_weight(1, 46, 6, 0.03765015283369255);
        network.set_weight(1, 46, 7, -0.2799638617393647);
        network.set_weight(1, 46, 8, -0.1286243103786464);
        network.set_weight(1, 46, 9, 0.3184665554891297);
        network.set_weight(1, 47, 0, 0.017472720245657047);
        network.set_weight(1, 47, 1, 0.787122301420895);
        network.set_weight(1, 47, 2, -0.3503866595162495);
        network.set_weight(1, 47, 3, 0.7263929941066609);
        network.set_weight(1, 47, 4, -0.3982153909739048);
        network.set_weight(1, 47, 5, -0.7099837782670544);
        network.set_weight(1, 47, 6, -0.745518362766509);
        network.set_weight(1, 47, 7, -0.4685914079838496);
        network.set_weight(1, 47, 8, 0.834169420651103);
        network.set_weight(1, 47, 9, 0.6008535444044552);
        network.set_weight(1, 48, 0, 0.470718317233358);
        network.set_weight(1, 48, 1, -0.3870223341404033);
        network.set_weight(1, 48, 2, -0.5668974583233859);
        network.set_weight(1, 48, 3, -0.27659863083540626);
        network.set_weight(1, 48, 4, 0.33617187004989035);
        network.set_weight(1, 48, 5, -0.6753889054742845);
        network.set_weight(1, 48, 6, 0.05674270554678307);
        network.set_weight(1, 48, 7, -0.2626303196122137);
        network.set_weight(1, 48, 8, 0.5194977567206758);
        network.set_weight(1, 48, 9, 0.2880256270927348);
        network.set_weight(1, 49, 0, -0.7014966603747004);
        network.set_weight(1, 49, 1, -0.38207891362627544);
        network.set_weight(1, 49, 2, 0.6158485157787439);
        network.set_weight(1, 49, 3, 0.77427165912068);
        network.set_weight(1, 49, 4, 0.022164110216425392);
        network.set_weight(1, 49, 5, 0.6542555334884315);
        network.set_weight(1, 49, 6, -0.5787865097364453);
        network.set_weight(1, 49, 7, -0.18789417910000128);
        network.set_weight(1, 49, 8, 0.28691462138109824);
        network.set_weight(1, 49, 9, -0.9445066205195909);
        network.set_weight(1, 50, 0, 0.05912838298365197);
        network.set_weight(1, 50, 1, 0.705494893054045);
        network.set_weight(1, 50, 2, -0.5798892278319352);
        network.set_weight(1, 50, 3, -0.9764393895568018);
        network.set_weight(1, 50, 4, 0.29533754307710836);
        network.set_weight(1, 50, 5, 0.3212022055660979);
        network.set_weight(1, 50, 6, -0.5146764391504612);
        network.set_weight(1, 50, 7, -0.3471629230670994);
        network.set_weight(1, 50, 8, -0.31198300187079475);
        network.set_weight(1, 50, 9, -0.8333386265399063);
        network.set_weight(1, 51, 0, 0.4882864280006154);
        network.set_weight(1, 51, 1, -0.5712806485032145);
        network.set_weight(1, 51, 2, 0.543765137409618);
        network.set_weight(1, 51, 3, 0.3027656939479231);
        network.set_weight(1, 51, 4, -0.79256904147162);
        network.set_weight(1, 51, 5, 0.495925106469721);
        network.set_weight(1, 51, 6, -0.712433056212207);
        network.set_weight(1, 51, 7, 0.31653661611995987);
        network.set_weight(1, 51, 8, -0.8447935310794161);
        network.set_weight(1, 51, 9, 0.16134001457148428);
        network.set_weight(1, 52, 0, -0.11154475486334903);
        network.set_weight(1, 52, 1, 0.04829848137198178);
        network.set_weight(1, 52, 2, 0.49723244607644257);
        network.set_weight(1, 52, 3, 0.47658229294914234);
        network.set_weight(1, 52, 4, -0.9090094090169407);
        network.set_weight(1, 52, 5, -0.6734182396208412);
        network.set_weight(1, 52, 6, 0.9640255493020968);
        network.set_weight(1, 52, 7, -0.12135694122498197);
        network.set_weight(1, 52, 8, 0.6433336506482079);
        network.set_weight(1, 52, 9, 0.1014119753691265);
        network.set_weight(1, 53, 0, 0.546505454987039);
        network.set_weight(1, 53, 1, -0.8584108602967051);
        network.set_weight(1, 53, 2, 0.003159327259789846);
        network.set_weight(1, 53, 3, 0.5047319670803245);
        network.set_weight(1, 53, 4, -0.1694698889458448);
        network.set_weight(1, 53, 5, 0.4305438467887055);
        network.set_weight(1, 53, 6, 0.6620575365376626);
        network.set_weight(1, 53, 7, 0.6286748914446825);
        network.set_weight(1, 53, 8, -0.5891818752680009);
        network.set_weight(1, 53, 9, 0.8145835070757612);
        network.set_weight(1, 54, 0, 0.1644881807536922);
        network.set_weight(1, 54, 1, -0.6332398382991855);
        network.set_weight(1, 54, 2, 0.5852855109877417);
        network.set_weight(1, 54, 3, -0.4912840570441137);
        network.set_weight(1, 54, 4, -0.33433839335813165);
        network.set_weight(1, 54, 5, -0.16741702026097083);
        network.set_weight(1, 54, 6, 0.01083404086140205);
        network.set_weight(1, 54, 7, -0.6551720958431193);
        network.set_weight(1, 54, 8, 0.7000210959112818);
        network.set_weight(1, 54, 9, 0.6396728984230133);
        network.set_weight(1, 55, 0, -0.3901277648228376);
        network.set_weight(1, 55, 1, 0.9405476468522371);
        network.set_weight(1, 55, 2, -0.8821101058516025);
        network.set_weight(1, 55, 3, -0.755592965571692);
        network.set_weight(1, 55, 4, 0.5320540986806019);
        network.set_weight(1, 55, 5, -0.5149052208076408);
        network.set_weight(1, 55, 6, -0.5827984796929517);
        network.set_weight(1, 55, 7, -0.9552095290709446);
        network.set_weight(1, 55, 8, -0.34197324857063016);
        network.set_weight(1, 55, 9, -0.8499285006973945);
        network.set_weight(1, 56, 0, 0.2754810472881588);
        network.set_weight(1, 56, 1, -0.987511403399538);
        network.set_weight(1, 56, 2, -0.1267958931751021);
        network.set_weight(1, 56, 3, 0.7710943351626429);
        network.set_weight(1, 56, 4, 0.12928150198966892);
        network.set_weight(1, 56, 5, -0.34074870684669234);
        network.set_weight(1, 56, 6, -0.783246635543025);
        network.set_weight(1, 56, 7, 0.908629704184631);
        network.set_weight(1, 56, 8, -0.9632988859640759);
        network.set_weight(1, 56, 9, -0.0005250016866316098);
        network.set_weight(1, 57, 0, -0.26286596046818334);
        network.set_weight(1, 57, 1, 0.5376452563411009);
        network.set_weight(1, 57, 2, 0.18063450851403418);
        network.set_weight(1, 57, 3, 0.8769564602692439);
        network.set_weight(1, 57, 4, 0.9038166994207597);
        network.set_weight(1, 57, 5, 0.45448385020168547);
        network.set_weight(1, 57, 6, -0.047009669516775876);
        network.set_weight(1, 57, 7, 0.06778050130491642);
        network.set_weight(1, 57, 8, 0.8377302590698239);
        network.set_weight(1, 57, 9, 0.47203049176383516);
        network.set_weight(1, 58, 0, 0.4975115266857202);
        network.set_weight(1, 58, 1, 0.8795661979515814);
        network.set_weight(1, 58, 2, -0.2544633157424878);
        network.set_weight(1, 58, 3, 0.6606282720806413);
        network.set_weight(1, 58, 4, 0.5075370290771806);
        network.set_weight(1, 58, 5, -0.23261021274114957);
        network.set_weight(1, 58, 6, 0.510103421635427);
        network.set_weight(1, 58, 7, -0.7861428813716413);
        network.set_weight(1, 58, 8, -0.9642252780995026);
        network.set_weight(1, 58, 9, 0.7478077278211823);
        network.set_weight(1, 59, 0, 0.9543197652081066);
        network.set_weight(1, 59, 1, -0.13445821204073405);
        network.set_weight(1, 59, 2, -0.2204811295200304);
        network.set_weight(1, 59, 3, -0.5465051737532802);
        network.set_weight(1, 59, 4, 0.8736372728776973);
        network.set_weight(1, 59, 5, -0.4791615732323784);
        network.set_weight(1, 59, 6, 0.2921275844132549);
        network.set_weight(1, 59, 7, 0.6311918681257267);
        network.set_weight(1, 59, 8, -0.09410501158263052);
        network.set_weight(1, 59, 9, 0.9156966606373158);
        network.set_weight(1, 60, 0, -0.26873079609425865);
        network.set_weight(1, 60, 1, 0.5530917994449034);
        network.set_weight(1, 60, 2, -0.571518774082983);
        network.set_weight(1, 60, 3, -0.037833539565957475);
        network.set_weight(1, 60, 4, 0.3974214179206079);
        network.set_weight(1, 60, 5, -0.49429740153144497);
        network.set_weight(1, 60, 6, 0.6665042810895061);
        network.set_weight(1, 60, 7, 0.8803724310099432);
        network.set_weight(1, 60, 8, -0.4217904809920443);
        network.set_weight(1, 60, 9, -0.011651720049230985);
        network.set_weight(1, 61, 0, -0.9663162521208697);
        network.set_weight(1, 61, 1, -0.19135639063911203);
        network.set_weight(1, 61, 2, 0.1949403683119859);
        network.set_weight(1, 61, 3, -0.6762709866862644);
        network.set_weight(1, 61, 4, 0.9554897829645095);
        network.set_weight(1, 61, 5, -0.6490243434747971);
        network.set_weight(1, 61, 6, 0.01187232543694261);
        network.set_weight(1, 61, 7, -0.9811776584684151);
        network.set_weight(1, 61, 8, -0.4036815166928964);
        network.set_weight(1, 61, 9, 0.6072500872076767);
        network.set_weight(1, 62, 0, -0.18388101768399);
        network.set_weight(1, 62, 1, 0.7138790917997253);
        network.set_weight(1, 62, 2, 0.6388916287774977);
        network.set_weight(1, 62, 3, -0.13169547949580318);
        network.set_weight(1, 62, 4, -0.6882399579403098);
        network.set_weight(1, 62, 5, 0.6192847145624201);
        network.set_weight(1, 62, 6, 0.8417970811678817);
        network.set_weight(1, 62, 7, -0.5123084411927386);
        network.set_weight(1, 62, 8, -0.8498258674992749);
        network.set_weight(1, 62, 9, 0.68880404765963);
        network.set_weight(1, 63, 0, 0.216511920709606);
        network.set_weight(1, 63, 1, -0.48041577124846935);
        network.set_weight(1, 63, 2, -0.6553010704172075);
        network.set_weight(1, 63, 3, -0.006077005258038781);
        network.set_weight(1, 63, 4, 0.8542528413870076);
        network.set_weight(1, 63, 5, -0.6656806497098615);
        network.set_weight(1, 63, 6, 0.4445152112976025);
        network.set_weight(1, 63, 7, -0.49386135442204937);
        network.set_weight(1, 63, 8, 0.18336350198442197);
        network.set_weight(1, 63, 9, -0.10914141288994417);
        network.set_weight(1, 64, 0, 0.13283079858550617);
        network.set_weight(1, 64, 1, -0.7296385523257187);
        network.set_weight(1, 64, 2, 0.7259624008439525);
        network.set_weight(1, 64, 3, 0.9693367199913474);
        network.set_weight(1, 64, 4, -0.00630643796011543);
        network.set_weight(1, 64, 5, -0.1935684142425116);
        network.set_weight(1, 64, 6, 0.5802616216281609);
        network.set_weight(1, 64, 7, -0.6634718465180063);
        network.set_weight(1, 64, 8, -0.8594059366233608);
        network.set_weight(1, 64, 9, 0.4324834188239963);
        network.set_weight(1, 65, 0, 0.0929115600870567);
        network.set_weight(1, 65, 1, 0.26384191467663);
        network.set_weight(1, 65, 2, -0.9422818436669047);
        network.set_weight(1, 65, 3, 0.726879719070773);
        network.set_weight(1, 65, 4, 0.33500469349734296);
        network.set_weight(1, 65, 5, -0.7758370618301871);
        network.set_weight(1, 65, 6, 0.32197650651592724);
        network.set_weight(1, 65, 7, 0.9600900253027056);
        network.set_weight(1, 65, 8, -0.4853985000681085);
        network.set_weight(1, 65, 9, 0.8876638325495962);
        network.set_weight(1, 66, 0, 0.9196200058252642);
        network.set_weight(1, 66, 1, 0.6831007747947357);
        network.set_weight(1, 66, 2, -0.022608418276942155);
        network.set_weight(1, 66, 3, -0.10767925699795011);
        network.set_weight(1, 66, 4, -0.27621866106418147);
        network.set_weight(1, 66, 5, 0.5718198326869253);
        network.set_weight(1, 66, 6, -0.6982222521914949);
        network.set_weight(1, 66, 7, 0.06601051026825022);
        network.set_weight(1, 66, 8, 0.09319888573777213);
        network.set_weight(1, 66, 9, 0.862369079814816);
        network.set_weight(1, 67, 0, 0.8171267423692936);
        network.set_weight(1, 67, 1, -0.03464648369466139);
        network.set_weight(1, 67, 2, 0.1962308285348071);
        network.set_weight(1, 67, 3, 0.4137388308834298);
        network.set_weight(1, 67, 4, 0.0865173870774294);
        network.set_weight(1, 67, 5, -0.4332864685246858);
        network.set_weight(1, 67, 6, -0.6818980889588129);
        network.set_weight(1, 67, 7, 0.12559372815681802);
        network.set_weight(1, 67, 8, -0.12630681586051118);
        network.set_weight(1, 67, 9, -0.45925789551121476);
        network.set_weight(1, 68, 0, -0.3108748903190013);
        network.set_weight(1, 68, 1, -0.9150975468625022);
        network.set_weight(1, 68, 2, 0.11010800007862387);
        network.set_weight(1, 68, 3, -0.8474549731882886);
        network.set_weight(1, 68, 4, -0.787105941896677);
        network.set_weight(1, 68, 5, 0.5441992696364313);
        network.set_weight(1, 68, 6, -0.782624775173415);
        network.set_weight(1, 68, 7, 0.39704250224770465);
        network.set_weight(1, 68, 8, -0.020879254002672987);
        network.set_weight(1, 68, 9, -0.5135950521660813);
        network.set_weight(1, 69, 0, 0.14181855143117272);
        network.set_weight(1, 69, 1, 0.04410392320477907);
        network.set_weight(1, 69, 2, 0.8209775610248149);
        network.set_weight(1, 69, 3, 0.9289430914784245);
        network.set_weight(1, 69, 4, -0.07000430467973517);
        network.set_weight(1, 69, 5, -0.27054059460898827);
        network.set_weight(1, 69, 6, 0.1724625969379081);
        network.set_weight(1, 69, 7, -0.775509779082266);
        network.set_weight(1, 69, 8, 0.05556302950606917);
        network.set_weight(1, 69, 9, -0.7999523012913963);
        network.set_weight(1, 70, 0, -0.44959442384305515);
        network.set_weight(1, 70, 1, 0.5161959704011823);
        network.set_weight(1, 70, 2, 0.5406840280608793);
        network.set_weight(1, 70, 3, -0.045793754369626516);
        network.set_weight(1, 70, 4, 0.9276466084499755);
        network.set_weight(1, 70, 5, -0.696526376099057);
        network.set_weight(1, 70, 6, -0.374538042703602);
        network.set_weight(1, 70, 7, 0.18493639885568847);
        network.set_weight(1, 70, 8, -0.10828155809218765);
        network.set_weight(1, 70, 9, 0.2966254784505451);
        network.set_weight(1, 71, 0, -0.82280397825286);
        network.set_weight(1, 71, 1, 0.438420802246154);
        network.set_weight(1, 71, 2, -0.6742608955085989);
        network.set_weight(1, 71, 3, -0.4592520492487042);
        network.set_weight(1, 71, 4, -0.6407683727566269);
        network.set_weight(1, 71, 5, 0.4408338887465908);
        network.set_weight(1, 71, 6, -0.9204947561734165);
        network.set_weight(1, 71, 7, 0.9541574365738494);
        network.set_weight(1, 71, 8, -0.25294440413475905);
        network.set_weight(1, 71, 9, -0.5346780524507886);
        network.set_weight(1, 72, 0, -0.3474414196492204);
        network.set_weight(1, 72, 1, -0.008599061601999303);
        network.set_weight(1, 72, 2, -0.5397590714227414);
        network.set_weight(1, 72, 3, 0.5235436216654081);
        network.set_weight(1, 72, 4, 0.5106433077324097);
        network.set_weight(1, 72, 5, 0.25820484597220217);
        network.set_weight(1, 72, 6, 0.8121553584322363);
        network.set_weight(1, 72, 7, 0.4444285305338864);
        network.set_weight(1, 72, 8, -0.6792082394495529);
        network.set_weight(1, 72, 9, -0.4711546904275643);
        network.set_weight(1, 73, 0, -0.04696924174859318);
        network.set_weight(1, 73, 1, -0.38130277479334884);
        network.set_weight(1, 73, 2, -0.2075055328823805);
        network.set_weight(1, 73, 3, -0.050901880331609695);
        network.set_weight(1, 73, 4, 0.5675070012670411);
        network.set_weight(1, 73, 5, 0.08759106636635683);
        network.set_weight(1, 73, 6, 0.6754560758806081);
        network.set_weight(1, 73, 7, 0.21601690212403457);
        network.set_weight(1, 73, 8, -0.9850340219867293);
        network.set_weight(1, 73, 9, 0.9753910949482201);
        network.set_weight(1, 74, 0, -0.7063484733951664);
        network.set_weight(1, 74, 1, -0.20881281343219293);
        network.set_weight(1, 74, 2, -0.9612565114284353);
        network.set_weight(1, 74, 3, 0.04995003661687103);
        network.set_weight(1, 74, 4, 0.3554370845990029);
        network.set_weight(1, 74, 5, -0.4243079128922109);
        network.set_weight(1, 74, 6, 0.8568885200968166);
        network.set_weight(1, 74, 7, -0.7000886719158559);
        network.set_weight(1, 74, 8, 0.8971492303910027);
        network.set_weight(1, 74, 9, 0.5724297937484311);
        network.set_weight(1, 75, 0, -0.6956249319129271);
        network.set_weight(1, 75, 1, -0.7940447811376155);
        network.set_weight(1, 75, 2, -0.8677094417345717);
        network.set_weight(1, 75, 3, 0.1559615448956131);
        network.set_weight(1, 75, 4, -0.49826585070563434);
        network.set_weight(1, 75, 5, 0.9423450832288318);
        network.set_weight(1, 75, 6, -0.7692634380483998);
        network.set_weight(1, 75, 7, 0.6154185181653862);
        network.set_weight(1, 75, 8, -0.24887150124067747);
        network.set_weight(1, 75, 9, -0.9711212470235235);
        network.set_weight(1, 76, 0, 0.47208628469588265);
        network.set_weight(1, 76, 1, 0.17490913088594096);
        network.set_weight(1, 76, 2, -0.5407091797521324);
        network.set_weight(1, 76, 3, -0.28898541819827295);
        network.set_weight(1, 76, 4, -0.6998930475954817);
        network.set_weight(1, 76, 5, -0.7306370681169838);
        network.set_weight(1, 76, 6, 0.13889364112078129);
        network.set_weight(1, 76, 7, 0.0789225353041878);
        network.set_weight(1, 76, 8, -0.593553367794631);
        network.set_weight(1, 76, 9, -0.405214067696138);
        network.set_weight(1, 77, 0, 0.9916791516722028);
        network.set_weight(1, 77, 1, -0.2938254429721956);
        network.set_weight(1, 77, 2, -0.0250814127232164);
        network.set_weight(1, 77, 3, -0.6812582245899108);
        network.set_weight(1, 77, 4, -0.9508133969522892);
        network.set_weight(1, 77, 5, 0.22422912604071965);
        network.set_weight(1, 77, 6, -0.5177277615091784);
        network.set_weight(1, 77, 7, 0.486307618916183);
        network.set_weight(1, 77, 8, -0.5373150009364049);
        network.set_weight(1, 77, 9, -0.26242830598379974);
        network.set_weight(1, 78, 0, 0.294948118024136);
        network.set_weight(1, 78, 1, 0.382945692894719);
        network.set_weight(1, 78, 2, -0.3121397152689036);
        network.set_weight(1, 78, 3, 0.4540412897435391);
        network.set_weight(1, 78, 4, 0.12526253180883717);
        network.set_weight(1, 78, 5, 0.6301117255794542);
        network.set_weight(1, 78, 6, 0.5147749980652814);
        network.set_weight(1, 78, 7, 0.6432425067208738);
        network.set_weight(1, 78, 8, -0.47121151446256637);
        network.set_weight(1, 78, 9, -0.8374312170648133);
        network.set_weight(1, 79, 0, -0.9943748969591806);
        network.set_weight(1, 79, 1, -0.33933275529221607);
        network.set_weight(1, 79, 2, -0.17216014731594265);
        network.set_weight(1, 79, 3, -0.46921735825329214);
        network.set_weight(1, 79, 4, -0.6797651904059108);
        network.set_weight(1, 79, 5, -0.14554964380836966);
        network.set_weight(1, 79, 6, -0.3888547310949533);
        network.set_weight(1, 79, 7, -0.9359693399855749);
        network.set_weight(1, 79, 8, 0.6739525774425081);
        network.set_weight(1, 79, 9, 0.03950035885873748);
        network.set_weight(1, 80, 0, -0.6498059570601897);
        network.set_weight(1, 80, 1, -0.33995473730746206);
        network.set_weight(1, 80, 2, 0.15207244971627265);
        network.set_weight(1, 80, 3, -0.8061023523473614);
        network.set_weight(1, 80, 4, 0.039128376304915946);
        network.set_weight(1, 80, 5, 0.4731628790086797);
        network.set_weight(1, 80, 6, -0.6718122830810691);
        network.set_weight(1, 80, 7, 0.017849890065988916);
        network.set_weight(1, 80, 8, 0.792622665528447);
        network.set_weight(1, 80, 9, 0.4072008334280828);
        network.set_weight(1, 81, 0, -0.1057862825795175);
        network.set_weight(1, 81, 1, -0.9493757547755037);
        network.set_weight(1, 81, 2, 0.8620250492367978);
        network.set_weight(1, 81, 3, 0.9635106730992866);
        network.set_weight(1, 81, 4, 0.5678864710074407);
        network.set_weight(1, 81, 5, -0.5414370555515038);
        network.set_weight(1, 81, 6, 0.16530038112243206);
        network.set_weight(1, 81, 7, 0.6078336909007664);
        network.set_weight(1, 81, 8, 0.06268308442011827);
        network.set_weight(1, 81, 9, 0.9401737040803528);
        network.set_weight(1, 82, 0, 0.1929756881515985);
        network.set_weight(1, 82, 1, -0.9883041499397616);
        network.set_weight(1, 82, 2, -0.40552395047745526);
        network.set_weight(1, 82, 3, 0.9914361499597835);
        network.set_weight(1, 82, 4, 0.9617219615296904);
        network.set_weight(1, 82, 5, 0.8457678569929123);
        network.set_weight(1, 82, 6, -0.5888081310163535);
        network.set_weight(1, 82, 7, -0.49173907366669534);
        network.set_weight(1, 82, 8, 0.2104102110324002);
        network.set_weight(1, 82, 9, -0.9305388869210798);
        network.set_weight(1, 83, 0, 0.7821211298343933);
        network.set_weight(1, 83, 1, -0.020355476953410445);
        network.set_weight(1, 83, 2, 0.46196905390342446);
        network.set_weight(1, 83, 3, 0.22697578504293192);
        network.set_weight(1, 83, 4, -0.27823840779701836);
        network.set_weight(1, 83, 5, 0.8058663446269807);
        network.set_weight(1, 83, 6, -0.5110805388462607);
        network.set_weight(1, 83, 7, 0.024574104624991877);
        network.set_weight(1, 83, 8, -0.15855113158440415);
        network.set_weight(1, 83, 9, 0.43686043967279);
        network.set_weight(1, 84, 0, 0.41466184945776874);
        network.set_weight(1, 84, 1, -0.09759309365090152);
        network.set_weight(1, 84, 2, -0.3390509691895609);
        network.set_weight(1, 84, 3, -0.5828697060089545);
        network.set_weight(1, 84, 4, -0.9063687070265722);
        network.set_weight(1, 84, 5, -0.11980605173553771);
        network.set_weight(1, 84, 6, -0.9944585022465724);
        network.set_weight(1, 84, 7, -0.293840345155967);
        network.set_weight(1, 84, 8, 0.9370261987686959);
        network.set_weight(1, 84, 9, 0.30499259611064655);
        network.set_weight(1, 85, 0, -0.17248621312390777);
        network.set_weight(1, 85, 1, 0.8888483965114944);
        network.set_weight(1, 85, 2, 0.9903363517459365);
        network.set_weight(1, 85, 3, 0.5532727549623881);
        network.set_weight(1, 85, 4, -0.3915205319162198);
        network.set_weight(1, 85, 5, 0.7717225726194221);
        network.set_weight(1, 85, 6, 0.5818211973574015);
        network.set_weight(1, 85, 7, 0.29862605298500666);
        network.set_weight(1, 85, 8, -0.06239775826441707);
        network.set_weight(1, 85, 9, -0.4610709618697);
        network.set_weight(1, 86, 0, -0.40448600562366677);
        network.set_weight(1, 86, 1, 0.036057933011810706);
        network.set_weight(1, 86, 2, 0.009366850787752012);
        network.set_weight(1, 86, 3, -0.09501034562327493);
        network.set_weight(1, 86, 4, 0.5910427171666635);
        network.set_weight(1, 86, 5, -0.5011685765846523);
        network.set_weight(1, 86, 6, -0.7534307130960065);
        network.set_weight(1, 86, 7, -0.6571744611049413);
        network.set_weight(1, 86, 8, 0.2399209948378418);
        network.set_weight(1, 86, 9, -0.9360601728246061);
        network.set_weight(1, 87, 0, -0.3765699230913968);
        network.set_weight(1, 87, 1, -0.6588875982003259);
        network.set_weight(1, 87, 2, -0.9461848366034518);
        network.set_weight(1, 87, 3, 0.8867319814029595);
        network.set_weight(1, 87, 4, -0.27207241627370693);
        network.set_weight(1, 87, 5, 0.8019868720676904);
        network.set_weight(1, 87, 6, -0.03691687018708656);
        network.set_weight(1, 87, 7, 0.9401395741285334);
        network.set_weight(1, 87, 8, -0.7218097678128399);
        network.set_weight(1, 87, 9, -0.2577050015458826);
        network.set_weight(1, 88, 0, -0.5028143591183352);
        network.set_weight(1, 88, 1, 0.4979349591267508);
        network.set_weight(1, 88, 2, -0.513862189232404);
        network.set_weight(1, 88, 3, 0.1192922924147839);
        network.set_weight(1, 88, 4, -0.6219494756241071);
        network.set_weight(1, 88, 5, -0.8664444980907844);
        network.set_weight(1, 88, 6, 0.7792172127457921);
        network.set_weight(1, 88, 7, 0.5431690726148695);
        network.set_weight(1, 88, 8, 0.5876974364359779);
        network.set_weight(1, 88, 9, 0.994243175301408);
        network.set_weight(1, 89, 0, 0.7014909033390475);
        network.set_weight(1, 89, 1, -0.8603582987976937);
        network.set_weight(1, 89, 2, -0.4345439765703174);
        network.set_weight(1, 89, 3, -0.1732799253762507);
        network.set_weight(1, 89, 4, 0.8977543286448839);
        network.set_weight(1, 89, 5, -0.9585052147730961);
        network.set_weight(1, 89, 6, 0.4772603035255234);
        network.set_weight(1, 89, 7, -0.8684888568923905);
        network.set_weight(1, 89, 8, -0.6550535237224189);
        network.set_weight(1, 89, 9, -0.5083966622338103);
        network.set_weight(1, 90, 0, -0.11051912570379385);
        network.set_weight(1, 90, 1, 0.8086088692834559);
        network.set_weight(1, 90, 2, 0.716375230151151);
        network.set_weight(1, 90, 3, -0.3672990041418154);
        network.set_weight(1, 90, 4, 0.9692200411492353);
        network.set_weight(1, 90, 5, -0.8776250296151744);
        network.set_weight(1, 90, 6, -0.8820746610022789);
        network.set_weight(1, 90, 7, -0.037968183713793735);
        network.set_weight(1, 90, 8, -0.3194025513754739);
        network.set_weight(1, 90, 9, 0.7394715347924286);
        network.set_weight(1, 91, 0, -0.9491728449903727);
        network.set_weight(1, 91, 1, 0.766959738638308);
        network.set_weight(1, 91, 2, -0.43488704362269104);
        network.set_weight(1, 91, 3, 0.5803624476595532);
        network.set_weight(1, 91, 4, -0.9673385913167682);
        network.set_weight(1, 91, 5, 0.8297225948523039);
        network.set_weight(1, 91, 6, 0.6537643713409351);
        network.set_weight(1, 91, 7, 0.1664565056700824);
        network.set_weight(1, 91, 8, 0.6644606133781603);
        network.set_weight(1, 91, 9, 0.6035677617181305);
        network.set_weight(1, 92, 0, 0.7099042377941245);
        network.set_weight(1, 92, 1, 0.36723118067828553);
        network.set_weight(1, 92, 2, 0.9399734590131754);
        network.set_weight(1, 92, 3, 0.15492715271634672);
        network.set_weight(1, 92, 4, 0.39535701176631877);
        network.set_weight(1, 92, 5, -0.04899585837393938);
        network.set_weight(1, 92, 6, 0.9757619488566918);
        network.set_weight(1, 92, 7, -0.9552759680130407);
        network.set_weight(1, 92, 8, 0.4748524532792373);
        network.set_weight(1, 92, 9, -0.5151761776404471);
        network.set_weight(1, 93, 0, 0.3464944626871709);
        network.set_weight(1, 93, 1, -0.6473524594843327);
        network.set_weight(1, 93, 2, -0.3152854524707982);
        network.set_weight(1, 93, 3, 0.3735959043266268);
        network.set_weight(1, 93, 4, -0.18228763284147553);
        network.set_weight(1, 93, 5, 0.32881398493812175);
        network.set_weight(1, 93, 6, 0.2920840068478574);
        network.set_weight(1, 93, 7, -0.7714957373828235);
        network.set_weight(1, 93, 8, 0.38753191324221015);
        network.set_weight(1, 93, 9, -0.44265933366589993);
        network.set_weight(1, 94, 0, -0.15048712931949781);
        network.set_weight(1, 94, 1, 0.026553898861169323);
        network.set_weight(1, 94, 2, -0.2411015632106297);
        network.set_weight(1, 94, 3, -0.4722222062342667);
        network.set_weight(1, 94, 4, -0.6754825433513274);
        network.set_weight(1, 94, 5, 0.2534182598508927);
        network.set_weight(1, 94, 6, 0.510422230700742);
        network.set_weight(1, 94, 7, -0.6176146299767427);
        network.set_weight(1, 94, 8, 0.20688734139293818);
        network.set_weight(1, 94, 9, -0.7373371030602358);
        network.set_weight(1, 95, 0, 0.28829391364472956);
        network.set_weight(1, 95, 1, -0.40310967659693886);
        network.set_weight(1, 95, 2, -0.28304819789863167);
        network.set_weight(1, 95, 3, 0.3420210785075475);
        network.set_weight(1, 95, 4, -0.07212680455004228);
        network.set_weight(1, 95, 5, -0.10101610064946742);
        network.set_weight(1, 95, 6, -0.3931150142736297);
        network.set_weight(1, 95, 7, 0.6263284378148339);
        network.set_weight(1, 95, 8, -0.39256763896476543);
        network.set_weight(1, 95, 9, 0.2968964989397238);
        network.set_weight(1, 96, 0, -0.8810490759941643);
        network.set_weight(1, 96, 1, 0.8208698647644792);
        network.set_weight(1, 96, 2, 0.9325007708703341);
        network.set_weight(1, 96, 3, -0.6335136288687282);
        network.set_weight(1, 96, 4, -0.1174433897354159);
        network.set_weight(1, 96, 5, -0.7845095715675683);
        network.set_weight(1, 96, 6, -0.1722963846682415);
        network.set_weight(1, 96, 7, 0.7362934343473382);
        network.set_weight(1, 96, 8, 0.18723144032284145);
        network.set_weight(1, 96, 9, -0.725026695242883);
        network.set_weight(1, 97, 0, 0.9390099829298066);
        network.set_weight(1, 97, 1, 0.11481440552968558);
        network.set_weight(1, 97, 2, -0.8512974001373081);
        network.set_weight(1, 97, 3, -0.26875883643124365);
        network.set_weight(1, 97, 4, -0.7084635244569903);
        network.set_weight(1, 97, 5, 0.7663124634652039);
        network.set_weight(1, 97, 6, -0.2168849591793729);
        network.set_weight(1, 97, 7, -0.000633165696908744);
        network.set_weight(1, 97, 8, 0.6806364704175063);
        network.set_weight(1, 97, 9, 0.135374350742401);
        network.set_weight(1, 98, 0, -0.9029707134373472);
        network.set_weight(1, 98, 1, -0.8511318358375914);
        network.set_weight(1, 98, 2, -0.652801809937334);
        network.set_weight(1, 98, 3, 0.34922559075037074);
        network.set_weight(1, 98, 4, 0.23471020229985662);
        network.set_weight(1, 98, 5, -0.2846020890567711);
        network.set_weight(1, 98, 6, -0.37380839679528743);
        network.set_weight(1, 98, 7, -0.8396590768673553);
        network.set_weight(1, 98, 8, -0.8606744509541071);
        network.set_weight(1, 98, 9, 0.27014341733543);
        network.set_weight(1, 99, 0, 0.5902678296694981);
        network.set_weight(1, 99, 1, 0.004590044386501457);
        network.set_weight(1, 99, 2, 0.37753058271897477);
        network.set_weight(1, 99, 3, -0.10497716609544949);
        network.set_weight(1, 99, 4, -0.8912702776767409);
        network.set_weight(1, 99, 5, -0.9953653834479579);
        network.set_weight(1, 99, 6, 0.6027259703285708);
        network.set_weight(1, 99, 7, 0.7342529356176501);
        network.set_weight(1, 99, 8, 0.9674247030324907);
        network.set_weight(1, 99, 9, -0.3850220210630968);
        network.set_bias(0, 0, 0.46738088791167454);
        network.set_bias(0, 1, 0.4803598760982053);
        network.set_bias(0, 2, 0.33115522182002);
        network.set_bias(0, 3, 0.6413640135341026);
        network.set_bias(0, 4, 0.9110220607687904);
        network.set_bias(0, 5, -0.5966125147965753);
        network.set_bias(0, 6, 0.45655295248759664);
        network.set_bias(0, 7, -0.17330365703036343);
        network.set_bias(0, 8, 0.6545528191200518);
        network.set_bias(0, 9, 0.8249080782318152);
        network.set_bias(0, 10, 0.8827412899069482);
        network.set_bias(0, 11, 0.513546843672072);
        network.set_bias(0, 12, 0.8390957157112653);
        network.set_bias(0, 13, -0.7639219681269611);
        network.set_bias(0, 14, -0.8121886577933397);
        network.set_bias(0, 15, -0.16630939943283907);
        network.set_bias(0, 16, 0.4403918419956403);
        network.set_bias(0, 17, 0.6139216384355288);
        network.set_bias(0, 18, 0.67403114514728);
        network.set_bias(0, 19, -0.7368806523718068);
        network.set_bias(0, 20, 0.3680612917245438);
        network.set_bias(0, 21, 0.10826385398145044);
        network.set_bias(0, 22, -0.6657465321838751);
        network.set_bias(0, 23, -0.05113945568994582);
        network.set_bias(0, 24, 0.5502683600501985);
        network.set_bias(0, 25, -0.6695969387419607);
        network.set_bias(0, 26, 0.7899828803376967);
        network.set_bias(0, 27, -0.6714385365479043);
        network.set_bias(0, 28, -0.8365198253151149);
        network.set_bias(0, 29, -0.2733724813733174);
        network.set_bias(0, 30, 0.5566298037751976);
        network.set_bias(0, 31, 0.5502243056968041);
        network.set_bias(0, 32, 0.729902514804389);
        network.set_bias(0, 33, -0.640812175147077);
        network.set_bias(0, 34, -0.5640687201139172);
        network.set_bias(0, 35, -0.5881864621065576);
        network.set_bias(0, 36, -0.585498307750969);
        network.set_bias(0, 37, -0.1548696227541846);
        network.set_bias(0, 38, 0.9900411341197748);
        network.set_bias(0, 39, 0.35469158902442954);
        network.set_bias(0, 40, -0.3199563777517145);
        network.set_bias(0, 41, 0.9200065183602311);
        network.set_bias(0, 42, 0.12467072604036478);
        network.set_bias(0, 43, -0.9224407177535068);
        network.set_bias(0, 44, -0.8531778869775568);
        network.set_bias(0, 45, 0.10803968804822106);
        network.set_bias(0, 46, -0.6115417045395091);
        network.set_bias(0, 47, -0.4617527164278017);
        network.set_bias(0, 48, -0.25461582177487485);
        network.set_bias(0, 49, 0.19303363798680762);
        network.set_bias(0, 50, 0.8623623599282264);
        network.set_bias(0, 51, -0.8236685631607894);
        network.set_bias(0, 52, 0.8460833119761737);
        network.set_bias(0, 53, -0.1395687625769957);
        network.set_bias(0, 54, -0.37832052911915515);
        network.set_bias(0, 55, -0.42273270239013283);
        network.set_bias(0, 56, -0.2865419112316898);
        network.set_bias(0, 57, -0.15940785448686579);
        network.set_bias(0, 58, -0.20733436726481336);
        network.set_bias(0, 59, 0.6932627484176812);
        network.set_bias(0, 60, -0.3219418715402842);
        network.set_bias(0, 61, -0.5205801972143458);
        network.set_bias(0, 62, 0.86361590508567);
        network.set_bias(0, 63, 0.5571852950277094);
        network.set_bias(0, 64, -0.9434334554037924);
        network.set_bias(0, 65, 0.11111169400919785);
        network.set_bias(0, 66, 0.2533579206382033);
        network.set_bias(0, 67, -0.7037774012813636);
        network.set_bias(0, 68, -0.33436575022954873);
        network.set_bias(0, 69, -0.6382968121681676);
        network.set_bias(0, 70, -0.8293823979360573);
        network.set_bias(0, 71, 0.024643292740101463);
        network.set_bias(0, 72, -0.8529877900726661);
        network.set_bias(0, 73, -0.07805868198902344);
        network.set_bias(0, 74, -0.04358403082349893);
        network.set_bias(0, 75, 0.19365322836436683);
        network.set_bias(0, 76, 0.7092779370111126);
        network.set_bias(0, 77, -0.9467721461353786);
        network.set_bias(0, 78, -0.6435226644106884);
        network.set_bias(0, 79, 0.33552054851154867);
        network.set_bias(0, 80, -0.14429049560057594);
        network.set_bias(0, 81, -0.6405246534069011);
        network.set_bias(0, 82, -0.620537477008354);
        network.set_bias(0, 83, -0.6251477711790079);
        network.set_bias(0, 84, 0.8415106801743977);
        network.set_bias(0, 85, -0.23829946861078133);
        network.set_bias(0, 86, 0.15148999581134492);
        network.set_bias(0, 87, 0.1429897961875004);
        network.set_bias(0, 88, 0.5102344664926786);
        network.set_bias(0, 89, -0.03609683994640411);
        network.set_bias(0, 90, -0.2279598187312264);
        network.set_bias(0, 91, 0.42713286886758817);
        network.set_bias(0, 92, -0.34992773523739507);
        network.set_bias(0, 93, -0.8036500994179663);
        network.set_bias(0, 94, 0.9950198625130982);
        network.set_bias(0, 95, 0.8658908585067298);
        network.set_bias(0, 96, -0.08640630151477047);
        network.set_bias(0, 97, 0.4455257590465247);
        network.set_bias(0, 98, 0.6342313222677456);
        network.set_bias(0, 99, -0.23833871763710635);
        network.set_bias(1, 0, -0.6377481792286708);
        network.set_bias(1, 1, -0.6810690632591079);
        network.set_bias(1, 2, 0.7552489086542635);
        network.set_bias(1, 3, 0.9801064406077471);
        network.set_bias(1, 4, -0.10239161290162224);
        network.set_bias(1, 5, 0.9585629722701956);
        network.set_bias(1, 6, -0.05271846673953484);
        network.set_bias(1, 7, -0.09455944390415238);
        network.set_bias(1, 8, -0.4629023377869699);
        network.set_bias(1, 9, 0.1349328228000346);
        let mut input = Matrix::new(1, 30);
        input[0][0] = 0.39056786006949973;
        input[0][1] = 0.8671029005564895;
        input[0][2] = 0.9517088820269637;
        input[0][3] = 0.7134084047142462;
        input[0][4] = 0.43767140793888093;
        input[0][5] = 0.366013184840549;
        input[0][6] = 0.9714372780977508;
        input[0][7] = 0.6798693914892724;
        input[0][8] = 0.6267509939326439;
        input[0][9] = 0.0005776374550090502;
        input[0][10] = 0.9855769009696002;
        input[0][11] = 0.3378614996659507;
        input[0][12] = 0.502443086416604;
        input[0][13] = 0.16531049256553976;
        input[0][14] = 0.9652079791161021;
        input[0][15] = 0.8825422459401617;
        input[0][16] = 0.39585119277605896;
        input[0][17] = 0.797284613885853;
        input[0][18] = 0.9970890641234826;
        input[0][19] = 0.8711001569924656;
        input[0][20] = 0.10274921173969909;
        input[0][21] = 0.07955774574207675;
        input[0][22] = 0.34525513984349754;
        input[0][23] = 0.4888184039467476;
        input[0][24] = 0.233255096924732;
        input[0][25] = 0.15834461070890982;
        input[0][26] = 0.23173442230594088;
        input[0][27] = 0.9577618542619916;
        input[0][28] = 0.8096768073887063;
        input[0][29] = 0.1552422998952926;
        let output = network.forward(&input);
        assert!((output[0][0] - 6.130995117193153).abs() < 1e-9);
        assert!((output[0][1] - 0.0).abs() < 1e-9);
        assert!((output[0][2] - 0.0).abs() < 1e-9);
        assert!((output[0][3] - 9.805874069973605).abs() < 1e-9);
        assert!((output[0][4] - 0.0).abs() < 1e-9);
        assert!((output[0][5] - 0.0).abs() < 1e-9);
        assert!((output[0][6] - 4.749469148536905).abs() < 1e-9);
        assert!((output[0][7] - 0.5835892414595039).abs() < 1e-9);
        assert!((output[0][8] - 2.906571691180753).abs() < 1e-9);
        assert!((output[0][9] - 7.079195908228607).abs() < 1e-9);
    }
}